/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/PQ/WPJS";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./PQ/pages/quato/quatoDetail/quatoDetailWP.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./PQ/js/axios.js":
/*!************************!*\
  !*** ./PQ/js/axios.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nwindow.httpRquest = sessionStorage.getItem('httpRquest'); //请求域名 api地址\n\nwindow.imgHttp = ''; //图片 web地址\n\nwindow.payHttp = ''; //支付 pay地址\n\nwindow.environment = 'build'; //test测试环境  build正式环境\n\nif (sessionStorage.getItem('httpRquest') && sessionStorage.getItem('imgHttp') && sessionStorage.getItem('payHttp')) {\n  httpRquest = sessionStorage.getItem('httpRquest');\n  imgHttp = sessionStorage.getItem('imgHttp');\n  payHttp = sessionStorage.getItem('payHttp');\n} else {\n  $.ajax({\n    method: 'get',\n    url: 'https://t9yxn3sp.api.lncld.net/1.1/classes/domain',\n    headers: {\n      'X-LC-Id': 't9yxn3sPQlDjkjEip2C2njdz-gzGzoHsz',\n      'X-LC-Key': 'fPMiAwI5MiUytaCwcDDlvxE2'\n    },\n    timeout: 5000,\n    async: false,\n    success: function success(res) {\n      console.log(res);\n\n      for (var i = 0; i < res.results.length; i++) {\n        if (environment == res.results[i].type) {\n          if (res.results[i].domainType == 'api') {\n            httpRquest = res.results[i].domain;\n            sessionStorage.setItem('httpRquest', httpRquest);\n          } else if (res.results[i].domainType == 'web') {\n            imgHttp = res.results[i].domain;\n            sessionStorage.setItem('imgHttp', imgHttp);\n          } else if (res.results[i].domainType == 'pay') {\n            payHttp = res.results[i].domain;\n            sessionStorage.setItem('payHttp', payHttp);\n          }\n        }\n      }\n\n      console.log(imgHttp);\n    },\n    error: function error() {\n      $.ajax({\n        method: 'get',\n        url: 'https://api2.bmob.cn/1/classes/domain',\n        headers: {\n          'X-Bmob-Application-Id': '0cdd6ae842b7ba6a1d01943abafbc4af',\n          'X-Bmob-REST-API-Key': '8c745e5a4e22b00daa2820ad851a2d80',\n          'Content-Type': 'application/json'\n        },\n        timeout: 5000,\n        async: false,\n        success: function success(res) {\n          console.log(res);\n\n          for (var i = 0; i < res.results.length; i++) {\n            if (environment == res.results[i].type) {\n              if (res.results[i].domainType == 'api') {\n                httpRquest = res.results[i].domain;\n                sessionStorage.setItem('httpRquest', httpRquest);\n              } else if (res.results[i].domainType == 'web') {\n                imgHttp = res.results[i].domain;\n                sessionStorage.setItem('imgHttp', imgHttp);\n              } else if (res.results[i].domainType == 'pay') {\n                payHttp = res.results[i].domain;\n                sessionStorage.setItem('payHttp', payHttp);\n              }\n            }\n          }\n\n          console.log(imgHttp);\n        },\n        error: function error() {\n          httpRquest = 'https://apipt.dktai.cn';\n          sessionStorage.setItem('httpRquest', httpRquest);\n          imgHttp = 'https://webpt.dktai.cn';\n          sessionStorage.setItem('imgHttp', imgHttp);\n          payHttp = 'https://paypt.dktai.cn';\n          sessionStorage.setItem('payHttp', payHttp);\n        }\n      });\n    }\n  });\n}\n\nwindow.request = {\n  get: '',\n  post: '',\n  all: ''\n};\n\nrequest.get = function () {\n  var url = ''; //请求地址\n\n  var params = {}; //请求参数\n\n  var headers = {}; //请求头\n\n  var timeOut = ''; //请求超时\n\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (typeof arguments[i] == 'string' && arguments[i].indexOf('/') != -1) {\n      //请求时地址\n      url = arguments[i];\n    }\n\n    if (i == 1 && _typeof(arguments[i]) == 'object') {\n      //参数\n      params = arguments[i];\n    }\n\n    if (i == 2 && _typeof(arguments[i]) == 'object') {\n      //参数\n      headers = arguments[i];\n    }\n\n    if (typeof arguments[i] == 'number') {\n      //超时\n      timeOut = arguments[i];\n    }\n  }\n\n  if (url == '') {\n    console.log('请传入接口地址');\n    return;\n  }\n\n  var api = httpRquest + url;\n\n  if (JSON.stringify(params) != '{}') {\n    api = api + '?';\n\n    for (var i in params) {\n      api += i + '=' + params[i] + '&';\n    }\n\n    api = api.substr(0, api.length - 1);\n  }\n\n  return new Promise(function (resolve, reject) {\n    axios.get(api, params, {\n      headers: headers\n    }).then(function (response) {\n      resolve(response.data);\n    })[\"catch\"](function (err) {\n      reject(err);\n    });\n  });\n};\n\nrequest.post = function () {\n  var url = ''; //请求地址\n\n  var params = {}; //请求参数\n\n  var headers = {}; //请求头\n\n  var timeOut = 5000; //请求超时\n\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (typeof arguments[i] == 'string' && arguments[i].indexOf('/') != -1) {\n      //请求时地址\n      url = arguments[i];\n    }\n\n    if (i == 1 && _typeof(arguments[i]) == 'object') {\n      //参数\n      params = arguments[i];\n    }\n\n    if (i == 2 && _typeof(arguments[i]) == 'object') {\n      //参数\n      headers = arguments[i];\n    }\n\n    if (typeof arguments[i] == 'number') {\n      //超时\n      timeOut = arguments[i];\n    }\n  }\n\n  if (url == '') {\n    console.log('请传入接口地址');\n    return;\n  }\n\n  params = jsonToFrom(params);\n  var api = httpRquest + url;\n  return new Promise(function (resolve, reject) {\n    axios.post(api, params, {\n      headers: headers,\n      timeout: timeOut\n    }).then(function (response) {\n      resolve(response.data);\n\n      if (response.data.code == '401') {\n        setTimeout(function () {\n          localStorage.removeItem(\"secret\");\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem('userInfo');\n          var urlParams = {};\n\n          if (GetURLParam()) {\n            urlParams = GetURLParam();\n          }\n\n          urlParams.backPage = '/PQ/pages/my/my.html';\n          console.log(urlParams);\n          pushRoute({\n            page: '/PQ/pages/my/login/login.html',\n            params: urlParams\n          });\n        }, 1000);\n      }\n    })[\"catch\"](function (err) {\n      // \t\t\tlayer.msg('系统异常',{\n      // \t\t\t\ttime:1500,\n      // \t\t\t})\n      reject(err);\n    });\n  });\n};\n\nfunction jsonToFrom(data) {\n  var res = new FormData();\n\n  for (var i in data) {\n    res.append(i, data[i]);\n  }\n\n  return res;\n}\n\n//# sourceURL=webpack:///./PQ/js/axios.js?");

/***/ }),

/***/ "./PQ/js/common.js":
/*!*************************!*\
  !*** ./PQ/js/common.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//阻止浏览器默认事件\ndocument.getElementsByTagName(\"body\")[0].addEventListener('touchstart', function (e) {\n  if (e.target.nodeName == 'INPUT' || e.target.nodeName == 'SELECT' || e.target.classList[0] == 'keyboard-item' || e.target.classList[0] == 'list-head' || e.target.classList[0] == 'list-count' || e.target.classList[0] == 'trade-list-li') {\n    return;\n  }\n\n  e.preventDefault();\n}); // var deviceWidth = document.getElementsByTagName('body')[0].clientWidth;\n// document.getElementById('viewport').content = 'width='+deviceWidth+'px,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no';\n//获取年月日\n\nwindow.getNowFormatDate = function getNowFormatDate() {\n  var date = new Date();\n  var seperator1 = \"/\";\n  var month = date.getMonth() + 1;\n  var strDate = date.getDate();\n\n  if (month >= 1 && month <= 9) {\n    month = \"0\" + month;\n  }\n\n  if (strDate >= 0 && strDate <= 9) {\n    strDate = \"0\" + strDate;\n  }\n\n  var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate;\n  return currentdate;\n}; //获取url参数\n\n\nwindow.GetURLParam = function GetURLParam() {\n  if (location.href.indexOf('?') == -1) {\n    return false;\n  }\n\n  var url = decodeURI(decodeURI(location.href.split('?')[1])); //获取url中\"?\"符后的字串\n\n  var theRequest = {};\n  var strs = url.split(\"&\");\n\n  for (var i = 0; i < strs.length; i++) {\n    theRequest[strs[i].split(\"=\")[0]] = unescape(strs[i].split(\"=\")[1]);\n  }\n\n  return theRequest;\n}; //格式化时间\n\n\nwindow.getFormalDate = function getFormalDate(time, type) {\n  var a = new Date(time);\n  var year = a.getFullYear();\n  var month = a.getMonth() + 1;\n\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  var day = a.getDate();\n\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n\n  var hour = a.getHours();\n\n  if (hour < 10) {\n    hour = \"0\" + hour;\n  }\n\n  var min = a.getMinutes();\n\n  if (min < 10) {\n    min = \"0\" + min;\n  }\n\n  var sec = a.getSeconds();\n\n  if (sec < 10) {\n    sec = \"0\" + sec;\n  }\n\n  var dateString = '';\n\n  switch (type) {\n    case 'yyyy/mm/dd hh:mm:ss':\n      dateString = year + '/' + month + '/' + day + ' ' + hour + ':' + min + ':' + sec;\n      break;\n\n    case 'yyyy/mm/dd hh:mm':\n      dateString = year + '/' + month + '/' + day + ' ' + hour + ':' + min;\n      break;\n\n    case 'yyyy/mm/dd hh':\n      dateString = year + '/' + month + '/' + day + ' ' + hour;\n      break;\n\n    case 'yyyy/mm/dd':\n      dateString = year + '/' + month + '/' + day;\n      break;\n\n    case 'hh:mm:ss':\n      dateString = hour + ':' + min + ':' + sec;\n      break;\n\n    case 'hh:mm':\n      dateString = hour + ':' + min;\n      break;\n\n    default:\n      break;\n  }\n\n  ;\n  return dateString;\n}; //url参数\n\n\nwindow.urlParams = {}; //用户信息\n\nwindow.userInfo = {}; //用户信息\n\nwindow.isLogin = false; //是否登录\n//获取用户信息\n\n(function getUseInfo() {\n  if (localStorage.getItem('userInfo')) {\n    userInfo = JSON.parse(localStorage.getItem('userInfo'));\n    isLogin = true;\n  } else {\n    isLogin = false;\n  }\n})(); //判断模拟还是交易\n\n\nwindow.tradeType = 1; //0模拟 1交易\n\n(function getTradeType() {\n  if (localStorage.getItem('tradeType')) {\n    tradeType = localStorage.getItem('tradeType');\n  } else {\n    tradeType = 1;\n  }\n})(); //获取地址配置信息\n\n\nwindow.address1 = []; //游客行情\n\nwindow.address2 = []; //实盘行情\n\nwindow.address3 = []; //历史行情\n\nwindow.address4 = []; //模拟交易\n\nwindow.address5 = []; //实盘交易\n\n(function resizeLayer() {\n  window.onresize = function () {\n    setTimeout(function () {\n      $(\".layui-layer\").css({\n        \"top\": \"50%\",\n        \"left\": \"50%\",\n        \"transform\": \"translate(-50%,-50%)\"\n      });\n    }, 0);\n  };\n})(); //检测网络\n\n\nwindow.isNetworkConnect = false; // (function networkChange(){\n// \tvar EventUtil = {\n// 　　　　addHandler: function (element, type, handler) {\n// 　　　　　　if(element.addEventListener) { \n// 　　　　　　　　element.addEventListener(type, handler, false); \n// 　　　　　　}else if (element.attachEvent) {\n// 　　　　　　　　element.attachEvent(\"on\" + type, handler); \n// 　　　　　　}else { \n// 　　　　　　　　element[\"on\" + type] = handler;\n// 　　　　　　} \n// 　　　　}\n// 　　 }; \n// 　　EventUtil.addHandler(window, \"online\", function () { alert(\"Online\"); }); \n// 　　EventUtil.addHandler(window, \"offline\", function () { alert(\"Offline\"); });\n// })()\n\n//# sourceURL=webpack:///./PQ/js/common.js?");

/***/ }),

/***/ "./PQ/js/marketStore.js":
/*!******************************!*\
  !*** ./PQ/js/marketStore.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.marketStore = new Vuex.Store({\n  state: {\n    isReConnect: false,\n    //是否重连\n    isConnectMarket: false,\n    //是否连接行情\n    isMarketLogin: false,\n    //是否行情登录\n    isCanConnectTrade: false,\n    //是否可以链接交易\n    _internationalCommodity: [],\n    internationalCommodity: [],\n    //国际期货行情数据\n    domesticCommodity: [],\n    //国内期货行情数据\n    contractList: [],\n    //静态订阅行情 用于切换合约 避免重复渲染\n    allCommodity: [],\n    //全部合约\n    allSubsCommodity: [],\n    //全部订阅的合约\n    subsCommodity: [],\n    //订阅的所有行情数据\n    marketSocket: null,\n    //行情WS实例\n    marketConfig: {\n      version: '2.0',\n      url_address: '',\n      //ws://192.168.0.232:9102 ws://quote.vs.com:8888\n      userName: 'chenlin',\n      password: 'a123456',\n      subscribeType: ['FO', 'FI'] //需要订阅的合约类型\n\n    },\n    chooseQuatoType: 'FO',\n    currentQuato: '',\n    //当前选择的行情\n    LastData: {},\n    //选择的行情的最新数据\n    isDepth: false,\n    //是否深度订阅了\n    depthLastData: {},\n    //深度行情数据\n    subscribeContract: ['CL'],\n    //订阅的合约 为空则订阅全部数据\n    contractIndex: -1,\n    totalFloatProfit: 0,\n    //总浮动盈亏\n    heartCheck: {\n      timeout: 20000,\n      timeoutObj: null\n    },\n    RMBRate: 1,\n    currencyRate: [],\n    //汇率数据\n    tickerList: [],\n    depositList: {},\n    //合约保证金列表\n    feeList: {},\n    //手续费列表\n    loginNum: 0,\n    quatoType: 1 //1国际 2国内\n\n  },\n  mutations: {\n    //获取所有合约\n    getAllCommodity: function getAllCommodity(state) {\n      if (localStorage.getItem('allContract')) {\n        state.allCommodity = JSON.parse(localStorage.getItem('allContract'));\n        state.isCanConnectTrade = true;\n        state.currencyRate = JSON.parse(localStorage.getItem('currencyRate'));\n\n        for (var i = 0; i < state.currencyRate.length; i++) {\n          if (state.currencyRate[i].currencyNo == 'CNY') {\n            state.RMBRate = state.currencyRate[i].exchangeRate;\n            break;\n          }\n        }\n\n        return true;\n      } else {\n        return false;\n      }\n    },\n    reset: function reset(state) {\n      if (state.heartCheck.timeoutObj == null) {\n        return;\n      }\n\n      clearTimeout(state.heartCheck.timeoutObj);\n      this.commit('start');\n    },\n    start: function start(state) {\n      state.heartCheck.timeoutObj = setTimeout(function () {\n        state.isReConnect = true;\n        clearTimeout(state.heartCheck.timeoutObj);\n        layer.msg('行情断开，正在重连', {\n          time: 2000\n        });\n        this.dispatch('connectQuato');\n      }.bind(this), state.heartCheck.timeout);\n    }\n  },\n  actions: {\n    //连接行情\n    connectQuato: function connectQuato(context) {\n      if (context.state.heartCheck.timeoutObj != null) {\n        clearTimeout(context.state.heartCheck.timeoutObj);\n      }\n\n      if (context.state.marketSocket) {\n        context.state.marketSocket.close();\n        context.state.marketSocket = null;\n      } //判断连接行情地址\n\n\n      if (isLogin && context.state.loginNum != 2) {\n        //登录\n        context.state.marketConfig.url_address = address2[0];\n        context.state.marketConfig.userName = userInfo.mobile;\n        context.state.marketConfig.password = userInfo.password;\n      } else {\n        //未登录\n        context.state.marketConfig.url_address = address1[0];\n      }\n\n      if (!context.state.marketConfig.url_address) {\n        // \t\t\t\tlayer.msg('未获取到交易地址',{\n        // \t\t\t\t\ttime:1500\n        // \t\t\t\t});\n        return;\n      }\n\n      context.state.marketSocket = new WebSocket(context.state.marketConfig.url_address);\n\n      context.state.marketSocket.onopen = function () {\n        context.state.isConnectMarket = true;\n\n        if (context.state.isReConnect) {\n          layer.msg('行情重连成功', {\n            time: 1000\n          });\n          context.state.isReConnect = false;\n        }\n\n        var loginParam = {\n          method: 'req_login',\n          req_id: '',\n          data: {\n            user_name: context.state.marketConfig.userName,\n            password: context.state.marketConfig.password,\n            protoc_version: context.state.marketConfig.version\n          }\n        };\n        context.state.marketSocket.send(JSON.stringify(loginParam));\n      };\n\n      context.state.marketSocket.onmessage = function (message) {\n        context.dispatch('WSmessage', message.data);\n      };\n\n      context.state.marketSocket.onclose = function () {\n        context.state.isConnectMarket = false;\n        context.state.isCanConnectTrade = false;\n        context.state.isMarketLogin = false;\n      };\n\n      context.state.marketSocket.onerror = function () {// \t\t\t\tlayer.msg('行情连接失败',{\n        // \t\t\t\t\ttime:2000\n        // \t\t\t\t});\n      };\n    },\n    //ws返回数据处理\n    WSmessage: function WSmessage(context, message) {\n      var _this = this;\n\n      message = JSON.parse(message);\n\n      if (message.method == 'on_rsp_login') {\n        if (message.error_code == 0) {\n          context.state.isMarketLogin = true;\n          console.log('连接行情服务器成功'); //如果没有获取全部合约则重新查一次\n\n          request.post('/contractList', {\n            typeCode: '1,2'\n          }, 5000).then(function (acct) {\n            if (acct.success && acct.data.length > 0) {\n              //处理合约数据\n              var ContractList = [];\n\n              for (var z = 0; z < acct.data.length; z++) {\n                var contractList = acct.data[z].contractList;\n\n                for (var i = 0; i < contractList.length; i++) {\n                  contractList[i].commodity_no = contractList[i].contractCode;\n                  contractList[i].commodity_name = contractList[i].contractName;\n                  contractList[i].contract_size = contractList[i].contractSize;\n                  contractList[i].currency_no = contractList[i].currencyNo;\n                  contractList[i].dot_size = contractList[i].dotSize;\n                  contractList[i].exchange_no = contractList[i].exchangeCode;\n                  contractList[i].main_contract_no = contractList[i].mainContract;\n                  contractList[i].mini_ticker_size = contractList[i].miniTikeSize;\n                  contractList[i].security_type = contractList[i].typeCode == '1' ? 'FO' : contractList[i].typeCode == '2' ? 'FI' : contractList[i].typeCode == '3' ? 'C' : 'FO';\n\n                  if (location.pathname.indexOf('home.html') != -1) {\n                    //首页订阅数据\n                    //热门\n                    context.state.subscribeContract.push(contractList[i].security_type + '_' + contractList[i].contractCode);\n                  }\n\n                  context.state.depositList[contractList[i].contractCode] = contractList[i].deposit;\n                  context.state.feeList[contractList[i].contractCode] = contractList[i].fee;\n                }\n\n                ContractList = ContractList.concat(contractList); // for(var i=0;i<contractList.length;i++){\n                // \tcontext.state.depositList[contractList[i].contractCode] = contractList[i].deposit;\n                // \tcontext.state.feeList[contractList[i].contractCode] = contractList[i].fee;\n                // }\n              }\n\n              context.state.allCommodity = ContractList;\n              localStorage.setItem('allContract', JSON.stringify(ContractList));\n              context.dispatch('sendHeartBeat');\n\n              if (context.state.subscribeContract.length == 0) {\n                //订阅全部\n                context.dispatch('subscribeAllContract');\n              } else {\n                //只订阅一个\n                context.dispatch('subscribeOneContract');\n              }\n            } else {\n              if (localStorage.getItem('allContract')) {\n                //处理合约数据\n                var contractList = JSON.parse(localStorage.getItem('allContract'));\n\n                for (var i = 0; i < contractList.length; i++) {\n                  contractList[i].commodity_no = contractList[i].contractCode;\n                  contractList[i].commodity_name = contractList[i].contractName;\n                  contractList[i].contract_size = contractList[i].contractSize;\n                  contractList[i].currency_no = contractList[i].currencyNo;\n                  contractList[i].dot_size = contractList[i].dotSize;\n                  contractList[i].exchange_no = contractList[i].exchangeCode;\n                  contractList[i].main_contract_no = contractList[i].mainContract;\n                  contractList[i].mini_ticker_size = contractList[i].miniTikeSize;\n                  contractList[i].security_type = contractList[i].typeCode == '1' ? 'FO' : contractList[i].typeCode == '2' ? 'FI' : contractList[i].typeCode == '3' ? 'C' : 'FO';\n\n                  if (location.pathname.indexOf('home.html') != -1) {\n                    //首页订阅数据\n                    //热门\n                    context.state.subscribeContract.push(contractList[i].contractCode);\n                  }\n                }\n\n                context.state.allCommodity = contractList;\n\n                for (var i = 0; i < contractList.length; i++) {\n                  context.state.depositList[contractList[i].contractCode] = contractList[i].deposit;\n                }\n\n                context.state.isCanConnectTrade = true;\n\n                if (context.state.subscribeContract.length == 0) {\n                  //订阅全部\n                  context.dispatch('subscribeAllContract');\n                } else {\n                  //只订阅一个\n                  context.dispatch('subscribeOneContract');\n                }\n              } else {\n                //行情获取失败\n                layer.msg('行情合约获取失败', {\n                  time: 1500\n                });\n              }\n            }\n          })[\"catch\"](function (err) {\n            console.log(err);\n            layer.msg('系统错误', {\n              time: 1500\n            });\n          });\n        } else {\n          console.log('登录失败');\n\n          if (isLogin) {\n            if (context.state.loginNum == 2) {\n              layer.msg('系统错误', {\n                time: 1500\n              });\n              return;\n            }\n\n            context.state.loginNum++;\n            context.dispatch('connectQuato');\n          }\n        }\n      } else if (message.method == 'on_rtn_quote') {\n        //行情\n        var lastData = message.data; //最新行情\n        //国际\n\n        var internationalList = context.state.internationalCommodity.slice(0);\n\n        for (var i = 0; i < internationalList.length; i++) {\n          if (lastData[0].split('_')[1] == internationalList[i].commodity_no) {\n            if (internationalList[i].quatoData) {\n              internationalList[i].color = lastData[3] > internationalList[i].quatoData[3] ? 'colorUpBackground' : lastData[3] - internationalList[i].quatoData[3] == 0 ? '' : 'colorDownBackground';\n            }\n\n            internationalList[i].quatoData = lastData;\n\n            if (context.state.quatoType == 1) {\n              context.state.contractIndex = i;\n            }\n\n            break;\n          }\n        }\n\n        context.state.internationalCommodity = internationalList.slice(0); //国内\n\n        var domesticList = context.state.domesticCommodity.slice(0);\n\n        for (var i = 0; i < domesticList.length; i++) {\n          if (lastData[0].split('_')[1] == domesticList[i].commodity_no) {\n            if (domesticList[i].quatoData) {\n              domesticList[i].color = lastData[3] > domesticList[i].quatoData[3] ? 'colorUpBackground' : lastData[3] - domesticList[i].quatoData[3] == 0 ? '' : 'colorDownBackground';\n            } else {\n              domesticList[i].color = \"\";\n            }\n\n            domesticList[i].quatoData = lastData;\n\n            if (context.state.quatoType == 2) {\n              context.state.contractIndex = i;\n            }\n\n            break;\n          }\n        }\n\n        context.state.domesticCommodity = domesticList.slice(0); //选择的合约的最新数据\n\n        if (context.state.currentQuato != '' && context.state.currentQuato.split('_')[1] == message.data[0].split(\"_\")[1]) {\n          context.state.LastData = message.data.slice(0);\n        }\n\n        if (tradeStore.state.isTradeLogin && tradeStore.state.positionList.length > 0) {\n          //如果交易登录的话并且有持仓的话 则计算持仓浮动盈亏\n          context.dispatch('positionFloatProfit', message.data);\n        } else {\n          context.state.totalFloatProfit = 0;\n        }\n      } else if (message.method == 'on_rtn_depth') {\n        //深度订阅推送行情\n        context.state.depthLastData = message.data.slice(0);\n      } else if (message.method == 'on_rsp_subscribe') {\n        //深度订阅返回\n        if (message.error_code == 0 && message.data.fail_list && message.data.fail_list.length > 0) {\n          var list = context.state._internationalCommodity.slice(0);\n\n          var domesticList = context.state.domesticCommodity.slice(0);\n          var failList = message.data.fail_list;\n\n          for (var i = 0; i < list.length; i++) {\n            for (var j = 0, len2 = failList.length; j < len2; j++) {\n              if (failList[j].err_msg != '重复订阅') {\n                if (failList[j].contract_code.split('_')[1] == list[i].commodity_no) {\n                  list.splice(i, 1);\n                  i--;\n                  break;\n                }\n              }\n            }\n          }\n\n          for (var i = 0; i < domesticList.length; i++) {\n            for (var j = 0, len2 = failList.length; j < len2; j++) {\n              if (failList[j].err_msg != '重复订阅') {\n                if (failList[j].contract_code.split('_')[1] == domesticList[i].commodity_no) {\n                  domesticList.splice(i, 1);\n                  i--;\n                  break;\n                }\n              }\n            }\n          }\n\n          context.state.internationalCommodity = list;\n          context.state.domesticCommodity = domesticList;\n          context.state.allSubsCommodity = context.state.allSubsCommodity.concat(list).concat(domesticList);\n        } else {\n          context.state.internationalCommodity = context.state._internationalCommodity.slice(0);\n          context.state.allSubsCommodity = context.state.allSubsCommodity.concat(context.state.internationalCommodity).concat(context.state.domesticCommodity);\n        }\n\n        if (message.error_code == 0 && message.data.succ_list && message.data.succ_list.length > 0) {\n          context.state.isDepth = true;\n        }\n\n        context.state.isCanConnectTrade = true;\n      } else if (message.method == 'on_rsp_unsubscribe') {\n        //取消订阅返回\n        context.state.isDepth = false;\n      } else if (message.method == 'on_rtn_ticker') {\n        //订阅逐笔\n        context.state.tickerList.unshift(message.data);\n\n        if (context.state.tickerList.length > 100) {\n          context.state.tickerList.splice(context.state.tickerList.length - 1, 1);\n        }\n      } else if (message.method == 'on_rsp_heartbeat') {\n        context.commit('reset');\n        setTimeout(function () {\n          _this.dispatch('sendHeartBeat');\n        }, 2000);\n      }\n    },\n    //发送心跳\n    sendHeartBeat: function sendHeartBeat(context) {\n      var heartBeatParam = {\n        method: 'req_heartbeat',\n        req_id: '',\n        data: {\n          ref: '123'\n        }\n      };\n      context.state.marketSocket.send(JSON.stringify(heartBeatParam));\n    },\n    //计算持仓浮动盈亏\n    positionFloatProfit: function positionFloatProfit(context, lastData) {\n      if (lastData[3] == 0) {\n        return;\n      }\n\n      var positionList = tradeStore.state.positionList;\n      var totalFloatProfit = 0;\n\n      for (var i = 0, length = positionList.length; i < length; i++) {\n        if (lastData[0].split('_')[1] == positionList[i].CommodityNo) {\n          if (positionList[i].Direction == 0) {\n            //买多\n            positionList[i]['floatProfit'] = ((lastData[3] - positionList[i].HoldAvgPrice) * positionList[i].HoldNum * positionList[i].contractNum).toFixed(0);\n          } else {\n            //卖空\n            positionList[i]['floatProfit'] = ((positionList[i].HoldAvgPrice - lastData[3]) * positionList[i].HoldNum * positionList[i].contractNum).toFixed(0);\n          }\n\n          if (positionList[i].HoldAvgPrice == 0) {\n            positionList[i]['floatProfit'] = 0;\n          }\n\n          totalFloatProfit += parseFloat(positionList[i].floatProfit) * positionList[i].currencyRate; // break;\n        } else if ((positionList[i].floatProfit || positionList[i].floatProfit == 0) && positionList[i].floatProfit != '获取中...') {\n          totalFloatProfit += parseFloat(positionList[i].floatProfit) * positionList[i].currencyRate; // console.log(positionList[i].currencyRate);\n        }\n      }\n\n      ;\n      var capitalList = tradeStore.state.capitalList;\n\n      for (var i = 0, length = capitalList.length; i < length; i++) {\n        capitalList[i].floatProfit = 0;\n\n        for (var j = 0, length2 = positionList.length; j < length2; j++) {\n          if (capitalList[i].CurrencyNo == positionList[j].CurrencyNo) {\n            if (!positionList[j].floatProfit) {\n              positionList[j].floatProfit = 0;\n            }\n\n            capitalList[i].floatProfit = parseFloat(capitalList[i].floatProfit) + parseFloat(positionList[j].floatProfit);\n          }\n        }\n      }\n\n      tradeStore.state.capitalList = capitalList.slice(0);\n      context.state.totalFloatProfit = totalFloatProfit;\n    },\n    //订阅所有合约\n    subscribeAllContract: function subscribeAllContract(context) {\n      var commodityList = context.state.allCommodity;\n      var length = commodityList.length;\n      var _subscribeList = [];\n\n      for (var i = 0; i < length; i++) {\n        if (context.state.marketConfig.subscribeType.indexOf(commodityList[i].security_type) != -1) {\n          //获取需要订阅的期货和外汇等等\n          _subscribeList.push(commodityList[i]);\n        }\n      } //存入订阅的行情\n\n\n      context.state.subsCommodity = _subscribeList; //循环去订阅\n\n      var subsLength = _subscribeList.length;\n      var contractList = []; //订阅传的参数\n\n      for (var i = 0; i < subsLength; i++) {\n        var obj = _subscribeList[i].security_type + '_' + _subscribeList[i].commodity_no;\n        contractList.push(obj);\n      }\n\n      var subscribeParam = {\n        method: 'req_subscribe',\n        req_id: '',\n        data: {\n          contract_list: contractList,\n          mode: 'MODE_SNAP'\n        }\n      };\n      context.state.marketSocket.send(JSON.stringify(subscribeParam));\n      var _list = _subscribeList;\n      var internationalList = [];\n      var domesticList = [];\n\n      for (var i = 0; i < _list.length; i++) {\n        if (_list[i].security_type == 'FO') {\n          internationalList.push(_list[i]);\n        } else if (_list[i].security_type == 'FI') {\n          domesticList.push(_list[i]);\n        }\n      } //去重\n\n\n      var _internationalList = [];\n\n      for (var i = 0; i < internationalList.length; i++) {\n        for (var j = i + 1; j < internationalList.length; j++) {\n          if (internationalList[i].contractCode === internationalList[j].contractCode) {\n            ++i;\n          }\n        }\n\n        _internationalList.push(internationalList[i]);\n      }\n\n      var _domesticList = [];\n\n      for (var i = 0; i < domesticList.length; i++) {\n        for (var j = i + 1; j < domesticList.length; j++) {\n          if (domesticList[i].contractCode === domesticList[j].contractCode) {\n            ++i;\n          }\n        }\n\n        _domesticList.push(domesticList[i]);\n      }\n\n      context.state._internationalCommodity = _internationalList;\n      context.state.internationalCommodity = _internationalList;\n      context.state.domesticCommodity = _domesticList;\n      context.state.contractList = internationalList;\n    },\n    //深度订阅选择的合约\n    depthSubscribe: function depthSubscribe(context) {\n      var contractList = []; //订阅传的参数\n\n      contractList.push(context.state.currentQuato);\n      var subscribeParam = {\n        method: 'req_subscribe',\n        req_id: '',\n        data: {\n          contract_list: contractList,\n          mode: 'MODE_DEPTH'\n        }\n      };\n      context.state.marketSocket.send(JSON.stringify(subscribeParam));\n    },\n    //取消深度订阅\n    cancelDepthSubscribe: function cancelDepthSubscribe(context) {\n      if (context.state.isDepth) {\n        var contractList = []; //订阅传的参数\n\n        contractList.push(context.state.currentQuato);\n        var subscribeParam = {\n          method: 'req_unsubscribe',\n          req_id: '',\n          data: {\n            contract_list: contractList,\n            mode: 'MODE_DEPTH'\n          }\n        };\n        context.state.marketSocket.send(JSON.stringify(subscribeParam));\n      }\n    },\n    //订阅逐笔\n    tickerSubscribe: function tickerSubscribe(context) {\n      var contractList = []; //订阅传的参数\n\n      contractList.push(context.state.currentQuato);\n      var subscribeParam = {\n        method: 'req_subscribe',\n        req_id: '',\n        data: {\n          contract_list: contractList,\n          mode: 'MODE_TICKER'\n        }\n      };\n      context.state.marketSocket.send(JSON.stringify(subscribeParam));\n    },\n    //取消订阅逐笔\n    cancelTickerSubscribe: function cancelTickerSubscribe(context) {\n      var contractList = []; //订阅传的参数\n\n      contractList.push(context.state.currentQuato);\n      var subscribeParam = {\n        method: 'req_unsubscribe',\n        req_id: '',\n        data: {\n          contract_list: contractList,\n          mode: 'MODE_TICKER'\n        }\n      };\n      context.state.marketSocket.send(JSON.stringify(subscribeParam));\n    },\n    //订阅指定的合约\n    subscribeOneContract: function subscribeOneContract(context) {\n      if (context.state.subscribeContract.length == 0) {\n        return;\n      }\n\n      var contractList = [];\n\n      for (var i = 0, length = context.state.subscribeContract.length; i < length; i++) {\n        var params = context.state.subscribeContract[i];\n        contractList.push(params);\n      }\n\n      var subscribeParam = {\n        method: 'req_subscribe',\n        req_id: '',\n        data: {\n          contract_list: contractList,\n          mode: 'MODE_SNAP'\n        }\n      };\n      context.state.marketSocket.send(JSON.stringify(subscribeParam));\n      var _list = context.state.allCommodity;\n      var internationalList = [];\n      var domesticList = [];\n\n      for (var i = 0; i < _list.length; i++) {\n        if (_list[i].security_type == 'FO') {\n          internationalList.push(_list[i]);\n        } else if (_list[i].security_type == 'FI') {\n          domesticList.push(_list[i]);\n        }\n      }\n\n      context.state._internationalCommodity = internationalList;\n      context.state.internationalCommodity = internationalList;\n      context.state.domesticCommodity = domesticList;\n      context.state.contractList = internationalList;\n    }\n  }\n});\n\n//# sourceURL=webpack:///./PQ/js/marketStore.js?");

/***/ }),

/***/ "./PQ/js/route.js":
/*!************************!*\
  !*** ./PQ/js/route.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//路由栈\nwindow.route = []; //每次进入页面后更新路由栈\n\n(function pageRouter() {\n  // \tvar a = location.pathname.split('.')[0].split('\\/');\n  // \tconsole.log(location.pathname);\n  var b = location.pathname;\n  var obj = {\n    page: b\n  };\n\n  if (localStorage.getItem('routePage')) {\n    if (b.indexOf('home.html') != -1) {\n      route = [];\n      route.push(obj);\n      localStorage.setItem('routePage', JSON.stringify(route));\n    } else {\n      route = JSON.parse(localStorage.getItem('routePage'));\n    }\n  } else {\n    if (b.indexOf('home.html') == -1) {\n      location.href = '/PQ/pages/home/home.html';\n      return;\n    }\n\n    route.push(obj);\n    localStorage.setItem('routePage', JSON.stringify(route));\n  }\n\n  if (route.length > 0 && route[route.length - 1].page == b) {\n    return;\n  }\n\n  route.push(obj);\n\n  if (b.indexOf('home.html') != -1 || b.indexOf('quato.html') != -1 || b.indexOf('trade.html') != -1 || b.indexOf('discover.html') != -1 || b.indexOf('my.html') != -1) {\n    for (var i = 0; i < route.length; i++) {\n      if (route[i].page.indexOf('home.html') == -1 && route[i].page.indexOf('quato.html') == -1 && route[i].page.indexOf('trade.html') == -1 && route[i].page.indexOf('discover.html') == -1 && route[i].page.indexOf('my.html') == -1) {\n        console.log(route[i].page);\n        route.splice(i, 1);\n        i--;\n      }\n    }\n  }\n\n  localStorage.setItem('routePage', JSON.stringify(route));\n})(); //路由方法\n\n\nwindow.pushRoute = function pushRoute(obj) {\n  var isExist = false;\n  var page = obj.page.split('/')[obj.page.split('/').length - 1];\n\n  for (var i = route.length - 1; i >= 0; i--) {\n    if (route[i].page.indexOf(page) != -1) {\n      isExist = true;\n      route = route.slice(0, i + 1);\n      break;\n    }\n  }\n\n  if (isExist) {\n    localStorage.setItem('routePage', JSON.stringify(route));\n    var url = route[route.length - 1].page;\n  } else {\n    var url = obj.page;\n  }\n\n  if (obj.params) {\n    var params = '?';\n\n    for (var i in obj.params) {\n      params += i + '=' + obj.params[i] + '&';\n    }\n\n    params = params.slice(0, params.length - 1);\n    url += params;\n  }\n\n  location.href = url;\n}; //替换\n\n\nwindow.replaceRoute = function replaceRoute(obj) {\n  route.splice(route.length - 1, 1);\n  localStorage.setItem('routePage', JSON.stringify(route));\n  var url = obj.page;\n\n  if (obj.params) {\n    console.log(obj.params);\n    var params = '?';\n\n    for (var i in obj.params) {\n      params += i + '=' + obj.params[i] + '&';\n    }\n\n    params = params.slice(0, params.length - 1);\n    console.log(params);\n    url += params;\n  }\n\n  location.href = url;\n}; //返回上一页\n\n\nwindow.backRoute = function backRoute() {\n  if (arguments.length > 0) {\n    var obj = arguments[0];\n\n    if (obj.backPage) {\n      //指定返回页面\n      var isExist = false;\n      var page = obj.backPage.split('/')[obj.backPage.split('/').length - 1];\n\n      for (var i = route.length - 1; i > 0; i--) {\n        if (route[i].page.indexOf(page) != -1) {\n          isExist = true;\n          route = route.slice(0, i + 1);\n          break;\n        }\n      }\n\n      if (isExist) {\n        localStorage.setItem('routePage', JSON.stringify(route));\n        var url = route[route.length - 1].page;\n      } else {\n        var url = obj.backPage;\n      }\n    } else {\n      //带参数普通返回\n      var page = route[route.length - 2];\n      route.splice(route.length - 1, 1);\n      localStorage.setItem('routePage', JSON.stringify(route));\n      var url = page.page;\n    }\n\n    if (obj.params) {\n      var params = '?';\n\n      for (var i in obj.params) {\n        params += i + '=' + obj.params[i] + '&';\n      }\n\n      params = params.slice(0, params.length - 1);\n      url += params;\n    }\n  } else {\n    //不带参数普通返回\n    var page = route[route.length - 2];\n    route.splice(route.length - 1, 1);\n    localStorage.setItem('routePage', JSON.stringify(route));\n    var url = page.page;\n  }\n\n  location.href = url;\n};\n\n//# sourceURL=webpack:///./PQ/js/route.js?");

/***/ }),

/***/ "./PQ/js/tradeStore.js":
/*!*****************************!*\
  !*** ./PQ/js/tradeStore.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.tradeStore = new Vuex.Store({\n  state: {\n    tradeConfig: {\n      Version: '3.3',\n      url_address: 'ws://192.168.0.227:36999/',\n      //5:ws://192.168.0.232:6102/ 6:ws://192.168.0.227:36999/\n      ClientNo: 'dev001',\n      //5:004264 6:dev001\n      PassWord: 'MTIz',\n      //5:UEVKZEJm 6:MTIz\n      IsMock: 1,\n      Source: 'N_WEB'\n    },\n    tradeSocket: null,\n    //交易ws实例\n    isReConnect: false,\n    //是否重连\n    isConnectTrade: false,\n    //是否连接交易\n    isTradeLogin: false,\n    //是否登录交易\n    tradeBascData: 0,\n    //风险度数据\n    deposit: 0,\n    //保证金\n    totalBalance: 0,\n    //总资产\n    todayCanUseBalance: 0,\n    //今可用\n    Balance: 0,\n    //余额\n    capitalList: [],\n    //资金列表\n    orderInsertList: [],\n    //报单提交暂存列表\n    allOrderList: [],\n    //所有订单列表\n    positionList: [],\n    //持仓列表\n    templeList: [],\n    //挂单列表\n    stopLossList: [],\n    //止损单列表\n    conditionList: [],\n    //条件单列表\n    heartCheck: {\n      timeout: 10000,\n      timeoutObj: null\n    },\n    chooseContract: {},\n    //选择的合约\n    totalPositionNum: 0,\n    //总持仓量\n    tradeType: tradeType,\n    //0模拟 1实盘\n    rateList: {},\n    //汇率数据\n    tradeLoginStatus: 0,\n    //0未尝试登录 1已尝试登录 2登录成功 3登录失败\n    activityStatus: '',\n    //010没完成 020完成\n    activityId: '',\n    //活动ID\n    couponId: '',\n    //优惠券ID\n    couponName: '',\n    //优惠券名称\n    received: '010',\n    //是否领取 010没领取 020领取\n    faceValue: 0,\n    //优惠券金额\n    activitiesName: '' //活动名称\n\n  },\n  mutations: {\n    //初始化数据\n    initData: function initData(state) {\n      state.orderInsertList = [];\n      state.allOrderList = [];\n      state.positionList = [];\n      state.templeList = [];\n      state.stopLossList = [];\n      state.conditionList = []; //条件单列表\n\n      state.tradeBascData = 0; //风险度数据\n\n      state.deposit = 0; //保证金\n\n      state.totalBalance = 0; //总资产\n\n      state.todayCanUseBalance = 0; //今可用\n\n      state.Balance = 0; //余额\n\n      state.totalPositionNum = 0;\n      marketStore.state.totalFloatProfit = 0;\n    },\n    reset: function reset(state) {\n      if (state.heartCheck.timeoutObj == null) {\n        return;\n      }\n\n      clearTimeout(state.heartCheck.timeoutObj);\n      this.commit('start');\n    },\n    start: function start(state) {\n      state.heartCheck.timeoutObj = setTimeout(function () {\n        clearTimeout(state.heartCheck.timeoutObj);\n        state.isReConnect = true;\n        layer.msg('交易断开，正在重连', {\n          time: 2000\n        });\n        this.dispatch('connectTrade');\n      }.bind(this), state.heartCheck.timeout);\n    },\n    //查询活动\n    checkActivity: function checkActivity(state) {\n      var activityType = '020';\n\n      if (state.tradeType == 0) {\n        //模拟\n        activityType = '020';\n      } else if (state.tradeType == 1) {\n        //实盘\n        activityType = '022,023';\n      }\n\n      request.post('/qryActivites', {\n        activityType: activityType\n      }, {\n        token: userInfo.token,\n        secret: userInfo.secret\n      }).then(function (res) {\n        if (res.success && res.code == '010') {\n          for (var i = 0; i < res.data.length; i++) {\n            if (res.data[i].complatedStatus == '010') {\n              tradeStore.state.activityStatus = res.data[i].complatedStatus;\n              tradeStore.state.received = res.data[i].received;\n              var a = res.data[i].id;\n              tradeStore.state.activityId = res.data[i].id;\n              tradeStore.state.activitiesName = res.data[i].activityName;\n              request.post('/activitiesCoupon', {\n                activityId: a\n              }, {\n                token: userInfo.token,\n                secret: userInfo.secret\n              }).then(function (res2) {\n                if (res2.success && res2.code == '010') {\n                  tradeStore.state.couponId = res2.data.couponId;\n                  tradeStore.state.faceValue = res2.data.amount;\n                  tradeStore.state.couponName = res2.data.typeName;\n                  tradeStore.state.activitiesName = res2.data.activitiesName;\n                } else {\n                  layer.msg(res2.message, {\n                    time: 1500\n                  });\n                }\n              })[\"catch\"](function (err) {});\n            }\n          }\n        } else {\n          layer.msg(res.message, {\n            time: 1500\n          });\n        }\n      })[\"catch\"](function (err) {});\n    }\n  },\n  actions: {\n    connectTrade: function connectTrade(context) {\n      if (context.state.heartCheck.timeoutObj != null) {\n        clearTimeout(context.state.heartCheck.timeoutObj);\n      }\n\n      if (isLogin) {\n        //判断连接交易地址\n        context.state.tradeConfig.ClientNo = userInfo.mobile;\n        context.state.tradeConfig.PassWord = userInfo.password; //登录\n\n        if (context.state.tradeType == 0) {\n          //模拟\n          context.state.tradeConfig.url_address = address4[0];\n        } else if (context.state.tradeType == 1) {\n          //实盘\n          context.state.tradeConfig.url_address = address5[0];\n        }\n\n        if (context.state.tradeSocket) {\n          context.state.tradeSocket.close();\n          context.state.tradeSocket = null;\n        }\n\n        context.state.tradeSocket = new WebSocket(context.state.tradeConfig.url_address);\n\n        context.state.tradeSocket.onopen = function () {\n          context.commit('start');\n          context.state.isConnectTrade = true;\n          context.state.tradeLoginStatus = 1;\n\n          if (context.state.isReConnect) {\n            layer.msg('交易重连成功', {\n              time: 1000\n            });\n            context.state.isReConnect = false;\n          }\n\n          var loginParam = {\n            Method: 'Login',\n            req_id: '',\n            Parameters: {\n              ClientNo: context.state.tradeConfig.ClientNo,\n              PassWord: Base64.encode(context.state.tradeConfig.PassWord),\n              IsMock: context.state.tradeConfig.IsMock,\n              Version: context.state.tradeConfig.Version,\n              Source: context.state.tradeConfig.Source\n            }\n          };\n          context.state.tradeSocket.send(JSON.stringify(loginParam));\n        };\n\n        context.state.tradeSocket.onclose = function () {\n          context.state.isConnectTrade = false;\n          context.state.isTradeLogin = false;\n          context.state.tradeLoginStatus = 3;\n        };\n\n        context.state.tradeSocket.onmessage = function (message) {\n          context.dispatch('WSmessage', message.data);\n        };\n\n        context.state.tradeSocket.onerror = function () {// \t\t\t\t\tlayer.msg('交易连接失败',{\n          // \t\t\t\t\t\ttime:2000\n          // \t\t\t\t\t});\n        };\n      }\n    },\n    WSmessage: function WSmessage(context, message) {\n      message = JSON.parse(message);\n\n      if (message.Method == 'OnRspLogin') {\n        if (message.Parameters.Code == 0) {\n          context.state.tradeLoginStatus = 2;\n          context.commit('initData');\n          context.state.isTradeLogin = true;\n          context.state.tradeBascData = message.Parameters;\n          var method = '';\n          var params = {};\n\n          if (location.pathname.indexOf('quatoDetail') != -1) {\n            //交易页面\n            //查询订单信息\n            context.dispatch('checkOrder'); //查询汇率\n\n            request.post('/qryRates').then(function (perms) {\n              if (perms.success && perms.code == '010') {\n                //成功获取汇率\n                marketStore.state.currencyRate = perms.data;\n\n                for (var i = 0; i < marketStore.state.currencyRate.length; i++) {\n                  if (marketStore.state.currencyRate[i].currencyNo == 'CNY') {\n                    marketStore.state.RMBRate = marketStore.state.currencyRate[i].exchangeRate;\n                  }\n                }\n\n                localStorage.setItem('currencyRate', JSON.stringify(perms.data));\n                context.dispatch('checkPosition');\n              } else {\n                //失败则取缓存数据\n                if (localStorage.getItem('currencyRate')) {\n                  marketStore.state.currencyRate = JSON.parse(localStorage.getItem('currencyRate'));\n\n                  for (var i = 0; i < marketStore.state.currencyRate.length; i++) {\n                    if (marketStore.state.currencyRate[i].currencyNo == 'CNY') {\n                      marketStore.state.RMBRate = marketStore.state.currencyRate[i].exchangeRate;\n                    }\n                  }\n\n                  context.dispatch('checkPosition');\n                } else {\n                  layer.msg('汇率获取失败', {\n                    time: 1500\n                  });\n                }\n              }\n            }); //查询资金账户信息\n\n            context.dispatch('checkAccount');\n          } else if (location.pathname.indexOf('stopOrder') != -1) {\n            //止损单页面\n            context.dispatch('checkStopLoss');\n          } else if (location.pathname.indexOf('conditionOrder') != -1) {\n            //条件单页面\n            context.dispatch('checkCondition');\n          }\n        } else {\n          //交易登录失败\n          context.state.tradeLoginStatus = 3;\n        }\n      } else if (message.Method == 'OnRspQryHoldTotal') {\n        //查询持仓合计返回\n        if (message.Parameters) {\n          var allCommodity = marketStore.state.allSubsCommodity;\n\n          for (var i = 0, length = allCommodity.length; i < length; i++) {\n            if (allCommodity[i].commodity_no == message.Parameters.CommodityNo) {\n              message.Parameters.contractNum = allCommodity[i].contract_size / allCommodity[i].mini_ticker_size;\n              message.Parameters.mini_ticker_size = allCommodity[i].mini_ticker_size; //0.000004  \n\n              message.Parameters.CommodityName = allCommodity[i].commodity_name;\n              message.Parameters.CurrencyNo = allCommodity[i].currency_no;\n\n              if (allCommodity[i].commodity_no == message.Parameters.CommodityNo && allCommodity[i].quatoData) {\n                if (message.Parameters.Direction == 0) {\n                  //买多\n                  message.Parameters['floatProfit'] = ((allCommodity[i].quatoData[3] - message.Parameters.HoldAvgPrice) * message.Parameters.HoldNum * message.Parameters.contractNum).toFixed(0);\n                } else {\n                  //卖空\n                  message.Parameters['floatProfit'] = ((message.Parameters.HoldAvgPrice - allCommodity[i].quatoData[3]) * message.Parameters.HoldNum * message.Parameters.contractNum).toFixed(0);\n                }\n              } else {\n                message.Parameters.floatProfit = 0;\n              }\n            }\n          }\n\n          for (var i = 0; i < marketStore.state.currencyRate.length; i++) {\n            if (marketStore.state.currencyRate[i].currencyNo == message.Parameters.CurrencyNo) {\n              message.Parameters.currencyRate = marketStore.state.currencyRate[i].exchangeRate;\n              break;\n            }\n          }\n\n          marketStore.state.totalFloatProfit = marketStore.state.totalFloatProfit + message.Parameters.floatProfit * message.Parameters.currencyRate;\n          context.state.totalPositionNum += message.Parameters.HoldNum;\n          context.state.positionList.push(message.Parameters);\n\n          if (marketStore.state.subscribeContract.length > 0 && marketStore.state.subscribeContract.indexOf(message.Parameters.CommodityNo) == -1) {\n            //订阅没有订阅的持仓合约\n            marketStore.state.subscribeContract.push(message.Parameters.CommodityNo);\n            marketStore.dispatch('subscribeOneContract');\n          }\n        }\n      } else if (message.Method == 'OnRspQryAccount') {\n        //查询资金账户回复\n        if (message.Parameters) {\n          message.Parameters.floatProfit = 0;\n\n          if (message.Parameters.CurrencyNo == 'USD') {\n            context.state.capitalList.unshift(message.Parameters);\n          } else {\n            context.state.capitalList.push(message.Parameters);\n          }\n\n          context.state.rateList[message.Parameters.CurrencyNo] = message.Parameters.CurrencyRate;\n          localStorage.setItem('rateList', JSON.stringify(context.state.rateList));\n          context.state.totalBalance += message.Parameters.TodayAmount * message.Parameters.CurrencyRate;\n          context.state.todayCanUseBalance += (message.Parameters.TodayAmount - message.Parameters.FrozenMoney - message.Parameters.Deposit) * message.Parameters.CurrencyRate;\n          context.state.deposit += message.Parameters.Deposit * message.Parameters.CurrencyRate;\n        }\n      } else if (message.Method == 'OnRtnHoldTotal') {\n        //处理暂存列表\n        var orderInsertList = context.state.orderInsertList;\n\n        for (var i = 0, length = orderInsertList.length; i < length; i++) {\n          if (orderInsertList[i].OrderID == message.Parameters.OrderID) {\n            context.state.orderInsertList.splice(i, 1);\n            break;\n          }\n        } //持仓变化通知\n\n\n        var allCommodity = marketStore.state.allSubsCommodity.slice(0);\n\n        for (var i = 0, length = allCommodity.length; i < length; i++) {\n          if (allCommodity[i].commodity_no == message.Parameters.CommodityNo) {\n            message.Parameters.contractNum = allCommodity[i].contract_size / allCommodity[i].mini_ticker_size;\n            message.Parameters.mini_ticker_size = allCommodity[i].mini_ticker_size;\n            message.Parameters.CommodityName = allCommodity[i].commodity_name;\n            message.Parameters.CurrencyNo = allCommodity[i].currency_no;\n\n            if (context.state.chooseContract && context.state.chooseContract.commodity_no == message.Parameters.CommodityNo) {\n              if (message.Parameters.Direction == 0) {\n                //买多\n                message.Parameters['floatProfit'] = ((marketStore.state.LastData[3] - message.Parameters.HoldAvgPrice) * message.Parameters.HoldNum * message.Parameters.contractNum).toFixed(0);\n              } else {\n                //卖空\n                message.Parameters['floatProfit'] = ((message.Parameters.HoldAvgPrice - marketStore.state.LastData[3]) * message.Parameters.HoldNum * message.Parameters.contractNum).toFixed(0);\n              }\n            } else {\n              message.Parameters.floatProfit = 0;\n            }\n          }\n        }\n\n        var positionList = context.state.positionList;\n\n        if (positionList.length == 0) {\n          for (var j = 0; j < marketStore.state.currencyRate.length; j++) {\n            if (marketStore.state.currencyRate[j].currencyNo == message.Parameters.CurrencyNo) {\n              message.Parameters['currencyRate'] = marketStore.state.currencyRate[j].exchangeRate;\n              break;\n            }\n          }\n\n          context.state.positionList.push(message.Parameters);\n        } else {\n          for (var i = 0, length = positionList.length; i < length; i++) {\n            if (positionList[i].CommodityNo == message.Parameters.CommodityNo) {\n              if (message.Parameters.HoldNum > 0) {\n                for (var j = 0; j < marketStore.state.currencyRate.length; j++) {\n                  if (marketStore.state.currencyRate[j].currencyNo == message.Parameters.CurrencyNo) {\n                    message.Parameters['currencyRate'] = marketStore.state.currencyRate[j].exchangeRate;\n                    break;\n                  }\n                }\n\n                context.state.positionList.splice(i, 1, message.Parameters);\n              } else {\n                context.state.positionList.splice(i, 1);\n              }\n\n              break;\n            }\n\n            if (i == length - 1) {\n              for (var j = 0; j < marketStore.state.currencyRate.length; j++) {\n                if (marketStore.state.currencyRate[j].currencyNo == message.Parameters.CurrencyNo) {\n                  message.Parameters['currencyRate'] = marketStore.state.currencyRate[j].exchangeRate;\n                  break;\n                }\n              }\n\n              context.state.positionList.push(message.Parameters);\n            }\n          }\n        }\n\n        context.state.totalPositionNum = 0;\n\n        for (var i = 0, length = positionList.length; i < length; i++) {\n          context.state.totalPositionNum += positionList[i].HoldNum;\n        }\n      } else if (message.Method == 'OnRspQryOrder') {\n        //查询所有订单\n        var allCommodity = marketStore.state.allCommodity;\n\n        for (var i = 0, length = allCommodity.length; i < length; i++) {\n          if (message.Parameters && allCommodity[i].commodity_no == message.Parameters.CommodityNo) {\n            message.Parameters.contractNum = allCommodity[i].contract_size / allCommodity[i].mini_ticker_size;\n            message.Parameters.mini_ticker_size = allCommodity[i].mini_ticker_size;\n            message.Parameters.CommodityName = allCommodity[i].commodity_name;\n            message.Parameters.CurrencyNo = allCommodity[i].currency_no;\n          }\n        }\n\n        if (message.Parameters) {\n          context.state.allOrderList.push(message.Parameters);\n        }\n\n        if (message.Parameters && message.Parameters.OrderStatus == 1 && message.Parameters.OrderPriceType == 0) {\n          context.state.templeList.push(message.Parameters);\n        }\n      } else if (message.Method == 'OnRspOrderInsert') {\n        //报单录入请求回复\n        var allCommodity = marketStore.state.allCommodity;\n\n        for (var i = 0, length = allCommodity.length; i < length; i++) {\n          if (allCommodity[i].commodity_no == message.Parameters.CommodityNo) {\n            message.Parameters.contractNum = allCommodity[i].contract_size / allCommodity[i].mini_ticker_size;\n            message.Parameters.mini_ticker_size = allCommodity[i].mini_ticker_size;\n            message.Parameters.CommodityName = allCommodity[i].commodity_name;\n            message.Parameters.CurrencyNo = allCommodity[i].currency_no;\n          }\n        }\n\n        if (message.Parameters.OrderStatus == 0 || message.Parameters.OrderStatus == 1) {\n          //已提交 排队中\n          context.state.orderInsertList.push(message.Parameters);\n          context.state.templeList.unshift(message.Parameters);\n        } else if (message.Parameters.OrderStatus == 2) {//部分成交\n        } else if (message.Parameters.OrderStatus == 3) {//完成成交\n        } else if (message.Parameters.OrderStatus == 4) {//已撤单\n        } else if (message.Parameters.OrderStatus == 5 || message.Parameters.OrderStatus == 6) {//下单失败 未知\n        }\n\n        context.state.allOrderList.unshift(message.Parameters);\n\n        if (message.Parameters.OpenCloseType == 2) {\n          //平仓\n          setTimeout(function () {\n            context.commit('checkActivity');\n          }, 1000);\n        }\n\n        context.dispatch('showMessageTip', message.Parameters);\n      } else if (message.Method == 'OnRtnOrderTraded') {\n        //订单成交通知\n        //处理挂单\n        var templeList = context.state.templeList;\n\n        for (var i = 0, length = templeList.length; i < length; i++) {\n          if (templeList[i].OrderID == message.Parameters.OrderID) {\n            context.state.templeList.splice(i, 1);\n            break;\n          }\n        } //处理暂存列表\n\n\n        var orderInsertList = context.state.orderInsertList;\n\n        for (var i = 0, length = orderInsertList.length; i < length; i++) {\n          if (orderInsertList[i].OrderID == message.Parameters.OrderID) {\n            context.state.orderInsertList.splice(i, 1);\n            break;\n          }\n        }\n      } else if (message.Method == 'OnRtnOrderState') {\n        //委托状态变化通知\n        var allCommodity = marketStore.state.allCommodity;\n\n        for (var i = 0, length = allCommodity.length; i < length; i++) {\n          if (allCommodity[i].commodity_no == message.Parameters.CommodityNo) {\n            message.Parameters.contractNum = allCommodity[i].contract_size / allCommodity[i].mini_ticker_size;\n            message.Parameters.mini_ticker_size = allCommodity[i].mini_ticker_size;\n            message.Parameters.CommodityName = allCommodity[i].commodity_name;\n            message.Parameters.CurrencyNo = allCommodity[i].currency_no;\n          }\n        }\n\n        if (message.Parameters.OrderStatus == 0 || message.Parameters.OrderStatus == 1) {\n          //已提交 排队中\n          var templeList = context.state.templeList;\n\n          for (var i = 0, length = templeList.length; i < length; i++) {\n            if (message.Parameters.OrderID == templeList[i].OrderID) {\n              context.state.templeList.splice(i, 1, message.Parameters);\n              break;\n            }\n          }\n        } else if (message.Parameters.OrderStatus == 2) {//部分成交\n        } else if (message.Parameters.OrderStatus == 3) {//完成成交\n        } else if (message.Parameters.OrderStatus == 4) {\n          //已撤单\n          var templeList = context.state.templeList;\n\n          for (var i = 0, length = templeList.length; i < length; i++) {\n            if (message.Parameters.OrderID == templeList[i].OrderID) {\n              context.state.templeList.splice(i, 1);\n              break;\n            }\n          }\n        } else if (message.Parameters.OrderStatus == 5 || message.Parameters.OrderStatus == 6) {} //下单失败 未知\n        //更新全部订单\n\n\n        var allOrderList = context.state.allOrderList;\n\n        for (var i = 0, length = allOrderList.length; i < length; i++) {\n          if (allOrderList[i].OrderID == message.Parameters.OrderID) {\n            allOrderList[i].contractNum = message.Parameters.contractNum;\n            allOrderList[i].CommodityName = message.Parameters.CommodityName;\n            allOrderList[i].CurrencyNo = message.Parameters.CurrencyNo;\n            allOrderList[i].TradeNum = message.Parameters.TradeNum;\n            allOrderList[i].TradePrice = message.Parameters.TradePrice;\n            allOrderList[i].TradeFee = message.Parameters.TradeFee;\n            allOrderList[i].OrderStatus = message.Parameters.OrderStatus;\n            allOrderList[i].StatusMsg = message.Parameters.StatusMsg;\n            allOrderList[i].Drection = message.Parameters.Drection;\n            break;\n          }\n        }\n\n        context.state.allOrderList = allOrderList.slice(0);\n        context.dispatch('showMessageTip', message.Parameters);\n      } else if (message.Method == 'OnRtnMoney') {\n        //资金变化通知\n        if (message.Parameters) {\n          var capitalList = context.state.capitalList.slice(0);\n\n          for (var i = 0, length = capitalList.length; i < length; i++) {\n            if (capitalList[i].CurrencyNo == message.Parameters.CurrencyNo) {\n              message.Parameters.CurrencyRate = capitalList[i].CurrencyRate;\n              capitalList.splice(i, 1, message.Parameters);\n              break;\n            }\n          }\n\n          var totalBalance = 0;\n          var todayCanUseBalance = 0;\n          var deposit = 0;\n\n          for (var i = 0, length = capitalList.length; i < length; i++) {\n            totalBalance += capitalList[i].TodayAmount * capitalList[i].CurrencyRate;\n            todayCanUseBalance += (capitalList[i].TodayAmount - capitalList[i].FrozenMoney - capitalList[i].Deposit) * capitalList[i].CurrencyRate;\n            deposit += capitalList[i].Deposit * capitalList[i].CurrencyRate;\n          }\n\n          context.state.totalBalance = totalBalance;\n          context.state.todayCanUseBalance = todayCanUseBalance;\n          context.state.deposit = deposit;\n          context.state.capitalList = capitalList.slice(0);\n        }\n      } else if (message.Method == 'OnRspInsertStopLoss') {\n        //插入止损单返回\n        context.dispatch('showMessageTip', message.Parameters);\n      } else if (message.Method == 'OnRspQryStopLoss') {\n        //查询止损单返回\n        if (message.Parameters) {\n          switch (message.Parameters.StopLossType) {\n            case 0:\n              message.Parameters.StopLossTypeName = '止损';\n              break;\n\n            case 1:\n              message.Parameters.StopLossTypeName = '止盈';\n              break;\n\n            case 2:\n              message.Parameters.StopLossTypeName = '止损+止盈';\n              break;\n\n            case 3:\n              message.Parameters.StopLossTypeName = '浮动止损';\n              break;\n\n            case 4:\n              message.Parameters.StopLossTypeName = '不设置止损';\n              break;\n          }\n\n          context.state.stopLossList.unshift(message.Parameters);\n\n          if (marketStore.state.subscribeContract.indexOf(message.Parameters.CommodityNo) == -1) {\n            //订阅没有订阅的止损单合约\n            marketStore.state.subscribeContract.push(message.Parameters.CommodityNo);\n            marketStore.dispatch('subscribeOneContract');\n          }\n        }\n      } else if (message.Method == 'OnRtnStopLossState') {\n        //止损单状态改变通知\n        if (message.Parameters.Status == 0) {//运行中\n        } else if (message.Parameters.Status == 1) {//暂停\n        } else if (message.Parameters.Status == 2) {//已触发\n        } else if (message.Parameters.Status == 3) {//已取消\n        } else if (message.Parameters.Status == 4) {//插入失败\n        } else if (message.Parameters.Status == 5) {//触发失败\n        }\n\n        switch (message.Parameters.StopLossType) {\n          case 0:\n            message.Parameters.StopLossTypeName = '止损';\n            break;\n\n          case 1:\n            message.Parameters.StopLossTypeName = '止盈';\n            break;\n\n          case 2:\n            message.Parameters.StopLossTypeName = '止损+止盈';\n            break;\n\n          case 3:\n            message.Parameters.StopLossTypeName = '浮动止损';\n            break;\n\n          case 4:\n            message.Parameters.StopLossTypeName = '不设置止损';\n            break;\n        }\n\n        var stopLossList = context.state.stopLossList;\n\n        for (var i = 0, length = stopLossList.length; i < length; i++) {\n          if (stopLossList[i].StopLossNo == message.Parameters.StopLossNo) {\n            context.state.stopLossList.splice(i, 1, message.Parameters);\n            break;\n          }\n        }\n\n        context.dispatch('showMessageTip', message.Parameters);\n      } else if (message.Method == 'OnRspQryCondition') {\n        //查询条件单返回\n        if (message.Parameters) {\n          var allCommodity = marketStore.state.allCommodity;\n\n          for (var i = 0, length = allCommodity.length; i < length; i++) {\n            if (allCommodity[i].commodity_no == message.Parameters.CommodityNo) {\n              message.Parameters.CommodityName = allCommodity[i].commodity_name;\n            }\n          }\n\n          context.state.conditionList.unshift(message.Parameters);\n        }\n      } else if (message.Method == 'OnRspInsertCondition') {\n        //插入条件单返回\n        if (message.Parameters.Status == 0) {\n          //运行中\n          context.state.conditionList.unshift(message.Parameters);\n        } else if (message.Parameters.Status == 1) {//暂停\n        } else if (message.Parameters.Status == 2) {//已触发\n        } else if (message.Parameters.Status == 3) {//已取消\n        } else if (message.Parameters.Status == 4) {//插入失败\n        } else if (message.Parameters.Status == 5) {//触发失败\n        }\n\n        context.dispatch('showMessageTip', message.Parameters);\n      } else if (message.Method == 'OnRtnConditionState') {\n        //条件单状态变化推送\n        var conditionList = context.state.conditionList;\n\n        for (var i = 0, length = conditionList.length; i < length; i++) {\n          if (conditionList[i].ConditionNo == message.Parameters.ConditionNo) {\n            context.state.conditionList.splice(i, 1, message.Parameters);\n          }\n        }\n\n        context.dispatch('showMessageTip', message.Parameters);\n      } else if (message.Method == 'OnError') {\n        layer.msg(message.Parameters.Message, {\n          time: 2000\n        });\n      } else if (message.Method == 'OnError') {\n        layer.msg(message.Parameters.Message, {\n          time: 2000\n        });\n      } else if (message.Method == 'OnRtnHeartBeat') {\n        if (context.state.tradeLoginStatus != 3) {\n          context.commit('reset');\n        }\n      }\n    },\n    //查询订单\n    checkOrder: function checkOrder(context) {\n      method = 'QryOrder';\n      params = {\n        ClientNo: context.state.tradeConfig.ClientNo\n      };\n      context.dispatch('sendWS', {\n        method: method,\n        params: params\n      });\n    },\n    //查询持仓\n    checkPosition: function checkPosition(context) {\n      var method = 'QryHoldTotal';\n      params = {\n        ClientNo: context.state.tradeConfig.ClientNo\n      };\n      context.dispatch('sendWS', {\n        method: method,\n        params: params\n      });\n    },\n    //查询账户资金\n    checkAccount: function checkAccount(context) {\n      var method = 'QryAccount';\n      params = {\n        ClientNo: context.state.tradeConfig.ClientNo\n      };\n      context.dispatch('sendWS', {\n        method: method,\n        params: params\n      });\n    },\n    //查询止损单\n    checkStopLoss: function checkStopLoss(context) {\n      var method = 'QryStopLoss';\n      params = {\n        ClientNo: context.state.tradeConfig.ClientNo\n      };\n      context.dispatch('sendWS', {\n        method: method,\n        params: params\n      });\n    },\n    //查询条件单\n    checkCondition: function checkCondition(context) {\n      var method = 'QryCondition';\n      params = {\n        ClientNo: context.state.tradeConfig.ClientNo\n      };\n      context.dispatch('sendWS', {\n        method: method,\n        params: params\n      });\n    },\n    //显示提示\n    showMessageTip: function showMessageTip(context, parameter) {\n      var message = '';\n\n      if (parameter.StopLossPrice || parameter.StopLossPrice == 0) {\n        //止损止盈\n        if (parameter.Status == 0 && parameter.StopLossType == 0) {\n          message = '设置限价止损成功';\n        } else if (parameter.Status == 0 && parameter.StopLossType == 1) {\n          message = '设置限价止盈成功';\n        } else if (parameter.Status == 0 && parameter.StopLossType == 2) {\n          message = '设置浮动止损成功';\n        } else {\n          if (parameter.Status == 0) {\n            message = '已开启';\n          } else if (parameter.Status == 1) {\n            message = '已暂停';\n          } else if (parameter.Status == 2) {\n            message = '已触发';\n          } else if (parameter.Status == 3) {\n            if (parameter.StatusMsg == '无对应持仓, 失效删除') {\n              return;\n            }\n\n            message = (parameter.StopLossType == 0 || parameter.StopLossType == 2 ? '止损单' : '止盈单') + '已取消';\n          } else {\n            message = parameter.StatusMsg;\n          }\n        }\n      } else if (parameter.ConditionType || parameter.ConditionType == 0) {\n        //条件单\n        if (parameter.Status == 0 && parameter.ConditionType == 0) {\n          message = '设置价格条件单成功';\n        } else if (parameter.Status == 0 && parameter.ConditionType == 1) {\n          message = '设置时间条件单成功';\n        } else {\n          if (parameter.Status == 0) {\n            message = '已开启';\n          } else if (parameter.Status == 1) {\n            message = '已暂停';\n          } else if (parameter.Status == 2) {\n            message = '已触发';\n          } else if (parameter.Status == 3) {\n            message = '已取消';\n          } else if (parameter.Status == 4) {\n            message = parameter.StatusMsg;\n          } else {\n            message = parameter.StatusMsg;\n          }\n        }\n      } else {\n        //仓位\n        if (parameter.OrderStatus == 1) {\n          message = \"[\".concat(parameter.CommodityName).concat(parameter.ContractNo, \"],\\u4EF7\\u683C[\").concat(parameter.OrderPrice, \"],\\u624B\\u6570[\").concat(parameter.OrderNum, \"],\\u65B9\\u5411[\").concat(parameter.Drection == 0 ? '买' : '卖', \"]</br>\\u6302\\u5355\\u6210\\u529F\");\n          ;\n        } else if (parameter.OrderStatus == 2 || parameter.OrderStatus == 3) {\n          message = \"[\".concat(parameter.CommodityName).concat(parameter.ContractNo, \"],\\u4EF7\\u683C[\").concat(parameter.TradePrice, \"],\\u624B\\u6570[\").concat(parameter.OrderNum, \"],\\u65B9\\u5411[\").concat(parameter.Drection == 0 ? '买' : '卖', \"]</br>\\u63D0\\u4EA4\\u8BA2\\u5355\\u6210\\u529F\");\n        } else if (parameter.OrderStatus == 4) {\n          message = '撤单成功';\n        } else if (parameter.StatusMsg == '余额不足') {\n          if (context.state.tradeType == 0) {\n            layer.msg('余额不足，请领取模拟金', {\n              time: 1500\n            });\n          } else {\n            if (document.getElementById('balanceInfoLayer')) {\n              layer.open({\n                type: 1,\n                content: $('#balanceInfoLayer'),\n                area: ['7.3rem', '6rem'],\n                shadeClose: true,\n                title: null,\n                closeBtn: 0\n              });\n            }\n          }\n\n          return;\n        } else {\n          message = parameter.StatusMsg;\n        }\n      }\n\n      layer.msg(message, {\n        time: 2000\n      });\n    },\n    //发送WS\n    sendWS: function sendWS(context, _ref) {\n      var method = _ref.method,\n          params = _ref.params,\n          req_id = _ref.req_id;\n      var Param = {\n        Method: method,\n        req_id: req_id,\n        Parameters: params\n      };\n\n      if (context.state.isTradeLogin) {\n        context.state.tradeSocket.send(JSON.stringify(Param));\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack:///./PQ/js/tradeStore.js?");

/***/ }),

/***/ "./PQ/pages/quato/quatoDetail/quatoDetail.js":
/*!***************************************************!*\
  !*** ./PQ/pages/quato/quatoDetail/quatoDetail.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var _computed, _data, _methods;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//页面之间传值\nvar tradePageStore = new Vuex.Store({\n  state: {\n    headerTextTop: '',\n    //头部上面文字\n    headerTextBottom: '',\n    //头部下面文字\n    choosePage: 0,\n    chartUrl: '',\n    //图表url\n    tradeTabIndex: 2,\n    //导航索引\n    isNormalPrice: false,\n    period: '',\n    //图表周期\n    priceType: 1,\n    //图表数据类型 1最新价 2\n    apiUrl: '',\n    //图表http地址\n    WSUrl: '',\n    //图表ws地址\n    contractLayer: null,\n    //\n    tradeType: tradeType,\n    //交易类别\n    isOnTrade: true,\n    //是否交易中\n    isNetworkConnect: false,\n    //网络是否连接\n    chartIframe: null,\n    chartLoad: false\n  }\n});\nvar emitter = new Vue(); //头部\n\nvar header = new Vue({\n  el: '#trade-header',\n  data: {},\n  computed: {\n    headerTextTop: function headerTextTop() {\n      return tradePageStore.state.headerTextTop;\n    },\n    headerTextBottom: function headerTextBottom() {\n      return tradePageStore.state.headerTextBottom;\n    },\n    chooseContract: function chooseContract() {\n      return tradeStore.state.chooseContract;\n    },\n    LastData: function LastData() {\n      return marketStore.state.LastData;\n    },\n    tradeType: function tradeType() {\n      return tradePageStore.state.tradeType;\n    },\n    isOnTrade: function isOnTrade() {\n      return tradePageStore.state.isOnTrade;\n    }\n  },\n  watch: {\n    LastData: function LastData() {\n      tradePageStore.state.isOnTrade = this.checkTradeTime(this.chooseContract.tradingTime, this.chooseContract.notTradingTime);\n    },\n    chooseContract: function chooseContract() {\n      tradePageStore.state.isOnTrade = this.checkTradeTime(this.chooseContract.tradingTime, this.chooseContract.notTradingTime);\n    }\n  },\n  mounted: function mounted() {\n    mui.init();\n    layui.use('layer', function () {\n      var layer = layui.layer;\n    });\n    marketStore.state.subscribeContract = []; // 禁用侧边菜单栏手滑打开\n\n    var offCanvasWrapper = mui('#trade');\n    var offCanvasInner = offCanvasWrapper[0].querySelector('.mui-inner-wrap');\n    offCanvasInner.addEventListener('drag', function (event) {\n      event.stopPropagation();\n    });\n  },\n  methods: {\n    //切换合约\n    switchContract: function switchContract() {\n      tradePageStore.state.contractLayer = layer.open({\n        type: 1,\n        content: $('#contractSelect'),\n        area: ['8rem', '10.666rem'],\n        shadeClose: true,\n        title: null,\n        closeBtn: 0\n      });\n      var list = document.getElementById('list'); //calc hieght\n\n      list.style.height = '10.666rem'; //create\n\n      window.indexedList = new mui.IndexedList(list);\n    },\n    backBtn: function backBtn() {\n      if (!mui.os.plus) {\n        backRoute();\n        return;\n      }\n\n      mui.back();\n    },\n    //判断是否交易中\n    checkTradeTime: function checkTradeTime(tradeTime, notTradeTime) {\n      var week = new Date().getDay();\n\n      if (week == 0 || week == 6) {\n        return false;\n      }\n\n      var currentYMD = getFormalDate(new Date().getTime(), 'yyyy/mm/dd');\n      var currentTime = new Date().getTime();\n\n      if (notTradeTime != '') {\n        notTradeTime = notTradeTime.split('，');\n\n        for (var i = 0; i < notTradeTime.length; i++) {\n          var time = notTradeTime[i].split('-');\n\n          if (time[0] < time[1]) {\n            //开始时间小于结束时间说明开始和结束是同一天\n            if (currentTime > new Date(currentYMD + ' ' + time[0]).getTime() && currentTime < new Date(currentYMD + ' ' + time[1]).getTime()) {\n              //不在交易是时间中\n              return false;\n            } else {}\n          } else if (time[0] > time[1]) {\n            //说明结束是第二天\n            if (currentTime > new Date(currentYMD + ' ' + time[0]).getTime() || currentTime < new Date(currentYMD + ' ' + time[1]).getTime()) {\n              //不在交易是时间中\n              return false;\n            } else {}\n          } else {\n            if (currentTime == new Date(currentYMD + ' ' + time[0]).getTime()) {\n              return false;\n            }\n          }\n        }\n      }\n\n      if (tradeTime) {\n        tradeTime = tradeTime.split('，');\n      }\n\n      for (var i = 0; i < tradeTime.length; i++) {\n        var time = tradeTime[i].split('-');\n\n        if (time[0] < time[1]) {\n          //开始时间小于结束时间说明开始和结束是同一天\n          if (currentTime > new Date(currentYMD + ' ' + time[0]).getTime() && currentTime < new Date(currentYMD + ' ' + time[1]).getTime()) {\n            //在交易是时间中\n            return true;\n          } else {}\n        } else if (time[0] > time[1]) {\n          //说明结束是第二天\n          if (currentTime > new Date(currentYMD + ' ' + time[0]).getTime() || currentTime < new Date(currentYMD + ' ' + time[1]).getTime()) {\n            //在交易是时间中\n            return true;\n          } else {}\n        } else {\n          if (currentTime == new Date(currentYMD + ' ' + time[0]).getTime()) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    goToPage: function goToPage(path) {\n      pushRoute({\n        page: path,\n        params: {\n          contractNo: this.chooseContract.contractCode,\n          contractName: this.chooseContract.contractName,\n          tradeTabIndex: tradePageStore.state.tradeTabIndex\n        }\n      });\n    }\n  }\n}); //导航\n\nvar tradeTab = new Vue({\n  el: '#tradeTab',\n  data: {\n    isShowKlineOption: false,\n    //是否显示k线图选择框\n    klineOptionTimer: null,\n    //k线图选择框实例\n    klineName: 'K线',\n    //k线导航栏名称\n    tabIndex: -1,\n    chartUrl: '../../../common/f2Chart/f2Chart.html',\n    //f2图表\n    addressStatus: false,\n    isLogin: isLogin,\n    isFirst: true,\n    //是否首次\n    loginErrorLayer: null,\n    //登录错误弹窗\n    scrollTimer: null //滚动实例\n\n  },\n  computed: (_computed = {\n    chooseQuatoType: function chooseQuatoType() {\n      return marketStore.state.chooseQuatoType;\n    },\n    isTradeLogin: function isTradeLogin() {\n      return tradeStore.state.isTradeLogin;\n    },\n    isCanConnectTrade: function isCanConnectTrade() {\n      return marketStore.state.isCanConnectTrade;\n    },\n    chooseContract: function chooseContract() {\n      return tradeStore.state.chooseContract;\n    }\n  }, _defineProperty(_computed, \"chooseQuatoType\", function chooseQuatoType() {\n    return marketStore.state.chooseQuatoType;\n  }), _defineProperty(_computed, \"period\", function period() {\n    return tradePageStore.state.period;\n  }), _defineProperty(_computed, \"priceType\", function priceType() {\n    return tradePageStore.state.priceType;\n  }), _defineProperty(_computed, \"isMarketLogin\", function isMarketLogin() {\n    return marketStore.state.isMarketLogin;\n  }), _defineProperty(_computed, \"tradeType\", function tradeType() {\n    return tradePageStore.state.tradeType;\n  }), _defineProperty(_computed, \"isNetworkConnect\", function isNetworkConnect() {\n    return tradePageStore.state.isNetworkConnect;\n  }), _defineProperty(_computed, \"tradeLoginStatus\", function tradeLoginStatus() {\n    return tradeStore.state.tradeLoginStatus;\n  }), _defineProperty(_computed, \"positionList\", function positionList() {\n    //持仓列表\n    return tradeStore.state.positionList;\n  }), _defineProperty(_computed, \"chartLoad\", function chartLoad() {\n    return tradePageStore.state.chartLoad;\n  }), _defineProperty(_computed, \"chartIframe\", function chartIframe() {\n    return tradePageStore.state.chartIframe;\n  }), _computed),\n  watch: {\n    isCanConnectTrade: function isCanConnectTrade() {\n      if (this.isCanConnectTrade && isLogin) {\n        tradeStore.dispatch('connectTrade'); //连接交易\n      }\n    },\n    isTradeLogin: function isTradeLogin() {\n      if (this.isTradeLogin) {\n        if (urlParams.tradeTabIndex == 5 && this.isFirst) {\n          this.chooseTap(urlParams.tradeTabIndex);\n          this.isFirst = false;\n        }\n\n        if (this.loginErrorLayer != null) {\n          this.loginErrorLayer.close();\n        }\n      }\n    },\n    addressStatus: function addressStatus() {\n      if (this.addressStatus && this.isNetworkConnect) {\n        marketStore.dispatch('connectQuato'); //连接行情\n        // if(tradePageStore.state.tradeTabIndex ==1||tradePageStore.state.tradeTabIndex ==2||tradePageStore.state.tradeTabIndex ==6||tradePageStore.state.tradeTabIndex ==7||tradePageStore.state.tradeTabIndex ==8||tradePageStore.state.tradeTabIndex ==9||tradePageStore.state.tradeTabIndex ==10){\n        // \tthis.initChartUrl();\n        // }\n\n        if (isLogin) {\n          //登录实盘\n          tradePageStore.state.WSUrl = address2;\n        } else {\n          //未登录游客\n          tradePageStore.state.WSUrl = address1;\n        }\n\n        tradePageStore.state.apiUrl = address3;\n\n        if (GetURLParam()) {\n          urlParams = GetURLParam();\n\n          if (urlParams.tradeTabIndex != 5) {\n            this.chooseTap(urlParams.tradeTabIndex);\n          }\n        } else {\n          this.initChartUrl();\n        }\n      }\n    },\n    isMarketLogin: function isMarketLogin() {\n      if (this.MarketLogin && tradePageStore.state.tradeTabIndex == 4) {\n        marketStore.dispatch('depthSubscribe');\n        marketStore.dispatch('tickerSubscribe');\n      }\n    },\n    isNetworkConnect: function isNetworkConnect() {\n      if (this.isNetworkConnect) {\n        this.getAddress();\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.networkChange();\n    this.getChooseContract();\n    this.getTradeAccount();\n    emitter.$on('openLayer', function () {\n      console.log('暂未登录交易');\n      _this2.loginErrorLayer = layer.open({\n        type: 1,\n        content: $('#tradeLoginLayer2'),\n        area: ['7.3rem', '6rem'],\n        shadeClose: true,\n        title: null,\n        closeBtn: 0\n      });\n    });\n  },\n  methods: {\n    //网络变化\n    networkChange: function networkChange() {\n      var _this = this;\n\n      if (window.navigator.onLine == true) {\n        tradePageStore.state.isNetworkConnect = true;\n      } else {\n        layer.msg('未连接网络', {\n          time: 1500\n        });\n        tradePageStore.state.isNetworkConnect = false;\n        _this.addressStatus = false;\n      }\n\n      window.addEventListener(\"online\", online, false);\n      window.addEventListener(\"offline\", offline, false);\n\n      function online() {\n        tradePageStore.state.isNetworkConnect = true;\n        layer.msg('网络连接', {\n          time: 1500\n        });\n      }\n\n      function offline() {\n        tradePageStore.state.isNetworkConnect = false;\n        _this.addressStatus = false;\n        layer.msg('网络断开，请检查网络', {\n          time: 2000\n        });\n      }\n    },\n    //查询活动\n    checkActivity: function checkActivity() {\n      var activityType = '020';\n\n      if (this.tradeType == 0) {\n        //模拟\n        activityType = '020';\n      } else if (this.tradeType == 1) {\n        //实盘\n        activityType = '022,023';\n      }\n\n      request.post('/qryActivites', {\n        activityType: activityType\n      }, {\n        token: userInfo.token,\n        secret: userInfo.secret,\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }).then(function (res) {\n        if (res.success && res.code == '010') {\n          for (var i = 0; i < res.data.length; i++) {\n            tradeStore.state.activityStatus = res.data[i].complatedStatus;\n            tradeStore.state.received = res.data[i].received;\n            tradeStore.state.activitiesName = res.data[i].activityName;\n            var a = res.data[i].id;\n            tradeStore.state.activityId = res.data[i].id;\n\n            if (res.data[i].received == '010') {\n              request.post('/activitiesCoupon', {\n                activityId: a\n              }, {\n                token: userInfo.token,\n                secret: userInfo.secret\n              }).then(function (res2) {\n                if (res2.success && res2.code == '010') {\n                  tradeStore.state.couponId = res2.data.couponId;\n                  tradeStore.state.faceValue = res2.data.amount;\n                  tradeStore.state.couponName = res2.data.typeName;\n                  tradeStore.state.activitiesName = res2.data.activitiesName;\n                } else {\n                  layer.msg(res2.message, {\n                    time: 1500\n                  });\n                }\n              })[\"catch\"](function (err) {});\n            }\n\n            if (res.data[i].received == '010') {\n              break;\n            }\n          }\n        } else {\n          layer.msg(res.message, {\n            time: 1500\n          });\n        }\n      })[\"catch\"](function (err) {});\n    },\n    //获取地址\n    getAddress: function getAddress() {\n      var _this3 = this;\n\n      if (sessionStorage.getItem('address')) {\n        var list = JSON.parse(sessionStorage.getItem('address'));\n\n        for (var i = 0; i < list.length; i++) {\n          if (list[i].urlType == '010') {\n            address1 = list[i].url;\n          } else if (list[i].urlType == '020') {\n            address2 = list[i].url;\n          } else if (list[i].urlType == '030') {\n            address3 = list[i].url;\n          } else if (list[i].urlType == '040') {\n            address4 = list[i].url;\n          } else if (list[i].urlType == '050') {\n            address5 = list[i].url;\n          }\n        }\n\n        ;\n        this.addressStatus = true;\n      } else {\n        request.post('/urlConfig', {\n          'version': '',\n          'urlType': ''\n        }).then(function (res) {\n          if (res.success && res.code == '010') {\n            sessionStorage.setItem('address', JSON.stringify(res.data));\n\n            for (var i = 0; i < res.data.length; i++) {\n              if (res.data[i].urlType == '010') {\n                address1 = res.data[i].url;\n              } else if (res.data[i].urlType == '020') {\n                address2 = res.data[i].url;\n              } else if (res.data[i].urlType == '030') {\n                address3 = res.data[i].url;\n              } else if (res.data[i].urlType == '040') {\n                address4 = res.data[i].url;\n              } else if (res.data[i].urlType == '050') {\n                address5 = res.data[i].url;\n              }\n            }\n\n            ;\n            _this3.addressStatus = true;\n          } else {\n            layer.msg(res.message, {\n              time: 1500\n            });\n          }\n        })[\"catch\"](function (err) {\n          console.log(err);\n          ;\n        });\n      }\n    },\n    //关闭弹出层\n    closeLayer: function closeLayer() {\n      layer.closeAll();\n    },\n    //获取选择的合约\n    getChooseContract: function getChooseContract() {\n      if (localStorage.getItem('chooseContract')) {\n        tradeStore.state.chooseContract = JSON.parse(localStorage.getItem('chooseContract')); // marketStore.state.subscribeContract.push(this.chooseContract.commodity_no);\n\n        if (this.chooseContract.quatoData) {\n          marketStore.state.LastData = this.chooseContract.quatoData;\n        }\n\n        marketStore.state.currentQuato = this.chooseContract.security_type + '_' + this.chooseContract.commodity_no;\n        tradePageStore.state.headerTextTop = this.chooseContract.commodity_name;\n        tradePageStore.state.headerTextBottom = this.chooseContract.commodity_no + this.chooseContract.main_contract_no;\n      }\n    },\n    //获取本地存储的交易账号\n    getTradeAccount: function getTradeAccount() {\n      if (localStorage.getItem('tradeAccount')) {\n        //有账号\n        var tradeAccount = JSON.parse(localStorage.getItem('tradeAccount'));\n        tradeStore.state.tradeConfig.ClientNo = tradeAccount.tradeUser;\n        tradeStore.state.tradeConfig.PassWord = tradeAccount.tradePassWord;\n      } else {\n        //无账号\n        var tradeAccount = {\n          tradeUser: 'dev001',\n          tradePassWord: 'MTIz'\n        };\n        localStorage.setItem('tradeAccount', JSON.stringify(tradeAccount));\n        tradeStore.state.tradeConfig.ClientNo = 'dev001';\n        tradeStore.state.tradeConfig.PassWord = 'MTIz';\n      }\n    },\n    //初始化图表\n    initChartUrl: function initChartUrl() {\n      this.tabIndex = 2;\n      tradePageStore.state.chartUrl = this.chartUrl + \"?period='KLINE_UNKNOWN'&contractNo='\" + this.chooseContract.security_type + '_' + this.chooseContract.commodity_no + '_' + this.chooseContract.main_contract_no + \"'&contractName='\" + this.chooseContract.commodity_name + \"'&priceType='1'&apiUrl=\" + tradePageStore.state.apiUrl + \"&WSUrl=\" + tradePageStore.state.WSUrl;\n      tradePageStore.state.chartLoad = true;\n      this.chartIframeLoad();\n    },\n    //iframe加载完毕\n    chartIframeLoad: function chartIframeLoad() {\n      var _this4 = this;\n\n      this.$nextTick(function () {\n        tradePageStore.state.chartIframe = document.getElementById('chartURL');\n\n        if (_this4.chartIframe.attachEvent) {\n          _this4.chartIframe.attachEvent(\"onload\", function () {\n            tradePageStore.state.chartLoad = false;\n            console.log('iframe完毕');\n          });\n        } else {\n          _this4.chartIframe.onload = function () {\n            tradePageStore.state.chartLoad = false;\n            console.log('iframe完毕');\n          };\n        }\n      });\n    },\n    //选择顶部导航栏\n    chooseTap: function chooseTap(index) {\n      if (this.tabIndex == index && index != 3) {\n        return;\n      }\n\n      if (isLogin) {\n        //登录实盘\n        tradePageStore.state.WSUrl = address2;\n      } else {\n        //未登录游客\n        tradePageStore.state.WSUrl = address1;\n      }\n\n      var contractNo = this.chooseContract.security_type + '_' + this.chooseContract.commodity_no + '_' + this.chooseContract.main_contract_no;\n      var contractName = this.chooseContract.commodity_name;\n      tradePageStore.state.tradeTabIndex = index;\n\n      if (index == 4 && marketStore.state.isMarketLogin) {\n        marketStore.dispatch('depthSubscribe');\n        marketStore.dispatch('tickerSubscribe');\n      } else if (marketStore.state.isDepth) {// marketStore.dispatch('cancelDepthSubscribe');\n        // marketStore.dispatch('cancelTickerSubscribe');\n      }\n\n      if (index == 1) {\n        clearTimeout(this.scrollTimer); // \t\t\t\ttradePageStore.state.headerTextTop = this.chooseContract.commodity_name;\n        // \t\t\t\ttradePageStore.state.headerTextBottom = this.chooseContract.commodity_no;\n\n        tradePageStore.state.choosePage = 1;\n        this.tabIndex = index;\n        tradePageStore.state.period = 'LIGHT';\n        tradePageStore.state.chartUrl = this.chartUrl + \"?period='\" + this.period + \"'&contractNo='\" + contractNo + \"'&contractName='\" + contractName + \"'&priceType='\" + this.priceType + \"'\" + \"&apiUrl=\" + tradePageStore.state.apiUrl + \"&WSUrl=\" + tradePageStore.state.WSUrl;\n        tradePageStore.state.chartLoad = true;\n        this.chartIframeLoad();\n      } else if (index == 2) {\n        clearTimeout(this.scrollTimer); // \t\t\t\ttradePageStore.state.headerTextTop = this.chooseContract.commodity_name;\n        // \t\t\t\ttradePageStore.state.headerTextBottom = this.chooseContract.commodity_no;\n\n        tradePageStore.state.choosePage = 1;\n        this.tabIndex = index;\n        tradePageStore.state.period = 'KLINE_UNKNOWN';\n        tradePageStore.state.chartUrl = this.chartUrl + \"?period='\" + this.period + \"'&contractNo='\" + contractNo + \"'&contractName='\" + contractName + \"'&priceType='\" + this.priceType + \"'\" + \"&apiUrl=\" + tradePageStore.state.apiUrl + \"&WSUrl=\" + tradePageStore.state.WSUrl;\n        tradePageStore.state.chartLoad = true;\n        this.chartIframeLoad();\n      } else if (index == 3) {\n        this.isShowKlineOption = !this.isShowKlineOption;\n        this.klineOptionTimer = setTimeout(function () {\n          if (this.isShowKlineOption) {\n            this.isShowKlineOption = false;\n          }\n        }.bind(this), 2000);\n      } else if (index == 4) {\n        clearTimeout(this.scrollTimer);\n        tradePageStore.state.choosePage = 2;\n        this.tabIndex = index;\n        this.scrollTimer = setTimeout(function () {\n          if (mui('.detail-list-scroll')) {\n            mui('.detail-list-scroll').scroll();\n          }\n        }, 0);\n      } else if (index == 5) {\n        if (!isLogin) {\n          this.loginErrorLayer = layer.open({\n            type: 1,\n            content: $('#tradeLoginLayer2'),\n            area: ['7.3rem', '6rem'],\n            shadeClose: true,\n            title: null,\n            closeBtn: 0\n          });\n          return;\n        }\n\n        if (this.tradeLoginStatus == 0 || this.tradeLoginStatus == 1) {\n          layer.msg('正在连接交易', {\n            time: 1500\n          });\n          return;\n        }\n\n        if (!this.isTradeLogin && this.tradeLoginStatus == 3) {\n          console.log('暂未登录交易');\n          this.loginErrorLayer = layer.open({\n            type: 1,\n            content: $('#tradeLoginLayer2'),\n            area: ['7.3rem', '6rem'],\n            shadeClose: true,\n            title: null,\n            closeBtn: 0\n          });\n          return;\n        }\n\n        if (this.tradeLoginStatus == 2) {\n          clearTimeout(this.scrollTimer);\n          this.checkActivity();\n          tradePageStore.state.choosePage = 3;\n          this.scrollTimer = setTimeout(function () {\n            this.initSroll(1);\n            this.initSroll(2);\n            this.initSroll(3);\n            this.initSroll(4);\n          }.bind(this), 500);\n          this.tabIndex = index;\n        }\n      } else if (index == 6) {\n        clearTimeout(this.klineOptionTimer);\n        clearTimeout(this.scrollTimer);\n        tradePageStore.state.choosePage = 1;\n        this.tabIndex = 3;\n        this.isShowKlineOption = false;\n        this.klineName = '1分K';\n        tradePageStore.state.period = 'KLINE_1MIN';\n        tradePageStore.state.chartUrl = this.chartUrl + \"?period='\" + this.period + \"'&contractNo='\" + contractNo + \"'&contractName='\" + contractName + \"'&priceType='\" + this.priceType + \"'\" + \"&apiUrl=\" + tradePageStore.state.apiUrl + \"&WSUrl=\" + tradePageStore.state.WSUrl;\n        tradePageStore.state.chartLoad = true;\n        this.chartIframeLoad();\n      } else if (index == 7) {\n        clearTimeout(this.klineOptionTimer);\n        clearTimeout(this.scrollTimer);\n        tradePageStore.state.choosePage = 1;\n        this.tabIndex = 3;\n        this.isShowKlineOption = false;\n        this.klineName = '5分K';\n        tradePageStore.state.period = 'KLINE_5MIN';\n        tradePageStore.state.chartUrl = this.chartUrl + \"?period='\" + this.period + \"'&contractNo='\" + contractNo + \"'&contractName='\" + contractName + \"'&priceType='\" + this.priceType + \"'\" + \"&apiUrl=\" + tradePageStore.state.apiUrl + \"&WSUrl=\" + tradePageStore.state.WSUrl;\n        tradePageStore.state.chartLoad = true;\n        this.chartIframeLoad();\n      } else if (index == 8) {\n        clearTimeout(this.klineOptionTimer);\n        clearTimeout(this.scrollTimer);\n        tradePageStore.state.choosePage = 1;\n        this.tabIndex = 3;\n        this.isShowKlineOption = false;\n        this.klineName = '15分K';\n        tradePageStore.state.period = 'KLINE_15MIN';\n        tradePageStore.state.chartUrl = this.chartUrl + \"?period='\" + this.period + \"'&contractNo='\" + contractNo + \"'&contractName='\" + contractName + \"'&priceType='\" + this.priceType + \"'\" + \"&apiUrl=\" + tradePageStore.state.apiUrl + \"&WSUrl=\" + tradePageStore.state.WSUrl;\n        tradePageStore.state.chartLoad = true;\n        this.chartIframeLoad();\n      } else if (index == 9) {\n        clearTimeout(this.klineOptionTimer);\n        clearTimeout(this.scrollTimer);\n        tradePageStore.state.choosePage = 1;\n        this.tabIndex = 3;\n        this.isShowKlineOption = false;\n        this.klineName = '30分K';\n        tradePageStore.state.period = 'KLINE_30MIN';\n        tradePageStore.state.chartUrl = this.chartUrl + \"?period='\" + this.period + \"'&contractNo='\" + contractNo + \"'&contractName='\" + contractName + \"'&priceType='\" + this.priceType + \"'\" + \"&apiUrl=\" + tradePageStore.state.apiUrl + \"&WSUrl=\" + tradePageStore.state.WSUrl;\n        tradePageStore.state.chartLoad = true;\n        this.chartIframeLoad();\n      } else if (index == 10) {\n        clearTimeout(this.klineOptionTimer);\n        clearTimeout(this.scrollTimer);\n        tradePageStore.state.choosePage = 1;\n        this.tabIndex = 3;\n        this.isShowKlineOption = false;\n        this.klineName = '日K';\n        tradePageStore.state.period = 'KLINE_1DAY';\n        tradePageStore.state.chartUrl = this.chartUrl + \"?period='\" + this.period + \"'&contractNo='\" + contractNo + \"'&contractName='\" + contractName + \"'&priceType='\" + this.priceType + \"'\" + \"&apiUrl=\" + tradePageStore.state.apiUrl + \"&WSUrl=\" + tradePageStore.state.WSUrl;\n        tradePageStore.state.chartLoad = true;\n        this.chartIframeLoad();\n      }\n    },\n    //初始化滚动\n    initSroll: function initSroll(i) {\n      var tabNav = mui('#tab' + i + '-nav').scroll({\n        scrollY: false,\n        scrollX: false,\n        indicators: false,\n        bounce: false\n      });\n      var tabList = mui('#tab' + i + '-list').scroll({\n        scrollY: true,\n        scrollX: true,\n        indicators: false,\n        bounce: false\n      });\n      document.querySelector('#tab' + i + '-list').addEventListener('scroll', function (e) {\n        mui('#tab' + i + '-nav').scroll().scrollTo(tabList.x, 0);\n      });\n    },\n    //提示未登录交易弹窗按钮\n    layerInfoBtn: function layerInfoBtn(index) {\n      if (index == 1) {\n        //取消\n        layer.closeAll();\n      } else if (index == 2) {\n        //去登录\n        pushRoute({\n          page: '/PQ/pages/my/login/login.html',\n          params: {\n            loginBackPage: '/PQ/pages/quato/quatoDetail/quatoDetail.html',\n            tradeTabIndex: tradePageStore.state.tradeTabIndex\n          }\n        });\n      } else if (index == 3) {\n        //确认\n        tradeStore.dispatch('connectTrade'); //连接交易\n\n        layer.closeAll();\n      }\n    }\n  }\n}); //图表页面\n\nvar chartPage = new Vue({\n  el: '#chart-page',\n  data: {\n    handNum: 1,\n    //选择手数\n    isFirstHand: true,\n    //是否第一次\n    direction: 0,\n    //0:买 1:卖\n    price: '市价',\n    isShowKeyboard: false,\n    //是否显示键盘\n    keyboardPriceType: 3,\n    //键盘1:排队价 2:对手价 3市价 4限价\n    keyboardType: -1,\n    //1手数 2价格\n    sellPrice: 0,\n    //\n    buyPrice: 0,\n    needMoney: 0,\n    isLogin: isLogin,\n    isSendData: false //是否正在发送请求，防止抖动\n\n  },\n  computed: {\n    chooseContract: function chooseContract() {\n      return tradeStore.state.chooseContract;\n    },\n    LastData: function LastData() {\n      return marketStore.state.LastData;\n    },\n    choosePage: function choosePage() {\n      return tradePageStore.state.choosePage;\n    },\n    chartUrl: function chartUrl() {\n      return tradePageStore.state.chartUrl;\n    },\n    tradeTabIndex: function tradeTabIndex() {\n      return tradePageStore.state.tradeTabIndex;\n    },\n    todayCanUseBalance: function todayCanUseBalance() {\n      //今可用\n      return tradeStore.state.todayCanUseBalance;\n    },\n    totalFloatProfit: function totalFloatProfit() {\n      //总浮动盈亏\n      return marketStore.state.totalFloatProfit;\n    },\n    rateList: function rateList() {\n      return tradeStore.state.rateList;\n    },\n    RMBRate: function RMBRate() {\n      return marketStore.state.RMBRate;\n    },\n    isTradeLogin: function isTradeLogin() {\n      return tradeStore.state.isTradeLogin;\n    },\n    isNetworkConnect: function isNetworkConnect() {\n      return tradePageStore.state.isNetworkConnect;\n    },\n    tradeType: function tradeType() {\n      return tradeStore.state.tradeType;\n    },\n    chartLoad: function chartLoad() {\n      return tradePageStore.state.chartLoad;\n    },\n    chartIframe: function chartIframe() {\n      return tradePageStore.state.chartIframe;\n    }\n  },\n  watch: {\n    LastData: function LastData() {\n      if (this.keyboardPriceType == 1) {\n        //排队价\n        this.sellPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n        this.buyPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n      } else if (this.keyboardPriceType == 2) {\n        //对手价\n        this.sellPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n        this.buyPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n      } else if (this.keyboardPriceType == 3) {\n        //市价\n        this.sellPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n        this.buyPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n      }\n    },\n    tradeTabIndex: function tradeTabIndex() {\n      if (this.tradeTabIndex != 1) {\n        this.isShowKeyboard = false;\n        this.keyboardType = -1;\n      }\n    },\n    chooseContract: function chooseContract() {\n      if (this.keyboardPriceType == 4) {\n        this.keyboardPriceType = 3;\n        this.sellPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n        this.buyPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n        this.price = '市价';\n      }\n    },\n    isTradeLogin: function isTradeLogin() {\n      if (this.isTradeLogin) {\n        if (this.loginErrorLayer != null) {\n          this.loginErrorLayer.close();\n        }\n      }\n    }\n  },\n  mounted: function mounted() {\n    urlParams = GetURLParam();\n\n    if (urlParams.tradeTabIndex != 4 && urlParams.tradeTabIndex != 5) {\n      tradePageStore.state.choosePage = 1;\n    } //排队价\n\n\n    if (this.keyboardPriceType == 1) {\n      this.sellPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n      this.buyPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n    } else if (this.keyboardPriceType == 2) {\n      //对手价\n      this.sellPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n      this.buyPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n    } else if (this.keyboardPriceType == 3) {\n      //市价\n      this.sellPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n      this.buyPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n    }\n  },\n  methods: {\n    //打开键盘\n    showKeyboard: function showKeyboard(type) {\n      this.isShowKeyboard = true;\n      this.keyboardType = type;\n      setTimeout(function () {\n        var height = document.getElementsByClassName('trade-area')[0].clientHeight;\n        document.getElementsByClassName('chart')[0].style.height = 'calc(100% - ' + height + 'px)';\n        document.getElementById('chartURL').style.height = '100%';\n\n        if (!this.isShowKeyboard) {\n          this.keyboardType = -1;\n        }\n      }.bind(this), 500);\n    },\n    //关闭键盘\n    closeKeyboard: function closeKeyboard() {\n      this.isShowKeyboard = false;\n\n      if (this.handNum == '' || this.handNum == 0) {\n        this.handNum = 1;\n      }\n\n      setTimeout(function () {\n        var height = document.getElementsByClassName('trade-area')[0].clientHeight;\n        document.getElementsByClassName('chart')[0].style.height = 'calc(100% - ' + height + 'px)';\n        document.getElementById('chartURL').style.height = '100%';\n\n        if (!this.isShowKeyboard) {\n          this.keyboardType = -1;\n        }\n      }.bind(this), 500);\n    },\n    //输入数字\n    chooseKeyboardNum: function chooseKeyboardNum(num) {\n      if (num == '市价' || num == '对手价' || num == '排队价') {\n        this.price = num;\n        this.keyboardPriceType = num == '市价' ? 3 : num == '对手价' ? 2 : num == '排队价' ? 1 : 4;\n\n        if (num == '市价') {\n          this.sellPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n          this.buyPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n        } else if (num == '对手价') {\n          this.sellPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n          this.buyPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n        } else if (num == '排队价') {\n          this.sellPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n          this.buyPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n        }\n      }\n\n      if (num == '限价') {\n        this.keyboardPriceType = 4;\n        this.price = this.LastData[3];\n      } else if (typeof num == 'number') {\n        if (this.keyboardType == 1) {\n          if (this.isFirstHand) {\n            this.handNum = num;\n            this.isFirstHand = false;\n          } else {\n            if (this.handNum == 0) {\n              this.handNum = '';\n            }\n\n            this.handNum = this.handNum.toString() + num.toString();\n\n            if (Number(this.handNum) > 99) {\n              this.handNum = 99;\n            }\n          }\n        } else if (this.keyboardType == 2) {\n          this.keyboardPriceType = 4;\n\n          if (this.price == '市价' || this.price == '限价' || this.price == '对手价' || this.price == '排队价') {\n            this.price = num.toString();\n          } else {\n            if (this.price == 0) {\n              this.price = '';\n            }\n\n            this.price = this.price.toString() + num.toString();\n          }\n        }\n      } else if (num == '.') {\n        if (this.keyboardType == 1) {\n          if (JSON.stringify(this.handNum).indexOf('.') == -1 && (this.handNum != '0' || this.handNum != '')) {\n            this.handNum = this.handNum.toString() + num.toString();\n          }\n        } else if (this.keyboardType == 2) {\n          if (this.price == '市价' || this.price == '限价' || this.price == '对手价' || this.price == '排队价') {\n            return;\n          }\n\n          if (this.price.indexOf('.') == -1 && (this.price != '0' || this.price != '')) {\n            this.price = this.price.toString() + num.toString();\n          }\n        }\n      } else if (num == 'back') {\n        if (this.keyboardType == 1) {\n          this.handNum = this.handNum.toString();\n          this.handNum = this.handNum.substr(0, this.handNum.length - 1);\n\n          if (this.handNum == '') {\n            this.handNum = 0;\n          }\n        } else if (this.keyboardType == 2) {\n          if (this.price == '' || this.price == 0 || this.price == '市价' || this.price == '限价' || this.price == '对手价' || this.price == '排队价') {\n            return;\n          }\n\n          ;\n          this.price = this.price.toString();\n          this.price = this.price.substr(0, this.price.length - 1);\n\n          if (this.price == '') {\n            this.price = '0';\n          }\n        }\n      } else if (num == '加') {\n        if (this.keyboardType == 1) {\n          this.handNum = Number(this.handNum) + 1;\n\n          if (this.handNum > 99) {\n            this.handNum = 99;\n          }\n        } else if (this.keyboardType == 2) {\n          if (this.keyboardPriceType == 4) {\n            this.price = (Number(this.price) + Number(this.chooseContract.mini_ticker_size)).toFixed(this.chooseContract.dotSize);\n          }\n        }\n      } else if (num == '减') {\n        if (this.keyboardType == 1) {\n          this.handNum = Number(this.handNum) - 1;\n\n          if (this.handNum <= 0) {\n            this.handNum = 1;\n          }\n        } else if (this.keyboardType == 2) {\n          if (this.keyboardPriceType == 4) {\n            this.price = (Number(this.price) - this.chooseContract.mini_ticker_size).toFixed(this.chooseContract.dotSize);\n\n            if (this.price <= 0) {\n              this.price = 0;\n            }\n          }\n        }\n      }\n    },\n    //选择手数\n    chooseNum: function chooseNum(index) {\n      if (index == 1) {\n        //加\n        this.handNum++;\n      } else if (index == 2) {\n        //减\n        if (this.handNum - 1 == 0) {\n          this.handNum = 1;\n          return;\n        }\n\n        this.handNum--;\n      }\n    },\n    //买卖\n    tradeBtn: function tradeBtn(index) {\n      if (!this.isNetworkConnect) {\n        //未联网\n        layer.msg('未连接到网络，请检查网络设置', {\n          time: 2000\n        });\n        return;\n      }\n\n      if (!tradeStore.state.isTradeLogin) {\n        this.loginErrorLayer = layer.open({\n          type: 1,\n          content: $('#tradeLoginLayer2'),\n          area: ['7.3rem', '6rem'],\n          shadeClose: true,\n          title: null,\n          closeBtn: 0\n        });\n        return;\n      }\n\n      this.closeKeyboard();\n      var needMoney = (Number(this.chooseContract.deposit) * Number(this.handNum) + Number(this.chooseContract.fee) * Number(this.handNum)) * this.rateList[this.chooseContract.currencyNo];\n      var haveMoney = this.todayCanUseBalance + this.totalFloatProfit;\n      this.needMoney = (Number(this.chooseContract.deposit) * Number(this.handNum) + Number(this.chooseContract.fee) * Number(this.handNum)) * this.rateList[this.chooseContract.currencyNo] / this.rateList.CNY;\n      this.needMoney = Number(this.needMoney.toFixed(2)); // if(needMoney>haveMoney){\n      // \t//余额不足\n      // \tif(this.tradeType == 0){\n      // \t\tlayer.msg('余额不足，请领取模拟金',{\n      // \t\t\ttime:1500\n      // \t\t});\n      // \t}else{\n      // \t\tlayer.open({\n      // \t\t\ttype:1,\n      // \t\t\tcontent:$('#balanceInfoLayer'),\n      // \t\t\tarea:['7.3rem','6rem'],\n      // \t\t\tshadeClose:true,\n      // \t\t\ttitle:null,\n      // \t\t\tcloseBtn:0,\n      // \t\t})\n      // \t}\n      // \treturn;\n      // }\n\n      if (index == 1) {\n        //买入\n        this.direction = 0;\n      } else if (index == 2) {\n        //卖出\n        this.direction = 1;\n      }\n\n      layer.open({\n        type: 1,\n        content: $('#confirmOrderOpenLayer'),\n        area: ['7.3rem', '6rem'],\n        shadeClose: true,\n        title: null,\n        closeBtn: 0\n      });\n    },\n    layerBtn: function layerBtn(index) {\n      if (index == 1) {\n        //取消\n        layer.closeAll();\n      } else if (index == 2) {\n        if (this.isSendData) {\n          return;\n        }\n\n        this.isSendData = true; //确定下单\n\n        var method = 'InsertOrder'; //调用方法\n\n        var params = {\n          CommodityType: Number(this.chooseContract.typeCode),\n          //1国际期货\n          ExchangeNo: this.chooseContract.exchange_no,\n          // 交易所代码\n          CommodityNo: this.chooseContract.commodity_no,\n          //品种代码\n          ContractNo: this.chooseContract.main_contract_no,\n          //合约代码\n          OrderNum: Number(this.handNum),\n          //订单数量\n          Direction: this.direction,\n          //买卖方向 0:买 1:卖\n          PriceType: this.keyboardPriceType == 3 ? 1 : 0,\n          //价格类型 0:限价 1:市价\n          LimitPrice: this.keyboardPriceType == 3 ? 0 : this.keyboardPriceType == 4 ? Number(this.price) : this.direction == 0 ? Number(this.buyPrice) : Number(this.sellPrice),\n          //限价价格\n          OrderRef: '',\n          //自定义数据\n          OpenCloseType: 1 //开平类型 1-开仓 2-平仓 3-平今\n\n        }; //传入参数\n\n        tradeStore.dispatch('sendWS', {\n          method: method,\n          params: params\n        });\n        layer.closeAll();\n        setTimeout(function () {\n          this.isSendData = false;\n        }.bind(this), 500);\n      }\n    },\n    //提示未登录交易弹窗按钮\n    layerInfoBtn: function layerInfoBtn(index) {\n      if (index == 1) {\n        //取消\n        layer.closeAll();\n      } else if (index == 2) {\n        //去登录\n        pushRoute({\n          page: '/PQ/pages/my/login/login.html',\n          params: {\n            loginBackPage: '/PQ/pages/quato/quatoDetail/quatoDetail.html',\n            tradeTabIndex: tradePageStore.state.tradeTabIndex\n          }\n        });\n      }\n    },\n    closeLayer: function closeLayer() {\n      layer.closeAll();\n    },\n    goToPage: function goToPage(path) {\n      var isLayer = false;\n\n      if (arguments[1] == 1) {\n        isLayer = true;\n      }\n\n      var params = {\n        tradeTabIndex: tradePageStore.state.tradeTabIndex\n      };\n\n      if (isLayer) {\n        params.money = this.needMoney;\n      }\n\n      pushRoute({\n        page: path,\n        params: params\n      });\n    }\n  }\n}); //盘口\n\nvar positionPage = new Vue({\n  el: '#position-page',\n  data: {\n    handNum: 1,\n    //选择手数\n    isFirstHand: true,\n    //是否第一次\n    direction: 0,\n    //0:买 1:卖\n    price: '市价',\n    isShowKeyboard: false,\n    //是否显示键盘\n    keyboardPriceType: 3,\n    //键盘1:排队价 2:对手价 3市价 4限价\n    keyboardType: -1,\n    //1手数 2价格\n    pageIndex: 1,\n    //1盘口/五档 2逐笔明细\n    sell5: [0, 0],\n    sell4: [0, 0],\n    sell3: [0, 0],\n    sell2: [0, 0],\n    sell1: [0, 0],\n    buy1: [0, 0],\n    buy2: [0, 0],\n    buy3: [0, 0],\n    buy4: [0, 0],\n    buy5: [0, 0],\n    detailList: [],\n    //逐笔明细数据\n    preData: [],\n    //上一条最新数据用于计算成交量\n    sellPrice: 0,\n    buyPrice: 0,\n    needMoney: 0,\n    isLogin: isLogin,\n    isSendData: false,\n    //是否正在请求数据中\n    loginErrorLayer: null,\n    //登录错误弹窗\n    scrollTimer: null //滚动实例\n\n  },\n  computed: {\n    choosePage: function choosePage() {\n      return tradePageStore.state.choosePage;\n    },\n    chooseContract: function chooseContract() {\n      return tradeStore.state.chooseContract;\n    },\n    LastData: function LastData() {\n      return marketStore.state.LastData;\n    },\n    depthLastData: function depthLastData() {\n      return marketStore.state.depthLastData;\n    },\n    tradeTabIndex: function tradeTabIndex() {\n      return tradePageStore.state.tradeTabIndex;\n    },\n    todayCanUseBalance: function todayCanUseBalance() {\n      //今可用\n      return tradeStore.state.todayCanUseBalance;\n    },\n    totalFloatProfit: function totalFloatProfit() {\n      //总浮动盈亏\n      return marketStore.state.totalFloatProfit;\n    },\n    rateList: function rateList() {\n      return tradeStore.state.rateList;\n    },\n    RMBRate: function RMBRate() {\n      return marketStore.state.RMBRate;\n    },\n    tickerList: function tickerList() {\n      return marketStore.state.tickerList;\n    },\n    isTradeLogin: function isTradeLogin() {\n      return tradeStore.state.isTradeLogin;\n    },\n    isNetworkConnect: function isNetworkConnect() {\n      return tradePageStore.state.isNetworkConnect;\n    },\n    tradeType: function tradeType() {\n      return tradeStore.state.tradeType;\n    }\n  },\n  watch: {\n    depthLastData: function depthLastData() {\n      if (this.depthLastData[2] == 2) {\n        this.sell2[0] = this.depthLastData[3].toFixed(this.chooseContract.dotSize);\n        this.sell2[1] = this.depthLastData[4];\n        this.buy2[0] = this.depthLastData[5].toFixed(this.chooseContract.dotSize);\n        this.buy2[1] = this.depthLastData[6];\n      } else if (this.depthLastData[2] == 3) {\n        this.sell3[0] = this.depthLastData[3].toFixed(this.chooseContract.dotSize);\n        this.sell3[1] = this.depthLastData[4];\n        this.buy3[0] = this.depthLastData[5].toFixed(this.chooseContract.dotSize);\n        this.buy3[1] = this.depthLastData[6];\n      } else if (this.depthLastData[2] == 4) {\n        this.sell4[0] = this.depthLastData[3].toFixed(this.chooseContract.dotSize);\n        this.sell4[1] = this.depthLastData[4];\n        this.buy4[0] = this.depthLastData[5].toFixed(this.chooseContract.dotSize);\n        this.buy4[1] = this.depthLastData[6];\n      } else if (this.depthLastData[2] == 5) {\n        this.sell5[0] = this.depthLastData[3].toFixed(this.chooseContract.dotSize);\n        this.sell5[1] = this.depthLastData[4];\n        this.buy5[0] = this.depthLastData[5].toFixed(this.chooseContract.dotSize);\n        this.buy5[1] = this.depthLastData[6];\n      }\n    },\n    chooseContract: function chooseContract() {\n      marketStore.state.tickerList = [];\n      this.detailList = [];\n      this.preData = [];\n      this.sell5 = [0, 0];\n      this.sell4 = [0, 0];\n      this.sell3 = [0, 0];\n      this.sell2 = [0, 0];\n      this.sell1 = [0, 0];\n      this.buy1 = [0, 0];\n      this.buy2 = [0, 0];\n      this.buy3 = [0, 0];\n      this.buy4 = [0, 0];\n      this.buy5 = [0, 0];\n\n      if (this.keyboardPriceType == 4) {\n        this.keyboardPriceType = 3;\n        this.sellPrice = this.LastData[3].toFixed(this.chooseContract.dotSize);\n        this.buyPrice = this.LastData[3].toFixed(this.chooseContract.dotSize);\n        this.price = '市价';\n      }\n    },\n    LastData: function LastData() {\n      if (this.keyboardPriceType == 1) {\n        //排队价\n        this.sellPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n        this.buyPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n      } else if (this.keyboardPriceType == 2) {\n        //对手价\n        this.sellPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n        this.buyPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n      } else if (this.keyboardPriceType == 3) {\n        //市价\n        this.sellPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n        this.buyPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n      }\n    },\n    tradeTabIndex: function tradeTabIndex() {\n      if (this.tradeTabIndex != 1) {\n        this.isShowKeyboard = false;\n        this.keyboardType = -1;\n      }\n    },\n    isTradeLogin: function isTradeLogin() {\n      if (this.isTradeLogin) {\n        if (this.loginErrorLayer != null) {\n          this.loginErrorLayer.close();\n        }\n      }\n    }\n  },\n  mounted: function mounted() {},\n  methods: {\n    //切换页面\n    switchPage: function switchPage(index) {\n      if (this.scrollTimer != null) {\n        clearTimeout(this.scrollTimer);\n      }\n\n      this.pageIndex = index;\n      this.scrollTimer = setTimeout(function () {\n        mui('.detail-list-scroll').scroll();\n      }, 500);\n    },\n    //打开键盘\n    showKeyboard: function showKeyboard(type) {\n      this.isShowKeyboard = true;\n      this.keyboardType = type;\n      setTimeout(function () {\n        if (!this.isShowKeyboard) {\n          this.keyboardType = -1;\n        }\n      }.bind(this), 500);\n    },\n    //关闭键盘\n    closeKeyboard: function closeKeyboard() {\n      this.isShowKeyboard = false;\n\n      if (this.handNum == '' || this.handNum == 0) {\n        this.handNum = 1;\n      }\n\n      setTimeout(function () {\n        if (!this.isShowKeyboard) {\n          this.keyboardType = -1;\n        }\n      }.bind(this), 500);\n    },\n    //输入数字\n    chooseKeyboardNum: function chooseKeyboardNum(num) {\n      if (num == '市价' || num == '对手价' || num == '排队价') {\n        this.price = num;\n        this.keyboardPriceType = num == '市价' ? 3 : num == '对手价' ? 2 : num == '排队价' ? 1 : 4;\n\n        if (num == '市价') {\n          this.sellPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n          this.buyPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n        } else if (num == '对手价') {\n          this.sellPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n          this.buyPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n        } else if (num == '排队价') {\n          this.sellPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n          this.buyPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n        }\n      }\n\n      if (num == '限价') {\n        this.keyboardPriceType = 4;\n        this.price = this.LastData[3];\n      } else if (typeof num == 'number') {\n        if (this.keyboardType == 1) {\n          if (this.isFirstHand) {\n            this.handNum = num;\n            this.isFirstHand = false;\n          } else {\n            if (this.handNum == 0) {\n              this.handNum = '';\n            }\n\n            this.handNum = this.handNum.toString() + num.toString();\n\n            if (Number(this.handNum) > 99) {\n              this.handNum = 99;\n            }\n          }\n        } else if (this.keyboardType == 2) {\n          this.keyboardPriceType = 4;\n\n          if (this.price == '市价' || this.price == '限价' || this.price == '对手价' || this.price == '排队价') {\n            this.price = num.toString();\n          } else {\n            if (this.price == 0) {\n              this.price = '';\n            }\n\n            this.price = this.price.toString() + num.toString();\n          }\n        }\n      } else if (num == '.') {\n        if (this.price == '市价' || this.price == '限价' || this.price == '对手价' || this.price == '排队价') {\n          return;\n        }\n\n        if (this.price.indexOf('.') == -1 && (this.price != '0' || this.price != '')) {\n          this.price = this.price.toString() + num.toString();\n        }\n      } else if (num == 'back') {\n        if (this.keyboardType == 1) {\n          this.handNum = this.handNum.toString();\n          this.handNum = this.handNum.substr(0, this.handNum.length - 1);\n\n          if (this.handNum == '') {\n            this.handNum = 0;\n          }\n        } else if (this.keyboardType == 2) {\n          if (this.price == '' || this.price == 0 || this.price == '市价' || this.price == '限价' || this.price == '对手价' || this.price == '排队价') {\n            return;\n          }\n\n          ;\n          this.price = this.price.toString();\n          this.price = this.price.substr(0, this.price.length - 1);\n\n          if (this.price == '') {\n            this.price = '0';\n          }\n        }\n      } else if (num == '加') {\n        if (this.keyboardType == 1) {\n          this.handNum = Number(this.handNum) + 1;\n\n          if (this.handNum > 99) {\n            this.handNum = 99;\n          }\n        } else if (this.keyboardType == 2) {\n          if (this.keyboardPriceType == 4) {\n            this.price = (Number(this.price) + Number(this.chooseContract.mini_ticker_size)).toFixed(this.chooseContract.dotSize);\n          }\n        }\n      } else if (num == '减') {\n        if (this.keyboardType == 1) {\n          this.handNum = Number(this.handNum) - 1;\n\n          if (this.handNum <= 0) {\n            this.handNum = 1;\n          }\n        } else if (this.keyboardType == 2) {\n          if (this.keyboardPriceType == 4) {\n            this.price = (Number(this.price) - this.chooseContract.mini_ticker_size).toFixed(this.chooseContract.dotSize);\n\n            if (this.price <= 0) {\n              this.price = 0;\n            }\n          }\n        }\n      }\n    },\n    //选择手数\n    chooseNum: function chooseNum(index) {\n      if (index == 1) {\n        //加\n        this.handNum++;\n      } else if (index == 2) {\n        //减\n        if (this.handNum - 1 == 0) {\n          this.handNum = 1;\n          return;\n        }\n\n        this.handNum--;\n      }\n    },\n    //买卖\n    tradeBtn: function tradeBtn(index) {\n      if (!this.isNetworkConnect) {\n        //未联网\n        layer.msg('未连接到网络，请检查网络设置', {\n          time: 2000\n        });\n        return;\n      }\n\n      if (!tradeStore.state.isTradeLogin || !isLogin) {\n        this.loginErrorLayer = layer.open({\n          type: 1,\n          content: $('#tradeLoginLayer2'),\n          area: ['7.3rem', '6rem'],\n          shadeClose: true,\n          title: null,\n          closeBtn: 0\n        });\n        return;\n      }\n\n      this.closeKeyboard();\n      var needMoney = (Number(this.chooseContract.deposit) * Number(this.handNum) + Number(this.chooseContract.fee) * Number(this.handNum)) * this.rateList[this.chooseContract.currencyNo];\n      var haveMoney = this.todayCanUseBalance + this.totalFloatProfit;\n      this.needMoney = (Number(this.chooseContract.deposit) * Number(this.handNum) + Number(this.chooseContract.fee) * Number(this.handNum)) * this.rateList[this.chooseContract.currencyNo] / this.rateList.CNY;\n      this.needMoney = Number(this.needMoney.toFixed(2)); // if(needMoney>haveMoney){\n      // \t//余额不足\n      // \tif(this.tradeType == 0){\n      // \t\tlayer.msg('余额不足，请领取模拟金',{\n      // \t\t\ttime:1500\n      // \t\t});\n      // \t}else{\n      // \t\tlayer.open({\n      // \t\t\ttype:1,\n      // \t\t\tcontent:$('#balanceInfoLayer'),\n      // \t\t\tarea:['7.3rem','6rem'],\n      // \t\t\tshadeClose:true,\n      // \t\t\ttitle:null,\n      // \t\t\tcloseBtn:0,\n      // \t\t})\n      // \t}\n      // \treturn;\n      // }\n\n      if (index == 1) {\n        //买入\n        this.direction = 0;\n      } else if (index == 2) {\n        //卖出\n        this.direction = 1;\n      }\n\n      layer.open({\n        type: 1,\n        content: $('#confirmOrderOpenLayer'),\n        area: ['7.3rem', '6rem'],\n        shadeClose: true,\n        title: null,\n        closeBtn: 0\n      });\n    },\n    layerBtn: function layerBtn(index) {\n      if (index == 1) {\n        //取消\n        layer.closeAll();\n      } else if (index == 2) {\n        if (this.isSendData) {\n          return;\n        }\n\n        ;\n        this.isSendData = true; //确定下单\n\n        var method = 'InsertOrder'; //调用方法\n\n        var params = {\n          CommodityType: Number(this.chooseContract.typeCode),\n          //1国际期货\n          ExchangeNo: this.chooseContract.exchange_no,\n          // 交易所代码\n          CommodityNo: this.chooseContract.commodity_no,\n          //品种代码\n          ContractNo: this.chooseContract.main_contract_no,\n          //合约代码\n          OrderNum: Number(this.handNum),\n          //订单数量\n          Direction: this.direction,\n          //买卖方向 0:买 1:卖\n          PriceType: this.keyboardPriceType == 3 ? 1 : 0,\n          //价格类型 0:限价 1:市价\n          LimitPrice: this.keyboardPriceType == 3 ? 0 : this.keyboardPriceType == 4 ? Number(this.price) : this.direction == 0 ? Number(this.buyPrice) : Number(this.sellPrice),\n          //限价价格\n          OrderRef: '',\n          //自定义数据\n          OpenCloseType: 1 //开平类型 1-开仓 2-平仓 3-平今\n\n        }; //传入参数\n\n        tradeStore.dispatch('sendWS', {\n          method: method,\n          params: params\n        });\n        layer.closeAll();\n        setTimeout(function () {\n          this.isSendData = true;\n        }.bind(this), 500);\n      }\n    },\n    //提示未登录交易弹窗按钮\n    layerInfoBtn: function layerInfoBtn(index) {\n      if (index == 1) {\n        //取消\n        layer.closeAll();\n      } else if (index == 2) {\n        //去登录\n        pushRoute({\n          page: '/PQ/pages/my/login/login.html',\n          params: {\n            loginBackPage: '/PQ/pages/quato/quatoDetail/quatoDetail.html',\n            tradeTabIndex: tradePageStore.state.tradeTabIndex\n          }\n        });\n      }\n    },\n    closeLayer: function closeLayer() {\n      layer.closeAll();\n    },\n    goToPage: function goToPage(path) {\n      var isLayer = false;\n\n      if (arguments[1] == 1) {\n        isLayer = true;\n      }\n\n      var params = {\n        tradeTabIndex: tradePageStore.state.tradeTabIndex\n      };\n\n      if (isLayer) {\n        params.money = this.needMoney;\n      }\n\n      pushRoute({\n        page: path,\n        params: params\n      });\n    }\n  }\n}); //交易中心\n\nvar tradeCenterPage = new Vue({\n  el: '#trade-center-page',\n  data: (_data = {\n    isNormalPrice: false,\n    //是否市价\n    handNum: 1,\n    //手数\n    isFirstHand: true,\n    //是否首次\n    stopHandNum: 1,\n    //止损手数\n    limitPrice: '市价',\n    //限价价格\n    tabIndex: 1,\n    //导航索引\n    contractIndex: -1,\n    //选择合约\n    layerTabIndex: 0,\n    //止损止盈导航索引\n    selectContractItem: {},\n    //选择的合约\n    direction: 0,\n    //买卖方向 0:买 1:卖\n    confirmInfoType: 0\n  }, _defineProperty(_data, \"layerTabIndex\", 0), _defineProperty(_data, \"stopLossType\", 0), _defineProperty(_data, \"stopLossPrice\", 0), _defineProperty(_data, \"stopLossRate\", 0), _defineProperty(_data, \"stopProfitPrice\", 0), _defineProperty(_data, \"stopProfitRate\", 0), _defineProperty(_data, \"selectContractLastData\", []), _defineProperty(_data, \"changeOrderPrice\", 0), _defineProperty(_data, \"changeOrderNum\", 0), _defineProperty(_data, \"isShowKeyboard\", false), _defineProperty(_data, \"keyboardPriceType\", 3), _defineProperty(_data, \"keyboardType\", -1), _defineProperty(_data, \"isShowPriceType\", false), _defineProperty(_data, \"sellPrice\", 0), _defineProperty(_data, \"buyPrice\", 0), _defineProperty(_data, \"forceLine\", 0), _defineProperty(_data, \"allOrderHandNum\", 0), _defineProperty(_data, \"templeOrderHandNum\", 0), _defineProperty(_data, \"needMoney\", 0), _defineProperty(_data, \"capitalInfoLayer\", null), _defineProperty(_data, \"capitalInfoTitle\", ''), _defineProperty(_data, \"capitalInfoContent\", ''), _defineProperty(_data, \"capitalType1\", true), _defineProperty(_data, \"capitalType2\", true), _defineProperty(_data, \"positionCashDeposit\", 0), _defineProperty(_data, \"finishOrderList\", []), _defineProperty(_data, \"isSendData\", false), _defineProperty(_data, \"isLogin\", isLogin), _data),\n  computed: {\n    choosePage: function choosePage() {\n      return tradePageStore.state.choosePage;\n    },\n    LastData: function LastData() {\n      //选择合约的最新数据\n      return marketStore.state.LastData;\n    },\n    chooseContract: function chooseContract() {\n      return tradeStore.state.chooseContract;\n    },\n    tradeBascData: function tradeBascData() {\n      //交易基本数据\n      return tradeStore.state.tradeBascData;\n    },\n    deposit: function deposit() {\n      return tradeStore.state.deposit;\n    },\n    totalBalance: function totalBalance() {\n      //总资产\n      return tradeStore.state.totalBalance;\n    },\n    todayCanUseBalance: function todayCanUseBalance() {\n      //今可用\n      return tradeStore.state.todayCanUseBalance;\n    },\n    positionList: function positionList() {\n      //持仓列表\n      return tradeStore.state.positionList;\n    },\n    templeList: function templeList() {\n      //挂单列表\n      return tradeStore.state.templeList;\n    },\n    allOrderList: function allOrderList() {\n      //委托单列表(全部列表)\n      return tradeStore.state.allOrderList;\n    },\n    totalFloatProfit: function totalFloatProfit() {\n      //总浮动盈亏\n      return marketStore.state.totalFloatProfit;\n    },\n    internationalCommodity: function internationalCommodity() {\n      //订阅的合约\n      return marketStore.state.internationalCommodity;\n    },\n    allSubsCommodity: function allSubsCommodity() {\n      return marketStore.state.allSubsCommodity;\n    },\n    totalPositionNum: function totalPositionNum() {\n      return tradeStore.state.totalPositionNum;\n    },\n    tradeTabIndex: function tradeTabIndex() {\n      return tradePageStore.state.tradeTabIndex;\n    },\n    RMBRate: function RMBRate() {\n      return marketStore.state.RMBRate;\n    },\n    tradeType: function tradeType() {\n      return tradeStore.state.tradeType;\n    },\n    rateList: function rateList() {\n      return tradeStore.state.rateList;\n    },\n    depositList: function depositList() {\n      return marketStore.state.depositList;\n    },\n    feeList: function feeList() {\n      return marketStore.state.feeList;\n    },\n    isTradeLogin: function isTradeLogin() {\n      return tradeStore.state.isTradeLogin;\n    },\n    isNetworkConnect: function isNetworkConnect() {\n      return tradePageStore.state.isNetworkConnect;\n    },\n    activityStatus: function activityStatus() {\n      return tradeStore.state.activityStatus;\n    },\n    received: function received() {\n      return tradeStore.state.received;\n    },\n    faceValue: function faceValue() {\n      return tradeStore.state.faceValue;\n    },\n    couponName: function couponName() {\n      return tradeStore.state.couponName;\n    },\n    activitiesName: function activitiesName() {\n      return tradeStore.state.activitiesName;\n    }\n  },\n  watch: {\n    positionList: function positionList() {\n      this.positionCashDeposit = 0;\n\n      for (var i = 0; i < this.positionList.length; i++) {\n        this.positionCashDeposit = this.positionCashDeposit + this.depositList[this.positionList[i].CommodityNo] * this.positionList[i].HoldNum * this.rateList[this.positionList[i].CurrencyNo];\n\n        if (this.selectContractItem.CommodityNo == this.positionList[i].CommodityNo) {\n          this.selectContractItem = this.positionList[i];\n        }\n      }\n    },\n    templeList: function templeList() {\n      this.templeOrderHandNum = 0;\n\n      for (var i = 0; i < this.templeList.length; i++) {\n        if (this.templeList[i].OrderStatus == 1) {\n          this.templeOrderHandNum += this.templeList[i].OrderNum;\n        }\n      }\n    },\n    stopLossType: function stopLossType() {\n      this.setStopLossType();\n    },\n    allSubsCommodity: function allSubsCommodity() {\n      if (this.selectContractItem) {\n        var allSubsCommodity = this.allSubsCommodity;\n\n        for (var i = 0, length = allSubsCommodity.length; i < length; i++) {\n          if (allSubsCommodity[i].commodity_no == this.selectContractItem.CommodityNo) {\n            this.selectContractLastData = allSubsCommodity[i].quatoData;\n          }\n        }\n      }\n    },\n    LastData: function LastData() {\n      if (this.keyboardPriceType == 1) {\n        //排队价\n        this.sellPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n        this.buyPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n      } else if (this.keyboardPriceType == 2) {\n        //对手价\n        this.sellPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n        this.buyPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n      } else if (this.keyboardPriceType == 3) {\n        //市价\n        this.sellPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n        this.buyPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n      }\n    },\n    tradeTabIndex: function tradeTabIndex() {\n      if (this.tradeTabIndex != 1) {\n        this.isShowKeyboard = false;\n        this.keyboardType = -1;\n      }\n    },\n    deposit: function deposit() {\n      if (this.tradeBascData.RiskRatioForceStatus) {\n        //开启风险度风控\n        this.forceLine = this.deposit / this.tradeBascData.RiskRatioForceClose;\n      } else {\n        if (this.tradeBascData.BalanceForceStatus) {\n          //开启净值风险度\n          this.forceLine = this.tradeBascData.BalanceForceClose;\n        } else {}\n      }\n    },\n    allOrderList: function allOrderList() {\n      this.allOrderHandNum = 0;\n      this.finishOrderList = [];\n\n      for (var i = 0; i < this.allOrderList.length; i++) {\n        if (this.allOrderList[i].OrderStatus == 3) {\n          this.allOrderHandNum += this.allOrderList[i].TradeNum;\n          this.finishOrderList.push(this.allOrderList[i]);\n        }\n      }\n    },\n    chooseContract: function chooseContract() {\n      if (this.keyboardPriceType == 4) {\n        this.keyboardPriceType = 3;\n        this.sellPrice = this.LastData[3];\n        this.buyPrice = this.LastData[3];\n        this.limitPrice = '市价';\n      }\n    },\n    isTradeLogin: function isTradeLogin() {\n      if (this.isTradeLogin) {\n        if (this.loginErrorLayer != null) {\n          this.loginErrorLayer.close();\n        }\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n  },\n  methods: (_methods = {\n    //切换实体盘模拟盘\n    switchCapitalType: function switchCapitalType(index) {\n      if (index == 0) {\n        this.capitalType1 = !this.capitalType1;\n\n        if (!this.capitalType2 && !this.capitalType1) {\n          this.capitalType2 = true;\n        }\n      } else if (index == 1) {\n        this.capitalType2 = !this.capitalType2;\n\n        if (!this.capitalType2 && !this.capitalType1) {\n          this.capitalType1 = true;\n        }\n      }\n    },\n    //查询活动\n    checkActivity: function checkActivity() {\n      var activityType = '020';\n\n      if (this.tradeType == 0) {\n        //模拟\n        activityType = '020';\n      } else if (this.tradeType == 1) {\n        //实盘\n        activityType = '022,023';\n      }\n\n      request.post('/qryActivites', {\n        activityType: activityType\n      }, {\n        token: userInfo.token,\n        secret: userInfo.secret\n      }).then(function (res) {\n        if (res.success && res.code == '010') {\n          for (var i = 0; i < res.data.length; i++) {\n            if (res.data[i].complatedStatus == '020' && res.data[i].received == '010') {\n              tradeStore.state.activityStatus = res.data[i].complatedStatus;\n              tradeStore.state.received = res.data[i].received;\n              var a = res.data[i].id;\n              tradeStore.state.activityId = res.data[i].id;\n              request.post('/activitiesCoupon', {\n                activityId: a\n              }, {\n                token: userInfo.token,\n                secret: userInfo.secret\n              }).then(function (res2) {\n                if (res2.success && res2.code == '010') {\n                  tradeStore.state.couponId = res2.data.couponId;\n                  tradeStore.state.faceValue = res2.data.amount;\n                  tradeStore.state.couponName = res2.data.typeName;\n                  tradeStore.state.activitiesName = res2.data.activitiesName;\n                } else {\n                  layer.msg(res2.message, {\n                    time: 1500\n                  });\n                }\n              })[\"catch\"](function (err) {});\n              break;\n            }\n          }\n        } else {\n          layer.msg(res.message, {\n            time: 1500\n          });\n        }\n      })[\"catch\"](function (err) {});\n    },\n    //打开领取红包页面\n    openRedLayer: function openRedLayer(index) {\n      var _this5 = this;\n\n      if (index == 0) {//模拟\n      } else if (index == 1) {//实盘\n      }\n\n      if (tradeStore.state.received == '010' && tradeStore.state.activityStatus == '020') {\n        request.post('/receiveCoupon', {\n          activityId: tradeStore.state.activityId,\n          couponId: tradeStore.state.couponId\n        }, {\n          token: userInfo.token,\n          secret: userInfo.secret\n        }).then(function (res) {\n          if (res.success && res.code == '010') {\n            tradeStore.state.received = '020';\n            layer.msg('领取成功', {\n              time: 1500\n            });\n            layer.open({\n              type: 1,\n              content: $('#redLayer'),\n              area: ['7.3rem', '6rem'],\n              shadeClose: true,\n              title: null,\n              closeBtn: 0\n            });\n\n            _this5.checkActivity();\n          } else {\n            layer.msg(res.message, {\n              time: 1500\n            });\n          }\n        })[\"catch\"](function (err) {\n          console.log(err);\n        });\n      }\n    },\n    //打开键盘\n    showKeyboard: function showKeyboard(type) {\n      this.isShowKeyboard = true;\n      this.keyboardType = type;\n    },\n    //关闭键盘\n    closeKeyboard: function closeKeyboard() {\n      this.isShowKeyboard = false;\n\n      if (this.handNum == '' || this.handNum == 0) {\n        this.handNum = 1;\n      }\n\n      setTimeout(function () {\n        if (!this.isShowKeyboard) {\n          this.keyboardType = -1;\n        }\n      }.bind(this), 500);\n    },\n    //输入数字\n    chooseKeyboardNum: function chooseKeyboardNum(num) {\n      if (num == '市价' || num == '对手价' || num == '排队价') {\n        this.limitPrice = num;\n        this.keyboardPriceType = num == '市价' ? 3 : num == '对手价' ? 2 : num == '排队价' ? 1 : 4;\n\n        if (num == '市价') {\n          this.sellPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n          this.buyPrice = Number(this.LastData[3]).toFixed(this.chooseContract.dotSize);\n        } else if (num == '对手价') {\n          this.sellPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n          this.buyPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n        } else if (num == '排队价') {\n          this.sellPrice = Number(this.LastData[11]).toFixed(this.chooseContract.dotSize);\n          this.buyPrice = Number(this.LastData[13]).toFixed(this.chooseContract.dotSize);\n        }\n      }\n\n      if (num == '限价') {\n        this.keyboardPriceType = 4;\n        this.limitPrice = this.LastData[3];\n      } else if (typeof num == 'number') {\n        if (this.keyboardType == 1) {\n          if (this.isFirstHand) {\n            this.handNum = num;\n            this.isFirstHand = false;\n          } else {\n            if (this.handNum == 0) {\n              this.handNum = '';\n            }\n\n            this.handNum = this.handNum.toString() + num.toString();\n\n            if (Number(this.handNum) > 99) {\n              this.handNum = 99;\n            }\n          }\n        } else if (this.keyboardType == 2) {\n          this.keyboardPriceType = 4;\n\n          if (this.limitPrice == '市价' || this.limitPrice == '限价' || this.limitPrice == '对手价' || this.limitPrice == '排队价') {\n            this.limitPrice = num.toString();\n          } else {\n            if (this.limitPrice == 0) {\n              this.limitPrice = '';\n            }\n\n            this.limitPrice = this.limitPrice.toString() + num.toString();\n          }\n        }\n      } else if (num == '.') {\n        if (this.limitPrice == '市价' || this.limitPrice == '限价' || this.limitPrice == '对手价' || this.limitPrice == '排队价') {\n          return;\n        }\n\n        if (this.limitPrice.indexOf('.') == -1 && (this.limitPrice != '0' || this.limitPrice != '')) {\n          this.limitPrice = this.limitPrice.toString() + num.toString();\n        }\n      } else if (num == 'back') {\n        if (this.keyboardType == 1) {\n          this.handNum = this.handNum.toString();\n          this.handNum = this.handNum.substr(0, this.handNum.length - 1);\n\n          if (this.handNum == '') {\n            this.handNum = 0;\n          }\n        } else if (this.keyboardType == 2) {\n          if (this.limitPrice == '' || this.limitPrice == 0 || this.limitPrice == '市价' || this.limitPrice == '限价' || this.limitPrice == '对手价' || this.limitPrice == '排队价') {\n            return;\n          }\n\n          ;\n          this.limitPrice = this.limitPrice.toString();\n          this.limitPrice = this.limitPrice.substr(0, this.limitPrice.length - 1);\n\n          if (this.limitPrice == '') {\n            this.limitPrice = '0';\n          }\n        }\n      } else if (num == '加') {\n        if (this.keyboardType == 1) {\n          this.handNum = Number(this.handNum) + 1;\n\n          if (this.handNum > 99) {\n            this.handNum = 99;\n          }\n        } else if (this.keyboardType == 2) {\n          if (this.keyboardPriceType == 4) {\n            this.limitPrice = (Number(this.limitPrice) + Number(this.chooseContract.mini_ticker_size)).toFixed(this.chooseContract.dotSize);\n          }\n        }\n      } else if (num == '减') {\n        if (this.keyboardType == 1) {\n          this.handNum = Number(this.handNum) - 1;\n\n          if (this.handNum <= 0) {\n            this.handNum = 1;\n          }\n        } else if (this.keyboardType == 2) {\n          if (this.keyboardPriceType == 4) {\n            this.limitPrice = (Number(this.limitPrice) - this.chooseContract.mini_ticker_size).toFixed(this.chooseContract.dotSize);\n\n            if (this.limitPrice <= 0) {\n              this.limitPrice = 0;\n            }\n          }\n        }\n      }\n    },\n    //关闭弹窗\n    closeLayer: function closeLayer() {\n      layer.closeAll();\n    },\n    //切换导航时候将选择的合约去掉\n    switchTab: function switchTab() {\n      this.contractIndex = -1;\n    },\n    //切换止盈止损\n    switchLayerTab: function switchLayerTab(index) {\n      if (this.layerTabIndex == index) {\n        return;\n      }\n\n      this.layerTabIndex = index;\n    },\n    showChooseType: function showChooseType() {\n      this.isShowPriceType = !this.isShowPriceType;\n    },\n    //加减手数\n    chooseNum: function chooseNum(index) {\n      if (index == 1) {\n        //加\n        this.handNum++;\n      } else if (index == 2) {\n        //减\n        if (this.handNum - 1 == 0) {\n          this.handNum = 1;\n          return;\n        }\n\n        this.handNum--;\n      }\n    },\n    //选择合约\n    selectContract: function selectContract(item, index) {\n      if (this.contractIndex == index) {\n        this.contractIndex = -1;\n        this.selectContractItem = {};\n        return;\n      }\n\n      if (item == 'all') {\n        this.selectContractItem = {};\n        this.contractIndex = index;\n      } else {\n        if (arguments[2] == 1) {\n          //切换合约\n          emitter.$emit('selectContractBtn', item);\n        }\n\n        this.selectContractItem = item;\n        this.contractIndex = index;\n\n        for (var i = 0; i < this.allSubsCommodity.length; i++) {\n          if (item.CommodityNo == this.allSubsCommodity[i].commodity_no) {\n            this.selectContractLastData = this.allSubsCommodity[i].quatoData;\n            break;\n          }\n        }\n      }\n    },\n    //买卖按钮\n    tradeBtn: function tradeBtn(index) {\n      this.closeKeyboard();\n\n      if (!this.isNetworkConnect) {\n        //未联网\n        layer.msg('未连接到网络，请检查网络设置', {\n          time: 2000\n        });\n        return;\n      }\n\n      if (!tradeStore.state.isTradeLogin || !this.isLogin) {\n        layer.open({\n          type: 1,\n          content: $('#tradeLoginLayer3'),\n          area: ['7.3rem', '6rem'],\n          shadeClose: true,\n          title: null,\n          closeBtn: 0\n        });\n        return;\n      }\n\n      var needMoney = (Number(this.chooseContract.deposit) * Number(this.handNum) + Number(this.chooseContract.fee) * Number(this.handNum)) * this.rateList[this.chooseContract.currencyNo];\n      var haveMoney = this.todayCanUseBalance + this.totalFloatProfit;\n      this.needMoney = (Number(this.chooseContract.deposit) * Number(this.handNum) + Number(this.chooseContract.fee) * Number(this.handNum)) * this.rateList[this.chooseContract.currencyNo] / this.rateList.CNY;\n      this.needMoney = Number(this.needMoney.toFixed(2)); // if(needMoney>haveMoney){\n      // \t//余额不足\n      // \tif(this.tradeType == 0){\n      // \t\t//模拟盘\n      // \t\tlayer.msg('余额不足，请领取模拟金',{\n      // \t\t\ttime:1500\n      // \t\t});\n      // \t}else{\n      // \t\t//实体盘\n      // \t\tlayer.open({\n      // \t\t\ttype:1,\n      // \t\t\tcontent:$('#balanceInfoLayer'),\n      // \t\t\tarea:['7.3rem','6rem'],\n      // \t\t\tshadeClose:true,\n      // \t\t\ttitle:null,\n      // \t\t\tcloseBtn:0,\n      // \t\t})\n      // \t}\n      // \treturn;\n      // }\n\n      if (index == 1) {\n        //买入\n        this.direction = 0;\n      } else if (index == 2) {\n        //卖出\n        this.direction = 1;\n      }\n\n      this.confirmInfoType = 0;\n      layer.open({\n        type: 1,\n        content: $('#confirmOrderLayer'),\n        area: ['7.3rem', '6rem'],\n        shadeClose: true,\n        title: null,\n        closeBtn: 0\n      });\n    },\n    //打开资金介绍弹窗\n    openCapitalInfo: function openCapitalInfo(index) {\n      if (index == 1) {\n        //总资产\n        this.capitalInfoTitle = '总资产';\n        this.capitalInfoContent = '当前账户的全部资产，包括已买入持仓的保证金、盈亏和未出金的剩余资金。';\n      } else if (index == 2) {\n        //可用资金\n        this.capitalInfoTitle = '可用资金';\n        this.capitalInfoContent = '可用于新买入持仓或进行提现的资金。';\n      } else if (index == 3) {\n        //风险度\n        this.capitalInfoTitle = '风险度';\n        this.capitalInfoContent = '根据您的总资产和平仓线计算出的账户风险情况，当达到100%时，持仓将被系统强平。';\n      } else if (index == 4) {\n        //平仓线\n        this.capitalInfoTitle = '平仓线';\n        this.capitalInfoContent = '被系统强制平仓的资产底线，当总资产小于该数值时，您的持仓将被系统强平。';\n      } else if (index == 5) {\n        //持仓保证金\n        this.capitalInfoTitle = '持仓保证金';\n        this.capitalInfoContent = '被持仓占用的资金，持仓越多占用的保证金数值越大，平仓后该资金将会进行释放。';\n      }\n\n      this.capitalInfoLayer = layer.open({\n        type: 1,\n        content: $('#capitalInfoLayer2'),\n        area: ['7.3rem', '6rem'],\n        shadeClose: true,\n        title: null,\n        closeBtn: 0\n      });\n    },\n    //关闭资金信息介绍弹窗\n    closeCapitalInfo: function closeCapitalInfo() {\n      layer.close(this.capitalInfoLayer);\n    },\n    //持仓列表的操作按钮\n    positionBtn: function positionBtn(index) {\n      if (this.positionList.length == 0) {\n        layer.msg('暂无持仓', {\n          time: 1000,\n          area: 'inherit'\n        });\n        return;\n      }\n\n      if (index == 1) {\n        //全部平仓\n        this.confirmInfoType = 1;\n        layer.open({\n          type: 1,\n          content: $('#confirmAllayer'),\n          area: ['7.3rem', '6rem'],\n          shadeClose: true,\n          title: null,\n          closeBtn: 0\n        });\n      } else if (index == 2) {\n        if (this.contractIndex < 0) {\n          layer.msg('请先选择一条合约', {\n            time: 1000,\n            area: 'inherit'\n          });\n          return;\n        } //平仓\n\n\n        this.confirmInfoType = 2;\n        layer.open({\n          type: 1,\n          content: $('#confirmInfoLayer'),\n          area: ['7.3rem', '6rem'],\n          shadeClose: true,\n          title: null,\n          closeBtn: 0\n        });\n      } else if (index == 3) {\n        //止盈止损\n        if (this.contractIndex < 0) {\n          layer.msg('请先选择一条合约', {\n            time: 1000,\n            area: 'inherit'\n          });\n          return;\n        }\n\n        this.confirmInfoType = 5;\n        layer.open({\n          type: 1,\n          content: $('#stopProfitLossLayer'),\n          area: ['8.27rem', '5.8666rem'],\n          shadeClose: true,\n          title: null,\n          closeBtn: 0\n        });\n        var internationalCommodity = this.internationalCommodity;\n\n        for (var i = 0, length = internationalCommodity.length; i < length; i++) {\n          if (internationalCommodity[i].commodity_no == this.selectContractItem.CommodityNo) {\n            this.selectContractLastData = internationalCommodity[i].quatoData;\n          }\n        }\n\n        this.stopLossType = 0;\n        this.stopLossPrice = this.selectContractLastData[3];\n        this.stopProfitPrice = this.selectContractLastData[3];\n        this.stopHandNum = this.selectContractItem.HoldNum;\n\n        if (this.selectContractItem.Direction == 0) {\n          //多\n          this.stopLossRate = (this.stopLossPrice - this.selectContractItem.OpenAvgPrice) / this.selectContractItem.OpenAvgPrice * 100;\n          this.stopProfitRate = (this.stopProfitPrice - this.selectContractItem.OpenAvgPrice) / this.selectContractItem.OpenAvgPrice * 100;\n        } else if (this.selectContractItem.Direction == 1) {\n          //空\n          this.stopLossRate = (this.selectContractItem.OpenAvgPrice - this.stopLossPrice) / this.selectContractItem.OpenAvgPrice * 100;\n          this.stopProfitRate = (this.selectContractItem.OpenAvgPrice - this.stopProfitPrice) / this.selectContractItem.OpenAvgPrice * 100;\n        }\n      } else if (index == 4) {\n        //反手\n        if (this.contractIndex < 0) {\n          layer.msg('请先选择一条合约', {\n            time: 1000,\n            area: 'inherit'\n          });\n          return;\n        }\n\n        this.confirmInfoType = 7;\n        layer.open({\n          type: 1,\n          content: $('#confirmInfoLayer'),\n          area: ['7.3rem', '6rem'],\n          shadeClose: true,\n          title: null,\n          closeBtn: 0\n        });\n      }\n    },\n    //撤单改单操作按钮\n    changeOrderBtn: function changeOrderBtn(index) {\n      if (this.templeList.length == 0) {\n        layer.msg('暂无挂单', {\n          time: 1000,\n          area: 'inherit'\n        });\n        return;\n      }\n\n      if (index == 1) {\n        //全撤\n        this.confirmInfoType = 3;\n        layer.open({\n          type: 1,\n          content: $('#confirmAllayer'),\n          area: ['7.3rem', '6rem'],\n          shadeClose: true,\n          title: null,\n          closeBtn: 0\n        });\n      } else if (index == 2) {\n        //撤单\n        if (this.contractIndex < 0) {\n          layer.msg('请先选择一条合约', {\n            time: 1000,\n            area: 'inherit'\n          });\n          return;\n        }\n\n        this.confirmInfoType = 4;\n        layer.open({\n          type: 1,\n          content: $('#confirmInfoLayer'),\n          area: ['7.3rem', '6rem'],\n          shadeClose: true,\n          title: null,\n          closeBtn: 0\n        });\n      } else if (index == 3) {\n        //改单\n        if (this.contractIndex < 0) {\n          layer.msg('请先选择一条合约', {\n            time: 1000,\n            area: 'inherit'\n          });\n          return;\n        }\n\n        this.changeOrderPrice = this.selectContractItem.OrderPrice;\n        this.changeOrderNum = this.selectContractItem.OrderNum;\n        this.confirmInfoType = 6;\n        layer.open({\n          type: 1,\n          content: $('#changeOrderLayer'),\n          area: ['7.3rem', '6rem'],\n          shadeClose: true,\n          title: null,\n          closeBtn: 0\n        });\n      }\n    },\n    //确认信息弹窗按钮\n    layerInfoBtn: function layerInfoBtn(index) {\n      if (index == 1) {\n        //取消\n        this.layerTabIndex = 0;\n        layer.closeAll();\n      } else if (index == 2) {\n        if (this.isSendData) {\n          return;\n        }\n\n        if (this.confirmInfoType == 0) {\n          //提交订单\n          console.log('提交订单');\n          var method = 'InsertOrder'; //调用方法\n\n          var params = {\n            CommodityType: Number(this.chooseContract.typeCode),\n            //1国际期货\n            ExchangeNo: this.chooseContract.exchange_no,\n            // 交易所代码\n            CommodityNo: this.chooseContract.commodity_no,\n            //品种代码\n            ContractNo: this.chooseContract.main_contract_no,\n            //合约代码\n            OrderNum: Number(this.handNum),\n            //订单数量\n            Direction: this.direction,\n            //买卖方向 0:买 1:卖\n            PriceType: this.keyboardPriceType == 3 ? 1 : 0,\n            //价格类型 0:限价 1:市价\n            LimitPrice: this.keyboardPriceType == 3 ? 0 : this.keyboardPriceType == 4 ? Number(this.limitPrice) : this.direction == 0 ? Number(this.buyPrice) : Number(this.sellPrice),\n            //限价价格\n            OrderRef: '',\n            //自定义数据\n            OpenCloseType: 1 //开平类型 1-开仓 2-平仓 3-平今\n\n          }; //传入参数\n\n          this.isSendData = true;\n          tradeStore.dispatch('sendWS', {\n            method: method,\n            params: params\n          });\n        } else if (this.confirmInfoType == 1) {\n          //全部平仓\n          console.log('全部平仓');\n          this.contractIndex = -1;\n          var positionList = this.positionList;\n          var method = 'InsertOrder'; //调用方法\n\n          for (var i = 0, length = positionList.length; i < length; i++) {\n            var params = {\n              CommodityType: Number(positionList[i].CommodityType),\n              //1国际期货\n              ExchangeNo: positionList[i].ExchangeNo,\n              // 交易所代码\n              CommodityNo: positionList[i].CommodityNo,\n              //品种代码\n              ContractNo: positionList[i].ContractNo,\n              //合约代码\n              OrderNum: Number(positionList[i].HoldNum),\n              //订单数量\n              Direction: positionList[i].Direction == 0 ? 1 : 0,\n              //买卖方向 0:买 1:卖\n              PriceType: 1,\n              //价格类型 0:限价 1:市价\n              LimitPrice: 0,\n              //限价价格\n              OrderRef: '',\n              //自定义数据\n              OpenCloseType: 3\n            }; //传入参数\n\n            this.isSendData = true;\n            tradeStore.dispatch('sendWS', {\n              method: method,\n              params: params\n            });\n          }\n        } else if (this.confirmInfoType == 2) {\n          //平仓\n          console.log('平仓');\n          var method = 'InsertOrder'; //调用方法\n\n          var params = {\n            CommodityType: Number(this.selectContractItem.CommodityType),\n            //1国际期货\n            ExchangeNo: this.selectContractItem.ExchangeNo,\n            // 交易所代码\n            CommodityNo: this.selectContractItem.CommodityNo,\n            //品种代码\n            ContractNo: this.selectContractItem.ContractNo,\n            //合约代码\n            OrderNum: Number(this.selectContractItem.HoldNum),\n            //订单数量\n            Direction: this.selectContractItem.Direction == 0 ? 1 : 0,\n            //买卖方向 0:买 1:卖\n            PriceType: 1,\n            //价格类型 0:限价 1:市价\n            LimitPrice: 0,\n            //限价价格\n            OrderRef: '',\n            //自定义数据\n            OpenCloseType: 2 //开平类型 1-开仓 2-平仓 3-平今\n\n          }; //传入参数\n\n          this.isSendData = true;\n          tradeStore.dispatch('sendWS', {\n            method: method,\n            params: params\n          });\n          this.contractIndex = -1;\n        } else if (this.confirmInfoType == 3) {\n          //全撤\n          console.log('全撤');\n          this.contractIndex = -1;\n          var templeList = this.templeList;\n          var method = 'CancelOrder'; //调用方法\n\n          for (var i = 0, length = templeList.length; i < length; i++) {\n            var params = {\n              OrderSysID: templeList[i].OrderSysID,\n              //1系统编号\n              OrderID: templeList[i].OrderID //1订单号\n\n            }; //传入参数\n\n            var req_id = '撤单';\n            this.isSendData = true;\n            tradeStore.dispatch('sendWS', {\n              method: method,\n              params: params,\n              req_id: req_id\n            });\n          }\n        } else if (this.confirmInfoType == 4) {\n          //撤单\n          console.log('撤单');\n          var method = 'CancelOrder'; //调用方法\n\n          var params = {\n            OrderSysID: this.selectContractItem.OrderSysID,\n            //1系统编号\n            OrderID: this.selectContractItem.OrderID //1订单号\n\n          }; //传入参数\n\n          var req_id = '撤单';\n          this.isSendData = true;\n          tradeStore.dispatch('sendWS', {\n            method: method,\n            params: params,\n            req_id: req_id\n          });\n          this.contractIndex = -1;\n        } else if (this.confirmInfoType == 5) {\n          //止损止盈\n          if (this.stopLossPrice == '' || this.stopHandNum == '') {\n            layer.msg('请输入值', {\n              time: 1000\n            });\n            return;\n          }\n\n          if (this.stopHandNum > this.selectContractItem.HoldNum) {\n            this.stopHandNum = this.selectContractItem.HoldNum;\n            layer.msg('手数不能超过持仓手数', {\n              time: 1000\n            });\n            return;\n          }\n\n          if (this.stopHandNum <= 0) {\n            this.stopHandNum = this.selectContractItem.HoldNum;\n            layer.msg('手数不能小于0', {\n              time: 1000\n            });\n            return;\n          }\n\n          this.confrimStopOrder();\n        } else if (this.confirmInfoType == 6) {\n          //改单\n          var method = 'ModifyOrder'; //调用方法\n\n          var params = {\n            OrderSysID: this.selectContractItem.OrderSysID,\n            //1系统编号\n            OrderID: this.selectContractItem.OrderID,\n            //1订单号\n            OrderNum: Number(this.changeOrderNum),\n            //1订单号\n            OrderPrice: Number(this.changeOrderPrice) //1订单号\n\n          }; //传入参数\n\n          var req_id = '改单';\n          this.isSendData = true;\n          tradeStore.dispatch('sendWS', {\n            method: method,\n            params: params,\n            req_id: req_id\n          });\n          this.contractIndex = -1;\n        } else if (this.confirmInfoType == 7) {\n          //反手\n          console.log('反手'); // \t\t\t\t\tvar method = 'InsertOrder'; //调用方法\n          // \t\t\t\t\tvar params = {\n          // \t\t\t\t\t\tCommodityType:1, //1国际期货\n          // \t\t\t\t\t\tExchangeNo:this.selectContractItem.ExchangeNo,// 交易所代码\n          // \t\t\t\t\t\tCommodityNo:this.selectContractItem.CommodityNo,//品种代码\n          // \t\t\t\t\t\tContractNo:this.selectContractItem.ContractNo,//合约代码\n          // \t\t\t\t\t\tOrderNum:Number(this.selectContractItem.HoldNum),//订单数量\n          // \t\t\t\t\t\tDirection:this.selectContractItem.Direction==0?1:0,//买卖方向 0:买 1:卖\n          // \t\t\t\t\t\tPriceType:1,//价格类型 0:限价 1:市价\n          // \t\t\t\t\t\tLimitPrice:0,//限价价格\n          // \t\t\t\t\t\tOrderRef:'',//自定义数据\n          // \t\t\t\t\t\t// OpenCloseType:2,//开平类型 1-开仓 2-平仓 3-平今\n          // \t\t\t\t\t}; //传入参数\n          // \t\t\t\t\ttradeStore.dispatch('sendWS',{method,params});\n\n          var method = 'InsertOrder'; //调用方法\n\n          var params = {\n            CommodityType: Number(this.selectContractItem.CommodityType),\n            //1国际期货\n            ExchangeNo: this.selectContractItem.ExchangeNo,\n            // 交易所代码\n            CommodityNo: this.selectContractItem.CommodityNo,\n            //品种代码\n            ContractNo: this.selectContractItem.ContractNo,\n            //合约代码\n            OrderNum: Number(this.selectContractItem.HoldNum) * 2,\n            //订单数量\n            Direction: this.selectContractItem.Direction == 0 ? 1 : 0,\n            //买卖方向 0:买 1:卖\n            PriceType: 1,\n            //价格类型 0:限价 1:市价\n            LimitPrice: 0,\n            //限价价格\n            OrderRef: '' //自定义数据\n\n          }; //传入参数\n\n          this.isSendData = true;\n          tradeStore.dispatch('sendWS', {\n            method: method,\n            params: params\n          });\n          this.contractIndex = -1;\n        }\n\n        this.layerTabIndex = 0;\n        layer.closeAll();\n        setTimeout(function () {\n          this.isSendData = false;\n        }.bind(this), 500);\n      }\n    },\n    //设置止损类型\n    setStopLossType: function setStopLossType() {\n      if (this.stopLossType == 0) {\n        //止损价\n        this.stopLossPrice = this.selectContractLastData[3];\n      } else if (this.stopLossType == 1) {\n        //动态价\n        this.stopLossPrice = this.selectContractItem.mini_ticker_size;\n        this.stopLossRate = -this.stopLossPrice / this.selectContractItem.OpenAvgPrice * 100;\n      }\n    },\n    //设置止损价格\n    setStopLossPrice: function setStopLossPrice() {\n      if (this.stopLossType == 0) {\n        if (this.selectContractItem.Direction == 0) {\n          //多\n          this.stopLossRate = (this.stopLossPrice - this.selectContractItem.OpenAvgPrice) / this.selectContractItem.OpenAvgPrice * 100;\n        } else if (this.selectContractItem.Direction == 1) {\n          //空\n          this.stopLossRate = (this.selectContractItem.OpenAvgPrice - this.stopLossPrice) / this.selectContractItem.OpenAvgPrice * 100;\n        }\n      } else if (this.stopLossType == 1) {\n        this.stopLossRate = -this.stopLossPrice / this.selectContractItem.OpenAvgPrice * 100;\n      }\n    },\n    //设置止盈价格\n    setStopProfitPrice: function setStopProfitPrice() {\n      if (this.selectContractItem.Direction == 0) {\n        //多\n        this.stopProfitRate = (this.stopProfitPrice - this.selectContractItem.OpenAvgPrice) / this.selectContractItem.OpenAvgPrice * 100;\n      } else if (this.selectContractItem.Direction == 1) {\n        //空\n        this.stopProfitRate = (this.selectContractItem.OpenAvgPrice - this.stopProfitPrice) / this.selectContractItem.OpenAvgPrice * 100;\n      }\n    },\n    //设置止损手数\n    setStopHandNum: function setStopHandNum() {\n      if (this.stopHandNum > this.selectContractItem.HoldNum) {\n        layer.msg('不能超过最大手数', {\n          time: 1000,\n          area: 'inherit'\n        });\n        this.stopHandNum = this.selectContractItem.HoldNum;\n      }\n    },\n    //止盈止损确认按钮\n    confrimStopOrder: function confrimStopOrder() {\n      var method = 'InsertStopLoss'; //调用方法\n\n      var params = {\n        CommodityType: Number(this.selectContractItem.CommodityType),\n        //1国际期货\n        ExchangeNo: this.selectContractItem.ExchangeNo,\n        // 交易所代码\n        CommodityNo: this.selectContractItem.CommodityNo,\n        //品种代码\n        ContractNo: this.selectContractItem.ContractNo,\n        //合约代码\n        Num: Number(this.stopHandNum),\n        //订单数量\n        StopLossType: this.layerTabIndex == 0 ? this.stopLossType == 0 ? 0 : 2 : 1,\n        //止损类型0-限价触发止损1-限价触发止盈2-浮动止损\n        StopLossPrice: this.layerTabIndex == 0 ? Number(this.stopLossPrice) : Number(this.stopProfitPrice),\n        //止损(赢)价 \n        StopLossDiff: this.stopLossType == 0 ? 0 : Number(this.stopLossPrice),\n        //动态止损的点差\n        HoldAvgPrice: this.selectContractItem.HoldAvgPrice,\n        //持仓均价\n        HoldDirection: this.selectContractItem.Direction,\n        //持仓方向\n        OrderType: 1\n      };\n\n      if (this.layerTabIndex == 0) {\n        //止损确认\n        params.StopLossType = this.stopLossType == 0 ? 0 : 2;\n      } else if (this.layerTabIndex == 1) {\n        //止盈确认\n        params.StopLossType = 1;\n      }\n\n      this.isSendData = true;\n      tradeStore.dispatch('sendWS', {\n        method: method,\n        params: params\n      });\n    }\n  }, _defineProperty(_methods, \"closeLayer\", function closeLayer() {\n    layer.closeAll();\n  }), _defineProperty(_methods, \"goToPage\", function goToPage(path) {\n    var isLayer = false;\n\n    if (arguments[1] == 1) {\n      isLayer = true;\n    }\n\n    var params = {\n      tradeTabIndex: tradePageStore.state.tradeTabIndex\n    };\n\n    if (isLayer) {\n      params.money = this.needMoney;\n    }\n\n    pushRoute({\n      page: path,\n      params: params\n    });\n  }), _defineProperty(_methods, \"openCapitalLayer\", function openCapitalLayer() {\n    layer.open({\n      type: 1,\n      content: $('#capitalInfoLayer'),\n      area: ['7.3rem', '8rem'],\n      shadeClose: true,\n      title: null,\n      closeBtn: 0\n    });\n  }), _defineProperty(_methods, \"switchTradeType\", function switchTradeType(index) {\n    layer.closeAll();\n    tradePageStore.state.tradeType = index;\n    localStorage.setItem('tradeType', index);\n    pushRoute({\n      page: ''\n    });\n    tradeStore.state.tradeType = index;\n\n    if (tradeStore.state.isTradeLogin) {\n      tradeStore.dispatch('connectTrade');\n    } else {\n      //未登录\n      if (isLogin) {\n        tradeStore.dispatch('connectTrade');\n      } else {}\n    }\n\n    if (arguments[1] == 'bottom') {} else {\n      mui('.mui-off-canvas-wrap').offCanvas().close();\n    }\n  }), _methods)\n}); //头部弹出框\n\nvar topPopover = new Vue({\n  el: '#offCanvasSide',\n  data: {\n    isLogin: isLogin,\n    //是否登录\n    simPrice: 0,\n    //；领取金额\n    waitTime: 1000,\n    isSendData: false\n  },\n  computed: {\n    tradeType: function tradeType() {\n      return tradePageStore.state.tradeType;\n    }\n  },\n  mounted: function mounted() {\n    layui.use('layer', function () {\n      var layer = layui.layer;\n    });\n    this.getMoneyData();\n  },\n  methods: {\n    goToPage: function goToPage(path) {\n      if (isLogin) {\n        if (!mui.os.plus) {\n          pushRoute({\n            page: path,\n            params: {\n              tradeTabIndex: tradePageStore.state.tradeTabIndex\n            }\n          });\n          return;\n        } else {\n          mui.openWindow({\n            url: '../' + path + '/' + path + '.html?sourcePage=home&sourcePage2=trade&pageIndex=' + tradePageStore.state.tabIndex + '&klineName=' + tradePageStore.state.klineName + '&chartType=' + tradePageStore.state.chartType,\n            id: path + '.html'\n          });\n        }\n      } else {\n        if (arguments[1] == 1) {\n          pushRoute({\n            page: path,\n            params: {\n              tradeTabIndex: tradePageStore.state.tradeTabIndex\n            }\n          });\n          return;\n        } else {\n          mui('.mui-off-canvas-wrap').offCanvas('close');\n          emitter.$emit('openLayer');\n        }\n      }\n    },\n    //切换实盘模拟盘\n    switchTradeType: function switchTradeType(index) {\n      tradePageStore.state.tradeType = index;\n      localStorage.setItem('tradeType', index);\n      tradeStore.state.tradeType = index;\n\n      if (tradeStore.state.isTradeLogin) {\n        tradeStore.dispatch('connectTrade');\n      } else {\n        //未登录\n        if (isLogin) {\n          tradeStore.dispatch('connectTrade');\n        } else {}\n      }\n\n      mui('.mui-off-canvas-wrap').offCanvas('close');\n    },\n    //领取模拟金\n    getMoney: function getMoney() {\n      var _this6 = this;\n\n      if (this.isSendData) {\n        return;\n      }\n\n      this.isSendData = true;\n      request.post('/receiveSimulatedMoney', {\n        amount: this.simPrice\n      }, {\n        token: userInfo.token,\n        secret: userInfo.secret\n      }).then(function (res) {\n        if (res.success && res.code == '010') {\n          layer.msg('领取成功', {\n            time: 1500\n          });\n          mui('.mui-off-canvas-wrap').offCanvas('close');\n          setTimeout(function () {\n            this.isSendData = false;\n          }.bind(_this6), _this6.waitTime);\n        } else {\n          layer.msg(res.message, {\n            time: 1500\n          });\n          mui('.mui-off-canvas-wrap').offCanvas('close');\n          setTimeout(function () {\n            this.isSendData = false;\n          }.bind(_this6), _this6.waitTime);\n        }\n      })[\"catch\"](function (err) {\n        mui('.mui-off-canvas-wrap').offCanvas('close');\n        setTimeout(function () {\n          this.isSendData = false;\n        }.bind(_this6), _this6.waitTime);\n      });\n    },\n    //获取模拟金金额\n    getMoneyData: function getMoneyData() {\n      var _this7 = this;\n\n      request.post('/qryParameters', {\n        paramStr: 'vs.sim.amount'\n      }).then(function (res) {\n        if (res.success && res.code == '010') {\n          _this7.simPrice = res.data['vs.sim.amount'];\n        } else {\n          layer.msg(res.message, {\n            time: 1500\n          });\n        }\n      })[\"catch\"](function (err) {});\n    }\n  }\n}); //合约选择列表\n\nvar contractSelect = new Vue({\n  el: '#contractSelect',\n  data: {\n    chartUrl: '../../../common/f2Chart/f2Chart.html',\n    contractData: [{\n      Title: '',\n      List: [{\n        contractName: ''\n      }]\n    }]\n  },\n  computed: {\n    internationalCommodity: function internationalCommodity() {\n      return marketStore.state.internationalCommodity;\n    },\n    allSubsCommodity: function allSubsCommodity() {\n      return marketStore.state.allSubsCommodity;\n    },\n    domesticCommodity: function domesticCommodity() {\n      return marketStore.state.domesticCommodity;\n    },\n    contractList: function contractList() {\n      return marketStore.state.contractList;\n    },\n    period: function period() {\n      return tradePageStore.state.period;\n    },\n    priceType: function priceType() {\n      return tradePageStore.state.priceType;\n    },\n    chooseContract: function chooseContract() {\n      return tradeStore.state.chooseContract;\n    },\n    chooseQuatoType: function chooseQuatoType() {\n      return marketStore.state.chooseQuatoType;\n    }\n  },\n  watch: {\n    allSubsCommodity: function allSubsCommodity() {\n      if (this.allSubsCommodity.length == 0) {\n        return;\n      }\n\n      var contractData = this.allSubsCommodity.slice(0);\n      contractData = contractData.sort(compare('firstLetter'), false);\n\n      function compare(prop) {\n        return function (a, b) {\n          var value1 = a[prop];\n          var value2 = b[prop];\n          return value1.charCodeAt() - value2.charCodeAt();\n        };\n      }\n\n      this.contractData = formatList(contractData, 'firstLetter');\n\n      function formatList(arr, keyword) {\n        var newArr1 = [];\n        var tempArr = [];\n        var reg = /\\b(\\w)|\\s(\\w)/g;\n        var k = 0;\n        var firstWord = arr[0][keyword].charAt(0).toUpperCase(); //获取第一个分类字母\n\n        arr.map(function (v) {\n          v[keyword] = v[keyword].replace(reg, function (m) {\n            return m.toUpperCase();\n          }); //首字母大写\n\n          if (firstWord == v[keyword].charAt(0)) {\n            tempArr.push(v);\n            newArr1[k] = {\n              Title: firstWord,\n              List: tempArr\n            };\n          } else {\n            //这里循环到这表示已经第二个字母了\n            firstWord = v[keyword].charAt(0); //设置第二字母\n\n            tempArr = []; //把之前的清除掉\n\n            tempArr.push(v); //添加第一个\n\n            newArr1[++k] = {\n              //自增\n              Title: firstWord,\n              List: tempArr\n            };\n          }\n        });\n        return newArr1;\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this8 = this;\n\n    mui('#contractScroll').scroll({\n      scrollY: true,\n      scrollX: true,\n      indicators: false,\n      bounce: false\n    });\n    emitter.$on('selectContractBtn', function (item) {\n      if (item.CommodityNo == _this8.chooseContract.commodity_no) {\n        return;\n      }\n\n      var chooseItem = {};\n\n      for (var i = 0, len = _this8.allSubsCommodity.length; i < len; i++) {\n        if (item.CommodityNo == _this8.allSubsCommodity[i].commodity_no) {\n          chooseItem = _this8.allSubsCommodity[i];\n          break;\n        }\n      }\n\n      _this8.selectContractBtn(chooseItem);\n    });\n  },\n  methods: {\n    //选择当前选择的合约\n    selectContractBtn: function selectContractBtn(item) {\n      if (item.commodity_no == this.chooseContract.commodity_no) {\n        layer.close(tradePageStore.state.contractLayer);\n        return;\n      }\n\n      if (isLogin) {\n        //登录实盘\n        tradePageStore.state.WSUrl = address2;\n      } else {\n        //未登录游客\n        tradePageStore.state.WSUrl = address1;\n      }\n\n      marketStore.dispatch('cancelDepthSubscribe');\n      marketStore.dispatch('cancelTickerSubscribe');\n      tradeStore.state.chooseContract = item;\n      localStorage.setItem('chooseContract', JSON.stringify(item));\n\n      if (item.quatoData) {\n        marketStore.state.LastData = item.quatoData;\n      } else {\n        marketStore.state.LastData[3] = '0';\n        marketStore.state.LastData[6] = '0';\n        marketStore.state.LastData[10] = '0';\n        marketStore.state.LastData[11] = '0';\n        marketStore.state.LastData[12] = '0';\n        marketStore.state.LastData[13] = '0';\n        marketStore.state.LastData[14] = '0';\n      }\n\n      marketStore.state.currentQuato = this.chooseContract.security_type + '_' + this.chooseContract.commodity_no;\n\n      if (tradePageStore.state.tradeTabIndex == 4) {\n        marketStore.dispatch('depthSubscribe');\n        marketStore.dispatch('tickerSubscribe');\n      }\n\n      tradePageStore.state.headerTextTop = item.commodity_name;\n      tradePageStore.state.headerTextBottom = item.commodity_no + item.main_contract_no;\n      tradePageStore.state.chartUrl = this.chartUrl + \"?period='\" + this.period + \"'&contractNo='\" + item.security_type + '_' + this.chooseContract.commodity_no + '_' + this.chooseContract.mainContract + \"'&contractName='\" + this.chooseContract.commodity_name + \"'&priceType='\" + this.priceType + \"'\" + \"&apiUrl=\" + tradePageStore.state.apiUrl + \"&WSUrl=\" + tradePageStore.state.WSUrl;\n      layer.close(tradePageStore.state.contractLayer);\n    }\n  }\n});\n\n//# sourceURL=webpack:///./PQ/pages/quato/quatoDetail/quatoDetail.js?");

/***/ }),

/***/ "./PQ/pages/quato/quatoDetail/quatoDetail.scss":
/*!*****************************************************!*\
  !*** ./PQ/pages/quato/quatoDetail/quatoDetail.scss ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../../../node_modules/_css-loader@1.0.1@css-loader!../../../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js!./quatoDetail.scss */ \"./node_modules/_css-loader@1.0.1@css-loader/index.js!./node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js!./PQ/pages/quato/quatoDetail/quatoDetail.scss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../../../node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js */ \"./node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./PQ/pages/quato/quatoDetail/quatoDetail.scss?");

/***/ }),

/***/ "./PQ/pages/quato/quatoDetail/quatoDetailWP.js":
/*!*****************************************************!*\
  !*** ./PQ/pages/quato/quatoDetail/quatoDetailWP.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./quatoDetail.scss */ \"./PQ/pages/quato/quatoDetail/quatoDetail.scss\");\n\n__webpack_require__(/*! ../../../js/route */ \"./PQ/js/route.js\");\n\n__webpack_require__(/*! ../../../js/axios */ \"./PQ/js/axios.js\");\n\n__webpack_require__(/*! ../../../js/common */ \"./PQ/js/common.js\");\n\n__webpack_require__(/*! ../../../js/marketStore */ \"./PQ/js/marketStore.js\");\n\n__webpack_require__(/*! ../../../js/tradeStore */ \"./PQ/js/tradeStore.js\");\n\n__webpack_require__(/*! ./quatoDetail */ \"./PQ/pages/quato/quatoDetail/quatoDetail.js\");\n\n//# sourceURL=webpack:///./PQ/pages/quato/quatoDetail/quatoDetailWP.js?");

/***/ }),

/***/ "./node_modules/_css-loader@1.0.1@css-loader/index.js!./node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js!./PQ/pages/quato/quatoDetail/quatoDetail.scss":
/*!*************************************************************************************************************************************************************!*\
  !*** ./node_modules/_css-loader@1.0.1@css-loader!./node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js!./PQ/pages/quato/quatoDetail/quatoDetail.scss ***!
  \*************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../../../node_modules/_css-loader@1.0.1@css-loader/lib/css-base.js */ \"./node_modules/_css-loader@1.0.1@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"[v-cloak] {\\n  display: none !important; }\\n\\n/*total style*/\\n/*header style*/\\n/*bottom style*/\\n* {\\n  touch-action: none; }\\n\\nhtml, body {\\n  height: 100%;\\n  overflow: hidden; }\\n\\niframe {\\n  width: 100%;\\n  height: 99%;\\n  border: none;\\n  background: none; }\\n\\na {\\n  color: inherit;\\n  text-decoration: none;\\n  out-line: none;\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }\\n\\na:hover {\\n  text-decoration: none; }\\n\\ninput {\\n  background: none !important;\\n  background-color: none !important;\\n  border: none !important;\\n  padding: 0 !important;\\n  margin: 0 !important; }\\n\\nselect {\\n  padding: 0;\\n  margin: 0; }\\n\\n.colorUp {\\n  color: #ff5959 !important; }\\n\\n.colorDown {\\n  color: #39bf93 !important; }\\n\\n.colorBgUp {\\n  background: #ff5959 !important; }\\n\\n.colorBgDown {\\n  background: #39bf93 !important; }\\n\\n.notTrade {\\n  color: #999999 !important; }\\n\\n.notBgTrade {\\n  background: #999999 !important; }\\n\\n.colorUpBackground {\\n  background: #ffeeee !important; }\\n\\n.colorDownBackground {\\n  background: #ebf8f4 !important; }\\n\\n.mui-segmented-control {\\n  border: none !important; }\\n\\n.mui-control-item {\\n  border: none !important;\\n  background: none;\\n  color: inherit !important; }\\n\\n/*main content*/\\n.both-content {\\n  box-sizing: content-box;\\n  padding-top: 1.33333rem;\\n  padding-bottom: 1.33333rem;\\n  height: calc(100% - 1.33333rem - 1.33333rem); }\\n\\n.header-content {\\n  box-sizing: content-box;\\n  padding-top: 1.33333rem;\\n  height: calc(100% - 1.33333rem); }\\n\\n/*bottom tab*/\\n.bottom-tab-nav {\\n  height: 1.33333rem;\\n  box-shadow: none;\\n  background: #fff;\\n  border-top: solid 0.01333rem #f2f2f2; }\\n  .bottom-tab-nav .mui-active {\\n    color: #333 !important; }\\n  .bottom-tab-nav .mui-active1 {\\n    color: #1873f2 !important; }\\n  .bottom-tab-nav .mui-tab-item {\\n    font-size: 11px !important;\\n    vertical-align: bottom;\\n    color: #333; }\\n    [data-dpr=\\\"2\\\"] .bottom-tab-nav .mui-tab-item {\\n      font-size: 22px !important; }\\n    [data-dpr=\\\"3\\\"] .bottom-tab-nav .mui-tab-item {\\n      font-size: 33px !important; }\\n    .bottom-tab-nav .mui-tab-item .tab-icon {\\n      display: block;\\n      margin: 0 auto;\\n      width: 0.53333rem;\\n      height: 0.53333rem; }\\n\\n/*header tab*/\\n.header-nav {\\n  height: 1.33333rem;\\n  background-color: #fff;\\n  box-shadow: none;\\n  border-bottom: solid 0.01333rem #f2f2f2; }\\n  .header-nav .mui-title {\\n    height: 1.33333rem;\\n    line-height: 1.33333rem;\\n    color: #000;\\n    font-size: 18px !important;\\n    left: 50%;\\n    transform: translateX(-50%);\\n    width: 80%;\\n    z-index: -1; }\\n    [data-dpr=\\\"2\\\"] .header-nav .mui-title {\\n      font-size: 36px !important; }\\n    [data-dpr=\\\"3\\\"] .header-nav .mui-title {\\n      font-size: 54px !important; }\\n  .header-nav .mui-pull-right {\\n    margin-left: 0.53333rem;\\n    color: #333;\\n    font-size: 14px !important; }\\n    [data-dpr=\\\"2\\\"] .header-nav .mui-pull-right {\\n      font-size: 28px !important; }\\n    [data-dpr=\\\"3\\\"] .header-nav .mui-pull-right {\\n      font-size: 42px !important; }\\n  .header-nav .header-right-icon {\\n    height: 1.33333rem;\\n    line-height: 1.33333rem; }\\n    .header-nav .header-right-icon .header-icon {\\n      width: 0.53333rem;\\n      height: 0.53333rem;\\n      vertical-align: middle; }\\n\\n/*layui layer style*/\\n.layui-layer {\\n  border-radius: 5px !important;\\n  overflow: hidden;\\n  background: none !important; }\\n\\n.layui-layer-page {\\n  background-color: #fff !important; }\\n  .layui-layer-page .layui-layer-title {\\n    background: #20212a !important;\\n    color: #999999 !important;\\n    font-size: 14px !important;\\n    padding: 0 !important;\\n    text-align: center !important;\\n    border: none !important;\\n    border-bottom: solid 0.01333rem #fff !important;\\n    height: 1.06667rem !important; }\\n    [data-dpr=\\\"2\\\"] .layui-layer-page .layui-layer-title {\\n      font-size: 28px !important; }\\n    [data-dpr=\\\"3\\\"] .layui-layer-page .layui-layer-title {\\n      font-size: 42px !important; }\\n  .layui-layer-page .layui-layer-content {\\n    height: 100% !important; }\\n\\n.layui-layer-msg .layui-layer-content {\\n  background: #34363c !important; }\\n\\n/*notice layer style*/\\n#noticeLayer {\\n  position: relative;\\n  height: 100%;\\n  overflow: hidden; }\\n  #noticeLayer .notice-content {\\n    height: calc(100% - 1.6rem);\\n    background: #20212a;\\n    border-bottom-right-radius: 5px;\\n    border-bottom-left-radius: 5px;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center; }\\n  #noticeLayer .notice-btn {\\n    height: 1.46667rem; }\\n    #noticeLayer .notice-btn .notice-line {\\n      display: block;\\n      margin: 0 auto;\\n      background: #a3a9cc;\\n      width: 0.05333rem;\\n      height: 0.8rem; }\\n    #noticeLayer .notice-btn .notice-close-btn {\\n      border: solid #a3a9cc 0.05333rem;\\n      border-radius: 50px;\\n      transform: rotate(45deg);\\n      display: block;\\n      margin: 0 auto;\\n      border-radius: 100px;\\n      width: 0.53333rem;\\n      height: 0.53333rem; }\\n\\n/*confirm layer style*/\\n.layer-box {\\n  display: none;\\n  color: #333;\\n  height: 100%;\\n  position: relative; }\\n  .layer-box .close-icon {\\n    position: absolute;\\n    top: 0.26667rem;\\n    right: 0.26667rem;\\n    width: 0.26667rem;\\n    height: 0.26667rem; }\\n  .layer-box .layer-header {\\n    display: flex;\\n    justify-content: center;\\n    align-items: flex-end;\\n    height: 1.2rem;\\n    color: #333;\\n    font-size: 16px !important; }\\n    [data-dpr=\\\"2\\\"] .layer-box .layer-header {\\n      font-size: 32px !important; }\\n    [data-dpr=\\\"3\\\"] .layer-box .layer-header {\\n      font-size: 48px !important; }\\n  .layer-box .layer-content {\\n    height: calc(100% - 1.2rem - 1.33333rem);\\n    border-bottom: solid 0.01333rem #f2f2f2;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    text-align: center;\\n    font-size: 14px !important;\\n    padding: 0 0.4rem;\\n    color: #666;\\n    flex-direction: column; }\\n    [data-dpr=\\\"2\\\"] .layer-box .layer-content {\\n      font-size: 28px !important; }\\n    [data-dpr=\\\"3\\\"] .layer-box .layer-content {\\n      font-size: 42px !important; }\\n    .layer-box .layer-content .layer-content-tips {\\n      font-size: 12px !important;\\n      margin-top: 10px;\\n      color: #a9a9a9; }\\n      [data-dpr=\\\"2\\\"] .layer-box .layer-content .layer-content-tips {\\n        font-size: 24px !important; }\\n      [data-dpr=\\\"3\\\"] .layer-box .layer-content .layer-content-tips {\\n        font-size: 36px !important; }\\n  .layer-box .layer-btn {\\n    height: 1.33333rem;\\n    display: flex;\\n    align-items: center;\\n    font-size: 14px !important;\\n    color: #1873f2; }\\n    [data-dpr=\\\"2\\\"] .layer-box .layer-btn {\\n      font-size: 28px !important; }\\n    [data-dpr=\\\"3\\\"] .layer-box .layer-btn {\\n      font-size: 42px !important; }\\n    .layer-box .layer-btn span {\\n      flex: 1;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center; }\\n    .layer-box .layer-btn .border-right {\\n      border-right: solid 0.01333rem #fff; }\\n\\n/*banner style*/\\n#slide {\\n  background: #fff;\\n  height: 3.76rem; }\\n  #slide #slideCard {\\n    display: flex;\\n    overflow: auto;\\n    transition: transform .5s; }\\n    #slide #slideCard .slide-card-item {\\n      margin: 0 5px;\\n      width: 80%; }\\n      #slide #slideCard .slide-card-item img {\\n        height: 100%;\\n        width: 100%; }\\n    #slide #slideCard .slide-card-item:first-child {\\n      margin-left: 10px; }\\n    #slide #slideCard .slide-card-item:last-child {\\n      margin-right: 10px; }\\n  #slide .slide-bar {\\n    height: 0.4rem;\\n    background: #fff;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center; }\\n    #slide .slide-bar .slide-bar-item {\\n      height: 0.13333rem;\\n      width: 0.13333rem;\\n      background: #e6e6e6;\\n      margin: 0 0.06667rem; }\\n    #slide .slide-bar .slide-bar-item-active {\\n      background: #1873f2;\\n      width: 0.26667rem; }\\n\\n/*custom layer style*/\\n#customLayer {\\n  height: 100%;\\n  background: #fff; }\\n  #customLayer .custom-item {\\n    height: 25%;\\n    border-bottom: solid 0.01333rem #f2f2f2;\\n    padding: 0 0.4rem;\\n    display: flex;\\n    align-items: center; }\\n    #customLayer .custom-item img {\\n      height: 0.53333rem;\\n      width: 0.53333rem;\\n      margin-right: 0.26667rem; }\\n    #customLayer .custom-item span {\\n      font-size: 15px !important; }\\n      [data-dpr=\\\"2\\\"] #customLayer .custom-item span {\\n        font-size: 30px !important; }\\n      [data-dpr=\\\"3\\\"] #customLayer .custom-item span {\\n        font-size: 45px !important; }\\n\\n.request-loading {\\n  width: 0.53333rem !important;\\n  height: 0.53333rem !important; }\\n\\n.loading {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%); }\\n\\nsvg {\\n  width: 100px;\\n  height: 100px;\\n  margin: 20px;\\n  display: inline-block; }\\n\\n#wxLayer .layer-header {\\n  height: 0.93333rem; }\\n\\n#wxLayer .layer-content {\\n  height: calc(100% - 0.93333rem - 0.93333rem); }\\n  #wxLayer .layer-content .wx-add {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center; }\\n    #wxLayer .layer-content .wx-add .title {\\n      font-weight: bold;\\n      font-size: 14px !important;\\n      color: #333;\\n      margin-top: 0.13333rem; }\\n      [data-dpr=\\\"2\\\"] #wxLayer .layer-content .wx-add .title {\\n        font-size: 28px !important; }\\n      [data-dpr=\\\"3\\\"] #wxLayer .layer-content .wx-add .title {\\n        font-size: 42px !important; }\\n      #wxLayer .layer-content .wx-add .title:first-child {\\n        margin-top: 0; }\\n    #wxLayer .layer-content .wx-add .notice {\\n      padding-bottom: 0.13333rem;\\n      border-bottom: 0.02667rem solid #f2f2f2; }\\n    #wxLayer .layer-content .wx-add .open-wx {\\n      display: block;\\n      background-color: #1873f2;\\n      color: white;\\n      font-size: 12px !important;\\n      padding: 0.06667rem 0.13333rem;\\n      border-radius: 0.06667rem;\\n      margin-top: 0.13333rem; }\\n      [data-dpr=\\\"2\\\"] #wxLayer .layer-content .wx-add .open-wx {\\n        font-size: 24px !important; }\\n      [data-dpr=\\\"3\\\"] #wxLayer .layer-content .wx-add .open-wx {\\n        font-size: 36px !important; }\\n    #wxLayer .layer-content .wx-add input {\\n      text-align: center;\\n      font-size: 14px !important; }\\n      [data-dpr=\\\"2\\\"] #wxLayer .layer-content .wx-add input {\\n        font-size: 28px !important; }\\n      [data-dpr=\\\"3\\\"] #wxLayer .layer-content .wx-add input {\\n        font-size: 42px !important; }\\n    #wxLayer .layer-content .wx-add img {\\n      width: 3.33333rem;\\n      height: 3.33333rem; }\\n\\n#wxLayer .layer-btn {\\n  height: 0.93333rem; }\\n\\n.header-nav .contract-header {\\n  height: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n  .header-nav .contract-header .header-mark {\\n    color: #fff;\\n    background: #1873f2;\\n    border-radius: 0.06667rem;\\n    font-size: 11px !important;\\n    padding: 0.06667rem;\\n    margin-right: 0.13333rem;\\n    font-weight: bold; }\\n    [data-dpr=\\\"2\\\"] .header-nav .contract-header .header-mark {\\n      font-size: 22px !important; }\\n    [data-dpr=\\\"3\\\"] .header-nav .contract-header .header-mark {\\n      font-size: 33px !important; }\\n  .header-nav .contract-header .contract-header-left {\\n    display: flex;\\n    flex-direction: column;\\n    height: 100%; }\\n    .header-nav .contract-header .contract-header-left .header-left-item {\\n      flex: 1;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center; }\\n      .header-nav .contract-header .contract-header-left .header-left-item .title-name {\\n        display: flex;\\n        align-items: center;\\n        height: 100%;\\n        font-size: 14px !important; }\\n        [data-dpr=\\\"2\\\"] .header-nav .contract-header .contract-header-left .header-left-item .title-name {\\n          font-size: 28px !important; }\\n        [data-dpr=\\\"3\\\"] .header-nav .contract-header .contract-header-left .header-left-item .title-name {\\n          font-size: 42px !important; }\\n      .header-nav .contract-header .contract-header-left .header-left-item .title-code {\\n        display: flex;\\n        align-items: center;\\n        height: 100%;\\n        font-size: 14px !important;\\n        position: relative; }\\n        [data-dpr=\\\"2\\\"] .header-nav .contract-header .contract-header-left .header-left-item .title-code {\\n          font-size: 28px !important; }\\n        [data-dpr=\\\"3\\\"] .header-nav .contract-header .contract-header-left .header-left-item .title-code {\\n          font-size: 42px !important; }\\n    .header-nav .contract-header .contract-header-left .trade-mark {\\n      font-size: 12px !important; }\\n      [data-dpr=\\\"2\\\"] .header-nav .contract-header .contract-header-left .trade-mark {\\n        font-size: 24px !important; }\\n      [data-dpr=\\\"3\\\"] .header-nav .contract-header .contract-header-left .trade-mark {\\n        font-size: 36px !important; }\\n  .header-nav .contract-header .contract-header-right {\\n    margin-left: 0.13333rem; }\\n    .header-nav .contract-header .contract-header-right .title-icon {\\n      width: 0.26667rem;\\n      height: 0.13333rem; }\\n\\n.header-type-m {\\n  background: #363d5d; }\\n  .header-type-m .contract-header .header-mark {\\n    background: #fff;\\n    color: #363d5d; }\\n  .header-type-m .contract-header .contract-header-left {\\n    color: #979fc2; }\\n\\n#offCanvasSide {\\n  background: #f2f2f2; }\\n  #offCanvasSide .menu-list .menu-item {\\n    padding: 0 0.4rem;\\n    background: #fff;\\n    height: 1.33333rem;\\n    display: flex;\\n    align-items: center; }\\n    #offCanvasSide .menu-list .menu-item img {\\n      width: 0.53333rem;\\n      height: 0.53333rem;\\n      margin-right: 0.30667rem; }\\n    #offCanvasSide .menu-list .menu-item .award {\\n      font-size: 13px !important; }\\n      [data-dpr=\\\"2\\\"] #offCanvasSide .menu-list .menu-item .award {\\n        font-size: 26px !important; }\\n      [data-dpr=\\\"3\\\"] #offCanvasSide .menu-list .menu-item .award {\\n        font-size: 39px !important; }\\n      #offCanvasSide .menu-list .menu-item .award span {\\n        color: #ff5959; }\\n  #offCanvasSide .menu-list .menu-item-margin {\\n    margin-bottom: 0.26667rem; }\\n\\n#contractList {\\n  z-index: 19891016;\\n  border-radius: 0;\\n  height: 8rem;\\n  background-color: #f2f2f2 !important; }\\n  #contractList .mui-scroll-wrapper {\\n    height: 100%;\\n    margin: 0; }\\n  #contractList .popover-item {\\n    font-size: 14px !important;\\n    background: #fff;\\n    height: 1.06667rem;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    color: #333;\\n    border-bottom: solid 0.01333rem #f2f2f2; }\\n    [data-dpr=\\\"2\\\"] #contractList .popover-item {\\n      font-size: 28px !important; }\\n    [data-dpr=\\\"3\\\"] #contractList .popover-item {\\n      font-size: 42px !important; }\\n\\n#trade {\\n  height: 100%;\\n  background: #fff; }\\n  #trade #trade-content .trade-tab {\\n    display: flex;\\n    justify-content: space-around;\\n    align-items: stretch;\\n    color: #666;\\n    height: 1.06667rem;\\n    line-height: 1.06667rem;\\n    background: #fff;\\n    border-bottom: solid 0.01333rem #f2f2f2;\\n    font-size: 16px !important;\\n    position: relative; }\\n    [data-dpr=\\\"2\\\"] #trade #trade-content .trade-tab {\\n      font-size: 32px !important; }\\n    [data-dpr=\\\"3\\\"] #trade #trade-content .trade-tab {\\n      font-size: 48px !important; }\\n    #trade #trade-content .trade-tab .tab-active {\\n      color: #333;\\n      position: relative; }\\n    #trade #trade-content .trade-tab .tab-active::before {\\n      content: '';\\n      width: 0.4rem;\\n      height: 0.08rem;\\n      background: #1873f2;\\n      position: absolute;\\n      bottom: 0;\\n      left: 50%;\\n      transform: translateX(-50%); }\\n    #trade #trade-content .trade-tab .trade-tab-item {\\n      flex: 1;\\n      text-align: center;\\n      font-weight: bold; }\\n    #trade #trade-content .trade-tab .tab-position-order {\\n      position: relative; }\\n    #trade #trade-content .trade-tab .tab-position-order-point {\\n      position: absolute;\\n      border-radius: 50px;\\n      width: 0.16rem;\\n      height: 0.16rem;\\n      background: #ff4040;\\n      top: 0.13333rem;\\n      right: 0.13333rem; }\\n    #trade #trade-content .trade-tab .kline-option {\\n      position: relative; }\\n      #trade #trade-content .trade-tab .kline-option .triangle-icon {\\n        position: absolute;\\n        width: 0;\\n        height: 0;\\n        border: solid 0.13333rem rgba(0, 0, 0, 0);\\n        border-bottom-color: #666;\\n        transform: rotate(135deg);\\n        bottom: 0;\\n        right: 0; }\\n    #trade #trade-content .trade-tab .kline-more {\\n      position: absolute;\\n      display: flex;\\n      left: 50%;\\n      bottom: 0;\\n      transform: translateX(-50%);\\n      width: 100%;\\n      background: #fff;\\n      color: #333;\\n      opacity: 0;\\n      z-index: -1;\\n      transition: opacity .5s,bottom .5s;\\n      border-bottom: solid 0.01333rem #f2f2f2;\\n      border-top: solid 0.01333rem #f2f2f2; }\\n      #trade #trade-content .trade-tab .kline-more span {\\n        flex: 1; }\\n      #trade #trade-content .trade-tab .kline-more .trade-tab-item {\\n        font-weight: initial;\\n        font-size: 14px !important;\\n        color: #999999; }\\n        [data-dpr=\\\"2\\\"] #trade #trade-content .trade-tab .kline-more .trade-tab-item {\\n          font-size: 28px !important; }\\n        [data-dpr=\\\"3\\\"] #trade #trade-content .trade-tab .kline-more .trade-tab-item {\\n          font-size: 42px !important; }\\n    #trade #trade-content .trade-tab .kline-more-active {\\n      z-index: 99999;\\n      bottom: -1.06667rem;\\n      opacity: 1; }\\n  #trade #trade-content .keyboard {\\n    background: #fff;\\n    font-size: 16px !important;\\n    font-weight: bold;\\n    width: 100%;\\n    height: 6.66667rem; }\\n    [data-dpr=\\\"2\\\"] #trade #trade-content .keyboard {\\n      font-size: 32px !important; }\\n    [data-dpr=\\\"3\\\"] #trade #trade-content .keyboard {\\n      font-size: 48px !important; }\\n    #trade #trade-content .keyboard .flex {\\n      display: flex; }\\n    #trade #trade-content .keyboard .flex-1 {\\n      flex: 1; }\\n    #trade #trade-content .keyboard .flex-2 {\\n      flex: 2; }\\n    #trade #trade-content .keyboard .flex-3 {\\n      flex: 3; }\\n    #trade #trade-content .keyboard .flex-4 {\\n      flex: 4; }\\n    #trade #trade-content .keyboard .keyboard-btn {\\n      height: 100%;\\n      width: 1.33333rem;\\n      display: flex;\\n      justify-content: flex-end;\\n      align-items: center; }\\n    #trade #trade-content .keyboard .keyboard-info {\\n      height: 1.06667rem;\\n      justify-content: space-between;\\n      align-items: center;\\n      padding: 0 0.4rem;\\n      font-size: 15px !important;\\n      color: #999999; }\\n      [data-dpr=\\\"2\\\"] #trade #trade-content .keyboard .keyboard-info {\\n        font-size: 30px !important; }\\n      [data-dpr=\\\"3\\\"] #trade #trade-content .keyboard .keyboard-info {\\n        font-size: 45px !important; }\\n      #trade #trade-content .keyboard .keyboard-info img {\\n        width: 0.53333rem;\\n        height: 0.53333rem; }\\n    #trade #trade-content .keyboard .price-type {\\n      height: 1.06667rem;\\n      font-size: 14px !important; }\\n      [data-dpr=\\\"2\\\"] #trade #trade-content .keyboard .price-type {\\n        font-size: 28px !important; }\\n      [data-dpr=\\\"3\\\"] #trade #trade-content .keyboard .price-type {\\n        font-size: 42px !important; }\\n      #trade #trade-content .keyboard .price-type .price-type-item {\\n        background: #bcbec4;\\n        color: #333;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        border-right: solid 0.01333rem #fff; }\\n      #trade #trade-content .keyboard .price-type .price-type-item-active {\\n        background: #ff7f00;\\n        color: #fff; }\\n    #trade #trade-content .keyboard .keyboard-box {\\n      padding: 0.06667rem;\\n      background: #d6d8dc; }\\n      #trade #trade-content .keyboard .keyboard-box .keyboard-item {\\n        height: 1.06667rem;\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        border-bottom: solid 0.01333rem #dfe4e6;\\n        border-right: solid 0.01333rem #dfe4e6;\\n        box-sizing: content-box;\\n        color: #333;\\n        background: #fff;\\n        border-radius: 0.13333rem;\\n        border-bottom: solid 0.01333rem #999c9f;\\n        margin: 0.06667rem; }\\n        #trade #trade-content .keyboard .keyboard-box .keyboard-item img {\\n          width: 0.6rem;\\n          height: 0.4rem; }\\n      #trade #trade-content .keyboard .keyboard-box .keyboard-item-gray {\\n        background: #bcbec4; }\\n      #trade #trade-content .keyboard .keyboard-box .high-height {\\n        height: 2.26667rem;\\n        color: #fff;\\n        justify-content: center;\\n        align-items: center;\\n        margin-bottom: 0.13333rem; }\\n        #trade #trade-content .keyboard .keyboard-box .high-height img {\\n          width: 0.53333rem;\\n          height: 0.53333rem; }\\n  #trade #trade-content .trade-area .trade-info-wrap {\\n    background: #fff;\\n    height: 1.33333rem;\\n    border-top: solid 0.01333rem #f2f2f2;\\n    border-bottom: solid 0.01333rem #f2f2f2;\\n    display: flex;\\n    justify-content: space-around;\\n    color: #333; }\\n    #trade #trade-content .trade-area .trade-info-wrap .trade-info-side {\\n      padding: 0 0.13333rem; }\\n      #trade #trade-content .trade-area .trade-info-wrap .trade-info-side .trade-info-item {\\n        display: flex;\\n        align-items: center;\\n        justify-content: space-between; }\\n      #trade #trade-content .trade-area .trade-info-wrap .trade-info-side .info-name {\\n        color: #333;\\n        padding-right: 0.26667rem; }\\n      #trade #trade-content .trade-area .trade-info-wrap .trade-info-side .info-right {\\n        flex: 1;\\n        display: flex;\\n        justify-content: flex-end; }\\n    #trade #trade-content .trade-area .trade-info-wrap .trade-info-left {\\n      flex: 1.5;\\n      border-right: solid 0.01333rem #f2f2f2;\\n      font-size: 14px !important;\\n      display: flex;\\n      justify-content: center;\\n      flex-direction: column; }\\n      [data-dpr=\\\"2\\\"] #trade #trade-content .trade-area .trade-info-wrap .trade-info-left {\\n        font-size: 28px !important; }\\n      [data-dpr=\\\"3\\\"] #trade #trade-content .trade-area .trade-info-wrap .trade-info-left {\\n        font-size: 42px !important; }\\n    #trade #trade-content .trade-area .trade-info-wrap .trade-info-right {\\n      flex: 2;\\n      display: flex;\\n      align-items: center;\\n      justify-content: flex-end; }\\n      #trade #trade-content .trade-area .trade-info-wrap .trade-info-right .info-price {\\n        font-size: 30px !important;\\n        font-weight: bold;\\n        margin-right: 0.13333rem; }\\n        [data-dpr=\\\"2\\\"] #trade #trade-content .trade-area .trade-info-wrap .trade-info-right .info-price {\\n          font-size: 60px !important; }\\n        [data-dpr=\\\"3\\\"] #trade #trade-content .trade-area .trade-info-wrap .trade-info-right .info-price {\\n          font-size: 90px !important; }\\n      #trade #trade-content .trade-area .trade-info-wrap .trade-info-right .info-rate {\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 12px !important; }\\n        [data-dpr=\\\"2\\\"] #trade #trade-content .trade-area .trade-info-wrap .trade-info-right .info-rate {\\n          font-size: 24px !important; }\\n        [data-dpr=\\\"3\\\"] #trade #trade-content .trade-area .trade-info-wrap .trade-info-right .info-rate {\\n          font-size: 36px !important; }\\n  #trade #trade-content .trade-area .rate-wrap {\\n    height: 0.4rem;\\n    color: #fff;\\n    font-size: 11px !important;\\n    display: flex; }\\n    [data-dpr=\\\"2\\\"] #trade #trade-content .trade-area .rate-wrap {\\n      font-size: 22px !important; }\\n    [data-dpr=\\\"3\\\"] #trade #trade-content .trade-area .rate-wrap {\\n      font-size: 33px !important; }\\n    #trade #trade-content .trade-area .rate-wrap .rate-item {\\n      width: 50%;\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      padding: 0 0.13333rem;\\n      min-width: 30% !important; }\\n    #trade #trade-content .trade-area .rate-wrap .rate-item-buy {\\n      background: #ff5959; }\\n    #trade #trade-content .trade-area .rate-wrap .rate-item-sell {\\n      background: #39bf93; }\\n  #trade #trade-content .trade-area .trade-num-wrap {\\n    background: #fff;\\n    height: 1.33333rem;\\n    border-bottom: solid 0.01333rem #f2f2f2;\\n    padding: 0.13333rem 0.13333rem;\\n    color: #333;\\n    display: flex; }\\n    #trade #trade-content .trade-area .trade-num-wrap .trade-hand-num {\\n      flex: 2;\\n      background: #f2f2f2;\\n      display: flex;\\n      justify-content: center;\\n      border: solid 0.01333rem rgba(0, 0, 0, 0); }\\n      #trade #trade-content .trade-area .trade-num-wrap .trade-hand-num .trade-num-item {\\n        height: 100%;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center; }\\n      #trade #trade-content .trade-area .trade-num-wrap .trade-hand-num .trade-num-content {\\n        width: calc(100% - 1.6rem);\\n        display: flex;\\n        justify-content: space-between; }\\n        #trade #trade-content .trade-area .trade-num-wrap .trade-hand-num .trade-num-content .content-a {\\n          color: #999999;\\n          font-size: 14px !important; }\\n          [data-dpr=\\\"2\\\"] #trade #trade-content .trade-area .trade-num-wrap .trade-hand-num .trade-num-content .content-a {\\n            font-size: 28px !important; }\\n          [data-dpr=\\\"3\\\"] #trade #trade-content .trade-area .trade-num-wrap .trade-hand-num .trade-num-content .content-a {\\n            font-size: 42px !important; }\\n        #trade #trade-content .trade-area .trade-num-wrap .trade-hand-num .trade-num-content .content-b {\\n          font-size: 14px !important; }\\n          [data-dpr=\\\"2\\\"] #trade #trade-content .trade-area .trade-num-wrap .trade-hand-num .trade-num-content .content-b {\\n            font-size: 28px !important; }\\n          [data-dpr=\\\"3\\\"] #trade #trade-content .trade-area .trade-num-wrap .trade-hand-num .trade-num-content .content-b {\\n            font-size: 42px !important; }\\n      #trade #trade-content .trade-area .trade-num-wrap .trade-hand-num .trade-num-btn {\\n        width: 0.8rem; }\\n        #trade #trade-content .trade-area .trade-num-wrap .trade-hand-num .trade-num-btn img {\\n          width: 0.26667rem; }\\n    #trade #trade-content .trade-area .trade-num-wrap .trade-price-num {\\n      flex: 3;\\n      background: #f2f2f2;\\n      margin: 0 0 0 0.13333rem;\\n      display: flex;\\n      border: solid 0.01333rem rgba(0, 0, 0, 0); }\\n      #trade #trade-content .trade-area .trade-num-wrap .trade-price-num span {\\n        color: #999999;\\n        font-size: 14px !important;\\n        flex: 35;\\n        display: flex;\\n        align-items: center;\\n        justify-content: flex-end; }\\n        [data-dpr=\\\"2\\\"] #trade #trade-content .trade-area .trade-num-wrap .trade-price-num span {\\n          font-size: 28px !important; }\\n        [data-dpr=\\\"3\\\"] #trade #trade-content .trade-area .trade-num-wrap .trade-price-num span {\\n          font-size: 42px !important; }\\n      #trade #trade-content .trade-area .trade-num-wrap .trade-price-num .price-input {\\n        color: #333;\\n        font-size: 14px !important;\\n        flex: 53;\\n        display: flex;\\n        align-items: center;\\n        justify-content: flex-start;\\n        padding-left: 0.13333rem !important; }\\n        [data-dpr=\\\"2\\\"] #trade #trade-content .trade-area .trade-num-wrap .trade-price-num .price-input {\\n          font-size: 28px !important; }\\n        [data-dpr=\\\"3\\\"] #trade #trade-content .trade-area .trade-num-wrap .trade-price-num .price-input {\\n          font-size: 42px !important; }\\n    #trade #trade-content .trade-area .trade-num-wrap .trade-active {\\n      border: solid 0.01333rem #1873f2;\\n      background: #fff; }\\n    #trade #trade-content .trade-area .trade-num-wrap .trade-type-btn {\\n      flex: 1;\\n      background: #f2f2f2;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      position: relative;\\n      color: #333;\\n      font-size: 14px !important; }\\n      [data-dpr=\\\"2\\\"] #trade #trade-content .trade-area .trade-num-wrap .trade-type-btn {\\n        font-size: 28px !important; }\\n      [data-dpr=\\\"3\\\"] #trade #trade-content .trade-area .trade-num-wrap .trade-type-btn {\\n        font-size: 42px !important; }\\n      #trade #trade-content .trade-area .trade-num-wrap .trade-type-btn .triangle-icon {\\n        position: absolute;\\n        width: 0;\\n        height: 0;\\n        border: solid 0.13333rem rgba(0, 0, 0, 0);\\n        border-bottom-color: #999999;\\n        transform: rotate(135deg);\\n        bottom: -0.01333rem;\\n        right: -0.02667rem; }\\n      #trade #trade-content .trade-area .trade-num-wrap .trade-type-btn .trade-type-option {\\n        position: absolute;\\n        z-index: 99;\\n        width: 100%;\\n        background: #f2f2f2;\\n        top: 100%; }\\n        #trade #trade-content .trade-area .trade-num-wrap .trade-type-btn .trade-type-option span {\\n          display: block;\\n          height: 1.06667rem;\\n          line-height: 1.06667rem;\\n          text-align: center;\\n          border-top: solid 0.01333rem #fff; }\\n  #trade #trade-content .trade-area .trade-btn-wrap {\\n    background: #fff;\\n    height: 1.6rem;\\n    display: flex;\\n    justify-content: space-between;\\n    font-size: 14px !important;\\n    color: #fff;\\n    padding: 0.13333rem; }\\n    [data-dpr=\\\"2\\\"] #trade #trade-content .trade-area .trade-btn-wrap {\\n      font-size: 28px !important; }\\n    [data-dpr=\\\"3\\\"] #trade #trade-content .trade-area .trade-btn-wrap {\\n      font-size: 42px !important; }\\n    #trade #trade-content .trade-area .trade-btn-wrap .trade-btn {\\n      width: 50%;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      flex-direction: column; }\\n    #trade #trade-content .trade-area .trade-btn-wrap .trade-btn-price {\\n      border-bottom: solid 0.01333rem #fff; }\\n    #trade #trade-content .trade-area .trade-btn-wrap .trade-buy-btn {\\n      background: #ff5959;\\n      border: solid 0.02667rem #ff6666;\\n      margin-right: 0.06667rem; }\\n    #trade #trade-content .trade-area .trade-btn-wrap .trade-sell-btn {\\n      background: #39bf93;\\n      border: solid 0.02667rem #5ce6a1;\\n      margin-left: 0.06667rem; }\\n  #trade #trade-content .chartPage {\\n    height: calc(100% - 1.06667rem); }\\n    #trade #trade-content .chartPage .trade-area {\\n      width: 100%;\\n      position: absolute;\\n      bottom: 0; }\\n    #trade #trade-content .chartPage .keyboard1 {\\n      height: 6rem; }\\n    #trade #trade-content .chartPage .keyboard2 {\\n      height: 7.06667rem; }\\n    #trade #trade-content .chartPage .slide-up-enter-active, #trade #trade-content .chartPage .slide-up-leave-active {\\n      transition: height .3s ease-in-out 0s; }\\n    #trade #trade-content .chartPage .slide-up-enter, #trade #trade-content .chartPage .slide-up-leave-active {\\n      height: 0px; }\\n    #trade #trade-content .chartPage .chart {\\n      position: relative;\\n      height: calc(100% - 1.33333rem - 0.4rem - 1.33333rem - 1.6rem);\\n      background: #fff; }\\n  #trade #trade-content .positionPage {\\n    height: calc(100% - 1.06667rem); }\\n    #trade #trade-content .positionPage .trade-area {\\n      width: 100%;\\n      position: absolute;\\n      bottom: 0;\\n      z-index: 2; }\\n    #trade #trade-content .positionPage .keyboard1 {\\n      height: 6rem; }\\n    #trade #trade-content .positionPage .keyboard2 {\\n      height: 7.06667rem; }\\n    #trade #trade-content .positionPage .slide-up-enter-active, #trade #trade-content .positionPage .slide-up-leave-active {\\n      transition: height .3s ease-in-out 0s; }\\n    #trade #trade-content .positionPage .slide-up-enter, #trade #trade-content .positionPage .slide-up-leave-active {\\n      height: 0px; }\\n    #trade #trade-content .positionPage .tab-btn {\\n      height: 1.06667rem;\\n      padding: 0 0.4rem;\\n      display: flex;\\n      align-items: center;\\n      font-size: 14px !important;\\n      font-weight: bold;\\n      color: #999999;\\n      border-bottom: solid 0.01333rem #f2f2f2; }\\n      [data-dpr=\\\"2\\\"] #trade #trade-content .positionPage .tab-btn {\\n        font-size: 28px !important; }\\n      [data-dpr=\\\"3\\\"] #trade #trade-content .positionPage .tab-btn {\\n        font-size: 42px !important; }\\n      #trade #trade-content .positionPage .tab-btn span {\\n        margin-right: 0.4rem; }\\n      #trade #trade-content .positionPage .tab-btn .tab-btn-active {\\n        color: #333; }\\n    #trade #trade-content .positionPage .position-info {\\n      height: calc(100% - 1.06667rem - 1.33333rem - 0.4rem - 1.33333rem - 1.6rem);\\n      background: #f2f2f2; }\\n      #trade #trade-content .positionPage .position-info .position-info-item {\\n        height: 100%; }\\n      #trade #trade-content .positionPage .position-info .info-page-a {\\n        position: relative;\\n        font-size: 12px !important;\\n        height: 100%; }\\n        [data-dpr=\\\"2\\\"] #trade #trade-content .positionPage .position-info .info-page-a {\\n          font-size: 24px !important; }\\n        [data-dpr=\\\"3\\\"] #trade #trade-content .positionPage .position-info .info-page-a {\\n          font-size: 36px !important; }\\n        #trade #trade-content .positionPage .position-info .info-page-a .detail-list-scroll {\\n          height: 100%; }\\n        #trade #trade-content .positionPage .position-info .info-page-a .mui-scroll {\\n          display: flex;\\n          background: #fff; }\\n        #trade #trade-content .positionPage .position-info .info-page-a .info-side {\\n          flex: 1; }\\n          #trade #trade-content .positionPage .position-info .info-page-a .info-side ul {\\n            padding: 0 0.4rem; }\\n            #trade #trade-content .positionPage .position-info .info-page-a .info-side ul li {\\n              display: flex;\\n              height: 0.73333rem;\\n              justify-content: space-between;\\n              align-items: center; }\\n              #trade #trade-content .positionPage .position-info .info-page-a .info-side ul li .info-side-item {\\n                flex: 1; }\\n              #trade #trade-content .positionPage .position-info .info-page-a .info-side ul li .info-side-item:nth-child(2) {\\n                text-align: center; }\\n              #trade #trade-content .positionPage .position-info .info-page-a .info-side ul li .info-side-item:last-child {\\n                text-align: right; }\\n              #trade #trade-content .positionPage .position-info .info-page-a .info-side ul li .info-title {\\n                color: #999999; }\\n              #trade #trade-content .positionPage .position-info .info-page-a .info-side ul li .buy-type {\\n                background: #ff5959;\\n                color: #fff;\\n                font-size: 9px !important;\\n                padding: 0.05333rem;\\n                border-radius: 0.05333rem; }\\n                [data-dpr=\\\"2\\\"] #trade #trade-content .positionPage .position-info .info-page-a .info-side ul li .buy-type {\\n                  font-size: 18px !important; }\\n                [data-dpr=\\\"3\\\"] #trade #trade-content .positionPage .position-info .info-page-a .info-side ul li .buy-type {\\n                  font-size: 27px !important; }\\n              #trade #trade-content .positionPage .position-info .info-page-a .info-side ul li .sell-type {\\n                background: #39bf93;\\n                color: #fff;\\n                font-size: 9px !important;\\n                padding: 0.05333rem;\\n                border-radius: 0.05333rem; }\\n                [data-dpr=\\\"2\\\"] #trade #trade-content .positionPage .position-info .info-page-a .info-side ul li .sell-type {\\n                  font-size: 18px !important; }\\n                [data-dpr=\\\"3\\\"] #trade #trade-content .positionPage .position-info .info-page-a .info-side ul li .sell-type {\\n                  font-size: 27px !important; }\\n        #trade #trade-content .positionPage .position-info .info-page-a .info-side:first-child {\\n          border-right: solid 0.01333rem #f2f2f2; }\\n      #trade #trade-content .positionPage .position-info .info-page-b .detail-list-scroll {\\n        top: 4.26667rem;\\n        height: calc(100% - 1.33333rem - 1.06667rem - 1.06667rem - 0.8rem - 4.66667rem); }\\n      #trade #trade-content .positionPage .position-info .info-page-b .detail-item {\\n        padding: 0 0.4rem;\\n        display: flex;\\n        justify-content: space-between;\\n        background: #fff;\\n        height: 0.66667rem;\\n        align-items: center;\\n        border-bottom: solid 0.01333rem #f2f2f2; }\\n        #trade #trade-content .positionPage .position-info .info-page-b .detail-item span {\\n          flex: 1;\\n          text-align: center; }\\n        #trade #trade-content .positionPage .position-info .info-page-b .detail-item span:first-child {\\n          text-align: left; }\\n        #trade #trade-content .positionPage .position-info .info-page-b .detail-item span:last-child {\\n          text-align: right; }\\n      #trade #trade-content .positionPage .position-info .info-page-b .detail-title {\\n        height: 0.8rem;\\n        background: #fff; }\\n  #trade #trade-content .tradeCenterPage {\\n    height: calc(100% - 1.06667rem);\\n    background: #f2f2f2; }\\n    #trade #trade-content .tradeCenterPage .keyboard {\\n      position: absolute;\\n      bottom: 0;\\n      width: 100%;\\n      z-index: 10;\\n      border-top: solid 0.01333rem #f2f2f2; }\\n    #trade #trade-content .tradeCenterPage .keyboard1 {\\n      height: 6rem; }\\n    #trade #trade-content .tradeCenterPage .keyboard2 {\\n      height: 7.06667rem; }\\n    #trade #trade-content .tradeCenterPage .slide-up-enter-active, #trade #trade-content .tradeCenterPage .slide-up-leave-active {\\n      transition: height .3s ease-in-out 0s; }\\n    #trade #trade-content .tradeCenterPage .slide-up-enter, #trade #trade-content .tradeCenterPage .slide-up-leave-active {\\n      height: 0px; }\\n    #trade #trade-content .tradeCenterPage .total-info {\\n      background: #fff;\\n      height: 1.33333rem;\\n      font-size: 14px !important;\\n      color: #333;\\n      align-items: center;\\n      display: flex; }\\n      [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .total-info {\\n        font-size: 28px !important; }\\n      [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .total-info {\\n        font-size: 42px !important; }\\n      #trade #trade-content .tradeCenterPage .total-info .total-info-wrap {\\n        width: 100%;\\n        flex: 8.37;\\n        display: flex;\\n        justify-content: space-between;\\n        padding-left: 0.13333rem;\\n        align-items: center; }\\n        #trade #trade-content .tradeCenterPage .total-info .total-info-wrap .total-info-box {\\n          display: flex;\\n          flex-direction: column; }\\n          #trade #trade-content .tradeCenterPage .total-info .total-info-wrap .total-info-box .total-info-item {\\n            border-right: solid 0.01333rem #fff;\\n            display: flex;\\n            justify-content: space-between;\\n            align-items: center; }\\n            #trade #trade-content .tradeCenterPage .total-info .total-info-wrap .total-info-box .total-info-item .money-usd {\\n              color: #999999;\\n              font-size: 10px !important;\\n              font-weight: 500; }\\n              [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .total-info .total-info-wrap .total-info-box .total-info-item .money-usd {\\n                font-size: 20px !important; }\\n              [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .total-info .total-info-wrap .total-info-box .total-info-item .money-usd {\\n                font-size: 30px !important; }\\n          #trade #trade-content .tradeCenterPage .total-info .total-info-wrap .total-info-box .no-border {\\n            border: none; }\\n          #trade #trade-content .tradeCenterPage .total-info .total-info-wrap .total-info-box .total-info-title {\\n            color: #666;\\n            font-size: 12px !important;\\n            margin-right: 0.13333rem; }\\n            [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .total-info .total-info-wrap .total-info-box .total-info-title {\\n              font-size: 24px !important; }\\n            [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .total-info .total-info-wrap .total-info-box .total-info-title {\\n              font-size: 36px !important; }\\n          #trade #trade-content .tradeCenterPage .total-info .total-info-wrap .total-info-box .total-info-value {\\n            font-size: 12px !important;\\n            font-weight: bold; }\\n            [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .total-info .total-info-wrap .total-info-box .total-info-value {\\n              font-size: 24px !important; }\\n            [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .total-info .total-info-wrap .total-info-box .total-info-value {\\n              font-size: 36px !important; }\\n      #trade #trade-content .tradeCenterPage .total-info .arrow-icon {\\n        flex: 1;\\n        height: 100%;\\n        position: relative; }\\n      #trade #trade-content .tradeCenterPage .total-info .arrow-icon::before {\\n        content: '';\\n        position: absolute;\\n        border: solid 0.13333rem rgba(0, 0, 0, 0);\\n        border-top-color: #333;\\n        top: 50%;\\n        left: 50%;\\n        transform: translate(-50%, -50%); }\\n    #trade #trade-content .tradeCenterPage .layer2 {\\n      height: 2rem;\\n      background: #f2f2f2;\\n      display: flex;\\n      border-bottom: solid 0.01333rem #fff; }\\n      #trade #trade-content .tradeCenterPage .layer2 .layer2-side {\\n        flex: 1;\\n        color: #333; }\\n      #trade #trade-content .tradeCenterPage .layer2 .layer2-left {\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        border-right: solid 0.01333rem #fff; }\\n        #trade #trade-content .tradeCenterPage .layer2 .layer2-left .layer2-choose-btn {\\n          height: 1.2rem;\\n          width: 4.26667rem;\\n          background: #fff;\\n          border: solid 0.01333rem #fff;\\n          border-radius: 5px;\\n          display: flex;\\n          justify-content: space-between;\\n          align-items: center;\\n          padding: 0 0.4rem; }\\n          #trade #trade-content .tradeCenterPage .layer2 .layer2-left .layer2-choose-btn .layer2-btn-left {\\n            flex: 1;\\n            display: flex;\\n            flex-direction: column; }\\n            #trade #trade-content .tradeCenterPage .layer2 .layer2-left .layer2-choose-btn .layer2-btn-left .layer2-btn-name {\\n              white-space: nowrap;\\n              font-size: 16px !important; }\\n              [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer2 .layer2-left .layer2-choose-btn .layer2-btn-left .layer2-btn-name {\\n                font-size: 32px !important; }\\n              [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer2 .layer2-left .layer2-choose-btn .layer2-btn-left .layer2-btn-name {\\n                font-size: 48px !important; }\\n            #trade #trade-content .tradeCenterPage .layer2 .layer2-left .layer2-choose-btn .layer2-btn-left .layer2-btn-code {\\n              font-size: 12px !important; }\\n              [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer2 .layer2-left .layer2-choose-btn .layer2-btn-left .layer2-btn-code {\\n                font-size: 24px !important; }\\n              [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer2 .layer2-left .layer2-choose-btn .layer2-btn-left .layer2-btn-code {\\n                font-size: 36px !important; }\\n          #trade #trade-content .tradeCenterPage .layer2 .layer2-left .layer2-choose-btn .layer2-btn-right {\\n            flex: 1;\\n            position: relative; }\\n            #trade #trade-content .tradeCenterPage .layer2 .layer2-left .layer2-choose-btn .layer2-btn-right img {\\n              position: absolute;\\n              top: 50%;\\n              right: 0;\\n              transform: translateY(-50%);\\n              width: 0.45333rem;\\n              height: 0.45333rem; }\\n      #trade #trade-content .tradeCenterPage .layer2 .layer2-right {\\n        padding: 0.21333rem 0; }\\n        #trade #trade-content .tradeCenterPage .layer2 .layer2-right .layer2-right-item {\\n          padding: 0 0.4rem; }\\n          #trade #trade-content .tradeCenterPage .layer2 .layer2-right .layer2-right-item .info-title {\\n            margin-right: 0.26667rem;\\n            color: #e6e6e6; }\\n          #trade #trade-content .tradeCenterPage .layer2 .layer2-right .layer2-right-item .info-right {\\n            float: right; }\\n    #trade #trade-content .tradeCenterPage .layer3 {\\n      height: 1.33333rem;\\n      padding: 0.13333rem 0.4rem;\\n      background: #f2f2f2;\\n      display: flex;\\n      justify-content: space-between;\\n      color: #333;\\n      margin-bottom: 0.13333rem; }\\n      #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box {\\n        display: inline-block;\\n        width: 80%;\\n        height: 100%; }\\n        #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box {\\n          width: 100%;\\n          height: 100%;\\n          background: #1b1b26;\\n          display: flex;\\n          align-items: center;\\n          border: solid 0.01333rem #fff;\\n          border-radius: 5px; }\\n          #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-item {\\n            height: 100%;\\n            display: flex;\\n            align-items: center;\\n            justify-content: center; }\\n          #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-content {\\n            width: calc(100% - 1.33333rem - 1.33333rem);\\n            display: flex;\\n            justify-content: space-between;\\n            padding: 0 0.4rem; }\\n            #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-content .content-a {\\n              color: #e6e6e6;\\n              font-size: 14px !important; }\\n              [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-content .content-a {\\n                font-size: 28px !important; }\\n              [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-content .content-a {\\n                font-size: 42px !important; }\\n            #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-content .content-b {\\n              font-size: 18px !important; }\\n              [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-content .content-b {\\n                font-size: 36px !important; }\\n              [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-content .content-b {\\n                font-size: 54px !important; }\\n            #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-content .content-c {\\n              font-size: 12px !important; }\\n              [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-content .content-c {\\n                font-size: 24px !important; }\\n              [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-content .content-c {\\n                font-size: 36px !important; }\\n          #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-btn {\\n            width: 1.33333rem; }\\n            #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-btn img {\\n              width: 0.26667rem; }\\n          #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-btn:first-child {\\n            border-right: solid 0.01333rem #12121a; }\\n          #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box .trade-num-btn:last-child {\\n            border-left: solid 0.01333rem #12121a; }\\n        #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box2 {\\n          display: flex;\\n          justify-content: space-between;\\n          height: 100%; }\\n          #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box2 .trade-box2-item {\\n            flex: 1;\\n            border-radius: 5px;\\n            background: #1b1b26;\\n            display: flex;\\n            align-items: center;\\n            border: solid 0.01333rem #fff;\\n            padding: 0 0.13333rem;\\n            font-size: 14px !important;\\n            color: #e6e6e6;\\n            margin-right: 0.26667rem; }\\n            [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box2 .trade-box2-item {\\n              font-size: 28px !important; }\\n            [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box2 .trade-box2-item {\\n              font-size: 42px !important; }\\n            #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box2 .trade-box2-item span {\\n              flex: 1; }\\n            #trade #trade-content .tradeCenterPage .layer3 .layer3-left-box .trade-num-box2 .trade-box2-item input {\\n              flex: 2;\\n              color: #333; }\\n      #trade #trade-content .tradeCenterPage .layer3 .layer3-right-box {\\n        width: 13%;\\n        display: inline-block;\\n        height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        color: #1873f2;\\n        background: #1b1b26;\\n        border-radius: 5px;\\n        border: solid 0.01333rem #fff;\\n        font-size: 14px !important;\\n        position: relative; }\\n        [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer3 .layer3-right-box {\\n          font-size: 28px !important; }\\n        [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer3 .layer3-right-box {\\n          font-size: 42px !important; }\\n        #trade #trade-content .tradeCenterPage .layer3 .layer3-right-box .triangle-icon {\\n          position: absolute;\\n          width: 0;\\n          height: 0;\\n          border: solid 0.13333rem rgba(0, 0, 0, 0);\\n          border-bottom-color: #1873f2;\\n          transform: rotate(135deg);\\n          bottom: -0.01333rem;\\n          right: -0.02667rem; }\\n    #trade #trade-content .tradeCenterPage .layer4 {\\n      height: 1.6rem;\\n      padding: 0.13333rem 0.4rem;\\n      display: flex;\\n      justify-content: space-between;\\n      background: #f2f2f2;\\n      margin-bottom: 0.13333rem; }\\n      #trade #trade-content .tradeCenterPage .layer4 .layer4-btn {\\n        height: 100%;\\n        width: 4rem;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        align-items: center;\\n        border-radius: 100px;\\n        font-size: 14px !important;\\n        color: #333; }\\n        [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer4 .layer4-btn {\\n          font-size: 28px !important; }\\n        [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer4 .layer4-btn {\\n          font-size: 42px !important; }\\n        #trade #trade-content .tradeCenterPage .layer4 .layer4-btn .border-bottom {\\n          display: inline-block;\\n          height: 1px;\\n          width: 2.66667rem;\\n          background: #fff; }\\n      #trade #trade-content .tradeCenterPage .layer4 .layer4-buy-btn {\\n        background: #ff5959;\\n        border: solid 0.02667rem #ff6666; }\\n      #trade #trade-content .tradeCenterPage .layer4 .layer4-sell-btn {\\n        background: #39bf93;\\n        border: solid 0.02667rem #5ce6a1; }\\n    #trade #trade-content .tradeCenterPage .layer5 {\\n      margin-top: 0.26667rem;\\n      height: 1.06667rem;\\n      background: #fff;\\n      display: flex;\\n      align-items: stretch;\\n      color: #999999;\\n      font-weight: bold;\\n      font-size: 14px !important;\\n      border-bottom: solid 0.01333rem #f2f2f2 !important; }\\n      [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer5 {\\n        font-size: 28px !important; }\\n      [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer5 {\\n        font-size: 42px !important; }\\n      #trade #trade-content .tradeCenterPage .layer5 .mui-active {\\n        color: #333 !important;\\n        background: none; }\\n      #trade #trade-content .tradeCenterPage .layer5 .wait-order {\\n        position: relative; }\\n      #trade #trade-content .tradeCenterPage .layer5 .wait-order::before {\\n        content: '';\\n        position: absolute;\\n        border-radius: 50px;\\n        width: 0.16rem;\\n        height: 0.16rem;\\n        background: #ff4040;\\n        top: 0.26667rem;\\n        right: 0.66667rem; }\\n      #trade #trade-content .tradeCenterPage .layer5 a {\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        flex: 1; }\\n    #trade #trade-content .tradeCenterPage .layer6 {\\n      height: calc(100% - 1.06667rem - 1.33333rem - 2rem - 1.33333rem - 1.6rem - 1.06667rem - 0.26667rem); }\\n      #trade #trade-content .tradeCenterPage .layer6 .tab-item {\\n        height: 100%; }\\n        #trade #trade-content .tradeCenterPage .layer6 .tab-item .mui-scroll {\\n          width: initial;\\n          min-width: 100%; }\\n        #trade #trade-content .tradeCenterPage .layer6 .tab-item .nav-tab {\\n          height: 0.8rem;\\n          background: #fff;\\n          color: #999999;\\n          font-size: 14px !important;\\n          display: flex;\\n          align-items: center;\\n          border-bottom: solid 0.01333rem #f2f2f2; }\\n          [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer6 .tab-item .nav-tab {\\n            font-size: 28px !important; }\\n          [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer6 .tab-item .nav-tab {\\n            font-size: 42px !important; }\\n          #trade #trade-content .tradeCenterPage .layer6 .tab-item .nav-tab .mui-scroll {\\n            height: 100%; }\\n          #trade #trade-content .tradeCenterPage .layer6 .tab-item .nav-tab span {\\n            display: inline-block;\\n            text-align: left; }\\n          #trade #trade-content .tradeCenterPage .layer6 .tab-item .nav-tab .tab-item {\\n            padding: 0 0.4rem;\\n            display: flex;\\n            align-items: center; }\\n          #trade #trade-content .tradeCenterPage .layer6 .tab-item .nav-tab .list-item {\\n            padding: 0 0.4rem; }\\n        #trade #trade-content .tradeCenterPage .layer6 .tab-item .scroll-list {\\n          top: 0.8rem;\\n          height: calc(100% - 0.8rem);\\n          position: relative; }\\n          #trade #trade-content .tradeCenterPage .layer6 .tab-item .scroll-list .mui-scroll {\\n            background: #fff; }\\n          #trade #trade-content .tradeCenterPage .layer6 .tab-item .scroll-list .list-item {\\n            padding: 0 0.4rem;\\n            min-height: 1.06667rem;\\n            background: #fff;\\n            color: #333;\\n            font-size: 14px !important;\\n            display: flex;\\n            align-items: center;\\n            border-bottom: solid 0.01333rem #f2f2f2; }\\n            [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer6 .tab-item .scroll-list .list-item {\\n              font-size: 28px !important; }\\n            [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer6 .tab-item .scroll-list .list-item {\\n              font-size: 42px !important; }\\n            #trade #trade-content .tradeCenterPage .layer6 .tab-item .scroll-list .list-item span {\\n              display: inline-block;\\n              text-align: left; }\\n          #trade #trade-content .tradeCenterPage .layer6 .tab-item .scroll-list .option-item {\\n            height: 1.06667rem;\\n            background: #f2f2f2;\\n            display: flex;\\n            position: relative; }\\n            #trade #trade-content .tradeCenterPage .layer6 .tab-item .scroll-list .option-item .option-wrap {\\n              width: 100%;\\n              height: 100%;\\n              display: flex;\\n              justify-content: center;\\n              padding: 0.13333rem 0.66667rem; }\\n              #trade #trade-content .tradeCenterPage .layer6 .tab-item .scroll-list .option-item .option-wrap span {\\n                display: flex;\\n                justify-content: center;\\n                align-items: center;\\n                background: #fff;\\n                height: 100%;\\n                width: 1.73333rem;\\n                border-radius: 0.13333rem;\\n                margin: 0 0.06667rem; }\\n          #trade #trade-content .tradeCenterPage .layer6 .tab-item .scroll-list .select-item {\\n            background: #fafafa; }\\n        #trade #trade-content .tradeCenterPage .layer6 .tab-item .scroll-list-small {\\n          height: calc(100% - 0.8rem - 1.06667rem); }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab1 .tab-item1 {\\n        width: 2.62667rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab1 .tab-item2 {\\n        width: 1.06667rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab1 .tab-item3 {\\n        width: 1.06667rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab1 .tab-item4 {\\n        min-width: 2.13333rem;\\n        max-width: 2.53333rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab1 .tab-item5 {\\n        min-width: 2.13333rem;\\n        width: 3.70667rem;\\n        display: flex;\\n        flex-direction: column; }\\n        #trade #trade-content .tradeCenterPage .layer6 #tab1 .tab-item5 .rmb-price {\\n          font-size: 12px !important; }\\n          [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer6 #tab1 .tab-item5 .rmb-price {\\n            font-size: 24px !important; }\\n          [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer6 #tab1 .tab-item5 .rmb-price {\\n            font-size: 36px !important; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab2 .tab-item1 {\\n        width: 2.62667rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab2 .tab-item2 {\\n        width: 1.06667rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab2 .tab-item3 {\\n        width: 2.53333rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab2 .tab-item4 {\\n        width: 1.33333rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab2 .tab-item5 {\\n        width: 1.33333rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab2 .tab-item6 {\\n        width: 3.50667rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab2 .tab-item-time {\\n        font-size: 14px !important; }\\n        [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer6 #tab2 .tab-item-time {\\n          font-size: 28px !important; }\\n        [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer6 #tab2 .tab-item-time {\\n          font-size: 42px !important; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab3 .tab-item1 {\\n        width: 2.62667rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab3 .tab-item2 {\\n        width: 2.53333rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab3 .tab-item3 {\\n        width: 1.06667rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab3 .tab-item4 {\\n        width: 1.33333rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab3 .tab-item5 {\\n        width: 1.33333rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab3 .tab-item6 {\\n        width: 1.46667rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab3 .tab-item7 {\\n        width: 1.33333rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab3 .tab-item8 {\\n        width: 3.50667rem;\\n        font-size: 12px !important; }\\n        [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer6 #tab3 .tab-item8 {\\n          font-size: 24px !important; }\\n        [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer6 #tab3 .tab-item8 {\\n          font-size: 36px !important; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab3 .tab-item-time {\\n        font-size: 14px !important; }\\n        [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer6 #tab3 .tab-item-time {\\n          font-size: 28px !important; }\\n        [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer6 #tab3 .tab-item-time {\\n          font-size: 42px !important; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab4 .tab-item1 {\\n        width: 2.62667rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab4 .tab-item2 {\\n        width: 1.06667rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab4 .tab-item3 {\\n        width: 2.53333rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab4 .tab-item4 {\\n        width: 1.33333rem; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab4 .tab-item5 {\\n        width: 3.50667rem;\\n        font-size: 12px !important; }\\n        [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer6 #tab4 .tab-item5 {\\n          font-size: 24px !important; }\\n        [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer6 #tab4 .tab-item5 {\\n          font-size: 36px !important; }\\n      #trade #trade-content .tradeCenterPage .layer6 #tab4 .tab-item-time {\\n        font-size: 14px !important; }\\n        [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer6 #tab4 .tab-item-time {\\n          font-size: 28px !important; }\\n        [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer6 #tab4 .tab-item-time {\\n          font-size: 42px !important; }\\n    #trade #trade-content .tradeCenterPage .layer7 {\\n      height: 1.33333rem;\\n      display: flex;\\n      justify-content: center;\\n      font-size: 18px !important;\\n      padding: 0.13333rem;\\n      background: #fff; }\\n      [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer7 {\\n        font-size: 36px !important; }\\n      [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer7 {\\n        font-size: 54px !important; }\\n      #trade #trade-content .tradeCenterPage .layer7 .btn1 {\\n        width: 49%;\\n        flex: 1;\\n        background: #ff5959;\\n        color: #fff;\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        margin-right: 0.13333rem; }\\n        #trade #trade-content .tradeCenterPage .layer7 .btn1 .btn-small {\\n          font-size: 14px !important; }\\n          [data-dpr=\\\"2\\\"] #trade #trade-content .tradeCenterPage .layer7 .btn1 .btn-small {\\n            font-size: 28px !important; }\\n          [data-dpr=\\\"3\\\"] #trade #trade-content .tradeCenterPage .layer7 .btn1 .btn-small {\\n            font-size: 42px !important; }\\n      #trade #trade-content .tradeCenterPage .layer7 .btn1-no {\\n        background: #f2f2f2;\\n        color: #999999; }\\n      #trade #trade-content .tradeCenterPage .layer7 .btn2 {\\n        width: 49%;\\n        flex: 1;\\n        background: #1873f2;\\n        color: #fff;\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        margin-left: 0.13333rem; }\\n\\n#capitalInfoLayer .layer-content {\\n  height: calc(100% - 1.33333rem);\\n  flex-direction: column;\\n  align-items: stretch;\\n  justify-content: space-between;\\n  padding: 0.4rem; }\\n  #capitalInfoLayer .layer-content .capital-item {\\n    display: flex;\\n    align-items: center;\\n    flex-direction: column;\\n    justify-content: flex-start; }\\n    #capitalInfoLayer .layer-content .capital-item .capital-item-box {\\n      display: flex;\\n      width: 100%;\\n      justify-content: flex-start;\\n      align-items: center; }\\n    #capitalInfoLayer .layer-content .capital-item .capital-item-icon {\\n      height: 0.32rem;\\n      width: 0.32rem;\\n      margin-right: 0.13333rem; }\\n    #capitalInfoLayer .layer-content .capital-item .capital-item-title {\\n      flex: 1;\\n      display: flex;\\n      justify-content: flex-start;\\n      align-items: center;\\n      color: #999999; }\\n    #capitalInfoLayer .layer-content .capital-item .capital-item-value {\\n      flex: 2;\\n      display: flex;\\n      align-items: center;\\n      justify-content: flex-start;\\n      color: #333; }\\n      #capitalInfoLayer .layer-content .capital-item .capital-item-value .money-usd {\\n        color: #999999;\\n        font-weight: 500; }\\n  #capitalInfoLayer .layer-content .capital-type {\\n    justify-content: flex-end;\\n    align-items: center;\\n    flex-direction: row;\\n    font-size: 12px !important; }\\n    [data-dpr=\\\"2\\\"] #capitalInfoLayer .layer-content .capital-type {\\n      font-size: 24px !important; }\\n    [data-dpr=\\\"3\\\"] #capitalInfoLayer .layer-content .capital-type {\\n      font-size: 36px !important; }\\n    #capitalInfoLayer .layer-content .capital-type span {\\n      display: flex; }\\n    #capitalInfoLayer .layer-content .capital-type .radio-box {\\n      display: block;\\n      background: #fff;\\n      border: solid 0.02667rem #999999;\\n      width: 0.46667rem;\\n      height: 0.46667rem;\\n      margin-right: 0.13333rem;\\n      margin-left: 0.13333rem;\\n      border-radius: 0.13333rem;\\n      position: relative; }\\n      #capitalInfoLayer .layer-content .capital-type .radio-box img {\\n        position: absolute;\\n        top: 50%;\\n        left: 50%;\\n        transform: translate(-50%, -50%);\\n        width: 0.24rem;\\n        height: 0.16rem; }\\n    #capitalInfoLayer .layer-content .capital-type .radio-box-active {\\n      background: #1873f2;\\n      border: none; }\\n\\n#balanceInfoLayer .layer-content {\\n  flex-direction: column; }\\n  #balanceInfoLayer .layer-content .layer-tips {\\n    color: #999999;\\n    font-size: 12px !important; }\\n    [data-dpr=\\\"2\\\"] #balanceInfoLayer .layer-content .layer-tips {\\n      font-size: 24px !important; }\\n    [data-dpr=\\\"3\\\"] #balanceInfoLayer .layer-content .layer-tips {\\n      font-size: 36px !important; }\\n\\n#changeOrderLayer .layer-content {\\n  display: flex;\\n  padding: 0.4rem;\\n  flex-direction: column;\\n  justify-content: space-between; }\\n  #changeOrderLayer .layer-content .change-order-item {\\n    background: #fff;\\n    display: flex;\\n    height: 45%;\\n    align-items: center;\\n    padding: 0 0.26667rem;\\n    border-radius: 0.13333rem; }\\n    #changeOrderLayer .layer-content .change-order-item span {\\n      flex: 1; }\\n    #changeOrderLayer .layer-content .change-order-item input {\\n      flex: 2;\\n      padding: 0 0.4rem 0 0;\\n      background: #f2f2f2 !important; }\\n\\n#topPopover {\\n  width: 2.13333rem; }\\n  #topPopover .mui-scroll-wrapper {\\n    overflow: inherit;\\n    margin: 0; }\\n  #topPopover .mui-popover-arrow:after {\\n    background: #f2f2f2; }\\n  #topPopover .hidden-menu-list {\\n    border: solid 0.01333rem #fff;\\n    border-bottom: none;\\n    background: #f2f2f2;\\n    border-radius: 5px;\\n    overflow: hidden;\\n    font-size: 14px !important; }\\n    [data-dpr=\\\"2\\\"] #topPopover .hidden-menu-list {\\n      font-size: 28px !important; }\\n    [data-dpr=\\\"3\\\"] #topPopover .hidden-menu-list {\\n      font-size: 42px !important; }\\n    #topPopover .hidden-menu-list .hidden-menu-item {\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      height: 1.06667rem;\\n      color: #333;\\n      border-bottom: solid 0.01333rem #fff; }\\n\\n#redLayer .layer-content {\\n  flex-direction: column;\\n  padding: 0 0.4rem; }\\n  #redLayer .layer-content .red-box {\\n    margin-top: 0.13333rem;\\n    width: 100%;\\n    height: 2rem;\\n    background: #ff4c5b;\\n    border-radius: 0.26667rem;\\n    box-shadow: inset 0px 20px 21px -13px #bb3a44;\\n    position: relative;\\n    overflow: hidden;\\n    display: flex; }\\n    #redLayer .layer-content .red-box .red-content {\\n      flex: 1;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      color: #fff;\\n      font-size: 13px !important; }\\n      [data-dpr=\\\"2\\\"] #redLayer .layer-content .red-box .red-content {\\n        font-size: 26px !important; }\\n      [data-dpr=\\\"3\\\"] #redLayer .layer-content .red-box .red-content {\\n        font-size: 39px !important; }\\n      #redLayer .layer-content .red-box .red-content .red-price {\\n        font-size: 30px !important; }\\n        [data-dpr=\\\"2\\\"] #redLayer .layer-content .red-box .red-content .red-price {\\n          font-size: 60px !important; }\\n        [data-dpr=\\\"3\\\"] #redLayer .layer-content .red-box .red-content .red-price {\\n          font-size: 90px !important; }\\n    #redLayer .layer-content .red-box .circle {\\n      display: block;\\n      width: 0.32rem;\\n      height: 0.32rem;\\n      background: #fff;\\n      border-radius: 40px;\\n      position: absolute;\\n      left: 50%;\\n      transform: translateX(-50%); }\\n    #redLayer .layer-content .red-box .circle1 {\\n      top: -0.16rem; }\\n    #redLayer .layer-content .red-box .circle2 {\\n      bottom: -0.16rem; }\\n    #redLayer .layer-content .red-box .line {\\n      display: block;\\n      position: absolute;\\n      left: 50%;\\n      top: 50%;\\n      height: 80%;\\n      transform: translate(-50%, -50%); }\\n\\n#tradeLoginLayer2 .layer-content {\\n  flex-direction: column; }\\n  #tradeLoginLayer2 .layer-content span {\\n    line-height: 1; }\\n  #tradeLoginLayer2 .layer-content span:last-child {\\n    color: #999999;\\n    font-size: 12px !important; }\\n    [data-dpr=\\\"2\\\"] #tradeLoginLayer2 .layer-content span:last-child {\\n      font-size: 24px !important; }\\n    [data-dpr=\\\"3\\\"] #tradeLoginLayer2 .layer-content span:last-child {\\n      font-size: 36px !important; }\\n\\n#stopProfitLossLayer .tab-item {\\n  height: 1.06667rem !important; }\\n  #stopProfitLossLayer .tab-item .item-flex {\\n    padding: 0.06667rem 0.13333rem; }\\n    #stopProfitLossLayer .tab-item .item-flex .option-box {\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      width: 1.33333rem;\\n      height: 90%;\\n      background: #f2f2f2 !important;\\n      border-radius: 5px;\\n      position: relative;\\n      text-align: center;\\n      margin-right: 0.13333rem !important; }\\n      #stopProfitLossLayer .tab-item .item-flex .option-box select {\\n        background: inherit;\\n        width: 100%;\\n        text-align: center;\\n        text-align-last: center; }\\n    #stopProfitLossLayer .tab-item .item-flex .triangle {\\n      position: relative; }\\n    #stopProfitLossLayer .tab-item .item-flex .triangle::before {\\n      content: '';\\n      position: absolute;\\n      bottom: 0;\\n      right: 0;\\n      border: solid 0.13333rem rgba(0, 0, 0, 0);\\n      border-top-color: #999999;\\n      transform: rotate(-45deg); }\\n    #stopProfitLossLayer .tab-item .item-flex .no-background {\\n      background: none !important; }\\n    #stopProfitLossLayer .tab-item .item-flex input {\\n      font-size: 14px !important; }\\n      [data-dpr=\\\"2\\\"] #stopProfitLossLayer .tab-item .item-flex input {\\n        font-size: 28px !important; }\\n      [data-dpr=\\\"3\\\"] #stopProfitLossLayer .tab-item .item-flex input {\\n        font-size: 42px !important; }\\n  #stopProfitLossLayer .tab-item .item-between {\\n    justify-content: flex-start !important; }\\n\\n.no-margin {\\n  margin: none !important; }\\n\\n.no-padding {\\n  padding: 0; }\\n\\n.layer-box .layer-tabs {\\n  display: block;\\n  padding: 0 0;\\n  height: calc(100% - 1.33333rem); }\\n  .layer-box .layer-tabs .layer-header-tab {\\n    color: #999999;\\n    height: 1.33333rem;\\n    display: flex;\\n    align-items: stretch;\\n    border-bottom: solid 0.01333rem #f2f2f2;\\n    font-size: 16px !important;\\n    font-weight: bold; }\\n    [data-dpr=\\\"2\\\"] .layer-box .layer-tabs .layer-header-tab {\\n      font-size: 32px !important; }\\n    [data-dpr=\\\"3\\\"] .layer-box .layer-tabs .layer-header-tab {\\n      font-size: 48px !important; }\\n    .layer-box .layer-tabs .layer-header-tab span {\\n      flex: 1;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center; }\\n  .layer-box .layer-tabs .layer-header-tab-active {\\n    color: #333;\\n    position: relative; }\\n  .layer-box .layer-tabs .layer-header-tab-active::before {\\n    content: '';\\n    position: absolute;\\n    bottom: 0.13333rem;\\n    width: 0.46667rem;\\n    height: 0.08rem;\\n    background: #1873f2; }\\n  .layer-box .layer-tabs .layer-tab-item {\\n    height: calc(100% - 1.33333rem); }\\n    .layer-box .layer-tabs .layer-tab-item .tab-item {\\n      display: flex;\\n      height: 33.3333333333%;\\n      border-bottom: solid 0.01333rem #f2f2f2; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .item-title {\\n        width: 1.2rem;\\n        padding: 0 !important; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .border-right {\\n        border-right: solid 0.01333rem #f2f2f2; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .item-flex {\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        height: 100%; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .input-box {\\n        width: 2.66667rem;\\n        height: 100%;\\n        padding-right: 0 !important;\\n        padding-left: 0 !important;\\n        border: none; }\\n        .layer-box .layer-tabs .layer-tab-item .tab-item .input-box input {\\n          border: none;\\n          margin-right: 0 !important;\\n          width: 100%;\\n          height: 100%;\\n          background: #f2f2f2 !important;\\n          border-radius: 5px;\\n          text-align: center; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .handNum-box {\\n        margin-left: 0.13333rem;\\n        border-left: solid 0.01333rem #f2f2f2; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .no-border {\\n        border-bottom: none; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .item-flex-right {\\n        display: flex;\\n        justify-content: space-around; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .item-flex-1 {\\n        flex: 1; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .item-flex-2 {\\n        flex: 2; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .item-flex-3 {\\n        flex: 3; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .item-flex-4 {\\n        flex: 4; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .item-flex-5 {\\n        flex: 5; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .input-wrap {\\n        width: 2rem;\\n        height: 90%;\\n        background: #1b1b26 !important;\\n        border-radius: 2.7174px;\\n        border: 0.01333rem solid #14151d !important;\\n        margin: 0 !important;\\n        font-size: 14px !important;\\n        text-align: center;\\n        padding-top: 0;\\n        padding-bottom: 0; }\\n        [data-dpr=\\\"2\\\"] .layer-box .layer-tabs .layer-tab-item .tab-item .input-wrap {\\n          font-size: 28px !important; }\\n        [data-dpr=\\\"3\\\"] .layer-box .layer-tabs .layer-tab-item .tab-item .input-wrap {\\n          font-size: 42px !important; }\\n      .layer-box .layer-tabs .layer-tab-item .tab-item .margin-right {\\n        margin-right: 0.26667rem !important; }\\n\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack:///./PQ/pages/quato/quatoDetail/quatoDetail.scss?./node_modules/_css-loader@1.0.1@css-loader!./node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js");

/***/ }),

/***/ "./node_modules/_css-loader@1.0.1@css-loader/lib/css-base.js":
/*!*******************************************************************!*\
  !*** ./node_modules/_css-loader@1.0.1@css-loader/lib/css-base.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n//# sourceURL=webpack:///./node_modules/_css-loader@1.0.1@css-loader/lib/css-base.js?");

/***/ }),

/***/ "./node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js":
/*!*************************************************************************!*\
  !*** ./node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/_style-loader@0.21.0@style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///./node_modules/_style-loader@0.21.0@style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/_style-loader@0.21.0@style-loader/lib/urls.js":
/*!********************************************************************!*\
  !*** ./node_modules/_style-loader@0.21.0@style-loader/lib/urls.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack:///./node_modules/_style-loader@0.21.0@style-loader/lib/urls.js?");

/***/ })

/******/ });